class parameters{constructor(id){this.id=id,this.buttonContent=null,this.content=null,this.consts=null,this.vars=null,this.question=null,this.shortQ=null,this.answer=null,this.value=null,this.keys=null,this.figure=null,this.nbvars=0,this.nbconsts=0,this.modals={},this.options=null,this.panelList={Constantes:"consts",Variables:"vars",Question:"question","Question courte":"shortQ","Réponse":"answer","Valeur attendue":"value",Figure:"figure",Clavier:"keys"},this.createButtons(),this.createActions()}export(){return!1}import(){return!1}createButtons(){let container=document.getElementById(this.id),divButtons=document.createElement("div");divButtons.id=this.id+"Buttons",divButtons.className="paramsButtons";for(const z in this.panelList){let span=document.createElement("span");span.innerText=z,divButtons.appendChild(span)}container.appendChild(divButtons),this.buttonContent=divButtons;let div=document.createElement("div");div.id=this.id+"Content",container.appendChild(div),this.content=document.getElementById(div.id)}addLine(el,type=!1){let elementType=el.dataset.data,line='<div class="champ" contenteditable="true"> <div>';"consts"===elementType?line='<div class="ligne"><span class="nom" contenteditable="true" title="Nom unique"> </span><span class="valedit"><span class="value" title="valeur" contenteditable="true"></span><span class=\'supprthis\' contenteditable="false">-</span></span><button> + </button></div>':"vars"===elementType&&(type?"liste"===type?line='<div class="ligne"><span class="nom" contenteditable="true" title="Nom unique"> </span><span class="valedit"><span class="value" title="valeur" contenteditable="true"></span><span class=\'supprthis\' contenteditable="false">-</span></span><button> + </button></div>':"entier"===type?line='<div class="ligne"><span class="nom" contenteditable="true" title="Nom unique"> </span>\n                min :<span class="min" title="minimum" contenteditable="true"></span>\n                max : <span class="max" title="maximum" contenteditable="true"></span>\n                qté : <span class="qty" title="Nombre de valeurs" contenteditable="true"></span>\n                éviter : <span class="avoid" title="Valeurs à éviter, séparées de virgules. & : pas de doublon, prime : pas de nb premier" contenteditable="true"></span>\n                </div>':"decimal"===type&&(line='<div class="ligne"><span class="nom" contenteditable="true" title="Nom unique"> </span>\n                min :<span class="min" title="minimum" contenteditable="true"></span>\n                max : <span class="max" title="maximum" contenteditable="true"></span>\n                préc : <span class="precision" title="Précision, en nombre après la virgule (peut être négatifs pour les dizaines, ceintaires...)" contenteditable="true"></span>\n                qté : <span class="qty" title="Nombre de valeurs" contenteditable="true"></span>\n                éviter : <span class="avoid" title="Valeurs à éviter, séparées de virgules. & : pas de doublon, prime : pas de nb premier" contenteditable="true"></span>\n                </div>'):line='<div class="ligne"><span class="nom" contenteditable="true" title="Nom unique"> </span><span class="value" title="Valeur/formule" contenteditable="true"> </span></div>'),el.innerHTML+=line}createActions(){this.content.onblur=evt=>{console.log(evt.target)},this.content.onclick=evt=>{if("+"===evt.target.innerHTML)this.addLine(evt.target.parentNode.parentNode);else if(" × "===evt.target.innerHTML){if(confirm("Ceci va supprimer toutes les donnéess de "+evt.target.parentNode.firstChild.nodeValue+".\nConfirmer ?")){let el=evt.target.parentNode.parentNode;this[el.dataset.data]=null,el.parentNode.removeChild(el)}}else if(" + "===evt.target.innerHTML){let spancontainer=document.createElement("span");spancontainer.className="valedit";let span=document.createElement("span");span.className="value",span.title="valeur",span.contentEditable=!0;let supprthis=document.createElement("span");supprthis.className="supprthis",supprthis.innerHTML="-",supprthis.contentEditable=!1,spancontainer.appendChild(span),spancontainer.appendChild(supprthis);let el=evt.target.parentNode;el.insertBefore(spancontainer,el.children[el.children.length-1])}else if("supprthis"===evt.target.className){let el=evt.target.parentNode;el.parentNode.removeChild(el)}},this.buttonContent.onclick=evt=>{let type=evt.target.innerText;switch(this.createPanel(type),type){case"Constantes":case"Variables":break;default:return!1}}}createPanel(label){let shortID=this.panelList[label];if(null!==this[shortID])return;this[shortID]={};let fieldset=document.createElement("fieldset");fieldset.classList.add("add"),fieldset.id=this.id+shortID,fieldset.dataset.data=shortID;let legend=document.createElement("legend");legend.innerText=label,fieldset.appendChild(legend);let button=document.createElement("button");button.innerHTML="+";let close=document.createElement("button");switch(close.className="close",close.innerHTML=" × ",shortID){case"consts":case"vars":case"question":case"shortQ":case"answer":legend.appendChild(button);break;case"value":case"keys":break;case"figure":legend.appendChild(button);break;default:console.log("panel non créé")}legend.appendChild(close),this.addLine(fieldset),this.content.appendChild(fieldset)}}class subActivity{constructor(titre){this.title=String(titre),this.params=new parameters}}class activity{constructor(){this.id="global",this.title="My Title",this.description="",this.dest=[],this.ID="developpement",this.type="latex",this.params=new parameters(this.id),this.options=null}set typeAct(value){if(!(["text","latex"].indexOf(value)>-1))return!1;this.type=value}get typeAct(){return this.type}addSection(){null===this.options&&(this.options=[]);let block=document.createElement("blockquote");block.id="section"+this.options.length,document.getElementById("options").appendChild(block),this.options.push(new section(block.id))}}class section{constructor(id){this.id=id,this.sectionName=null,this.params=new parameters(id)}set name(name){this.sectionName=name}get name(){return this.sectionName}remove(){}}class modal{constructor(type,id,func){this.type=type,this.id=id,this.createWindow(),this.feedback=func}createWindow(nom,id){this.fen=document.createElement("div"),this.fen.id=this.id,this.fen.innerHTML=`\n        <button class="fermer" onclick="document.getElementById('${this.id}').classList.add('closed')"> × </button>\n        Nom : <input type="text" id="nom" value="${nom||""}" placeholder='Nom de la ${this.type}.'><br>\n        Type : <select>\n            <option>tableau</option>\n            <option>entier aléatoire</option>\n            <option>décimal aléatoire</option>\n            <option>chaine</option>\n            </select><br>\n            <button onclick="">Valider</button>\n        `,this.fen.classList.add("modal"),document.body.appendChild(this.fen)}open(){document.getElementById(this.id).classList.remove("closed")}destroy(){this.fen.parentNode.removeChild(this.fen)}}let act;window.onload=()=>{act=new activity,document.getElementById("btnAddSection").onclick=()=>{act.addSection()}};