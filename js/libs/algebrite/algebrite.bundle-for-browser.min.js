!function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,(function(r){var n;return o(e[i][1][r]||r)}),p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r}()({1:[function(require,module,exports){(function(){var $,ABS,ADD,ADJ,AND,APPROXRATIO,ARCCOS,ARCCOSH,ARCSIN,ARCSINH,ARCTAN,ARCTANH,ARG,ASSUME_REAL_VARIABLES,ATOMIZE,AUTOEXPAND,BAKE,BESSELJ,BESSELY,BINDING,BINOMIAL,BINOM_check_args,BUF,C1,C2,C3,C4,C5,C6,CEILING,CHECK,CHOOSE,CIRCEXP,CLEAR,CLEARALL,CLEARPATTERNS,CLOCK,COEFF,COFACTOR,CONDENSE,CONJ,CONS,CONTRACT,COS,COSH,Condense,DEBUG,DEBUG_ABS,DEBUG_ARG,DEBUG_CLOCKFORM,DEBUG_IMAG,DEBUG_IS,DEBUG_POWER,DEBUG_RECT,DECOMP,DEFINT,DEGREE,DENOMINATOR,DERIVATIVE,DET,DET_check_arg,DIM,DIRAC,DIVISORS,DO,DOT,DOUBLE,DRAW,DRAWX,DSOLVE,E,EIGEN,EIGENVAL,EIGENVEC,EIG_N,EIG_check_arg,EIG_yydd,EIG_yyqq,ERF,ERFC,EVAL,EXP,EXPAND,EXPCOS,EXPSIN,Eval,Eval_Eval,Eval_abs,Eval_add,Eval_adj,Eval_and,Eval_approxratio,Eval_arccos,Eval_arccosh,Eval_arcsin,Eval_arcsinh,Eval_arctan,Eval_arctanh,Eval_arg,Eval_besselj,Eval_bessely,Eval_binding,Eval_binomial,Eval_ceiling,Eval_check,Eval_choose,Eval_circexp,Eval_clear,Eval_clearall,Eval_clearpatterns,Eval_clock,Eval_coeff,Eval_cofactor,Eval_condense,Eval_conj,Eval_cons,Eval_contract,Eval_cos,Eval_cosh,Eval_decomp,Eval_defint,Eval_degree,Eval_denominator,Eval_derivative,Eval_det,Eval_dim,Eval_dirac,Eval_divisors,Eval_do,Eval_dsolve,Eval_eigen,Eval_eigenval,Eval_eigenvec,Eval_erf,Eval_erfc,Eval_exp,Eval_expand,Eval_expcos,Eval_expsin,Eval_factor,Eval_factorial,Eval_factorpoly,Eval_filter,Eval_float,Eval_floor,Eval_for,Eval_function_reference,Eval_gamma,Eval_gcd,Eval_hermite,Eval_hilbert,Eval_imag,Eval_index,Eval_inner,Eval_integral,Eval_inv,Eval_invg,Eval_isinteger,Eval_isprime,Eval_laguerre,Eval_lcm,Eval_leading,Eval_legendre,Eval_log,Eval_lookup,Eval_mod,Eval_multiply,Eval_noexpand,Eval_not,Eval_nroots,Eval_number,Eval_numerator,Eval_operator,Eval_or,Eval_outer,Eval_pattern,Eval_patternsinfo,Eval_polar,Eval_power,Eval_predicate,Eval_prime,Eval_print,Eval_print2dascii,Eval_printcomputer,Eval_printhuman,Eval_printlatex,Eval_printlist,Eval_product,Eval_quote,Eval_quotient,Eval_rank,Eval_rationalize,Eval_real,Eval_rect,Eval_roots,Eval_round,Eval_setq,Eval_sgn,Eval_shape,Eval_silentpattern,Eval_simfac,Eval_simplify,Eval_sin,Eval_sinh,Eval_sqrt,Eval_stop,Eval_subst,Eval_sum,Eval_sym,Eval_symbolsinfo,Eval_tan,Eval_tanh,Eval_taylor,Eval_tensor,Eval_test,Eval_testeq,Eval_testge,Eval_testgt,Eval_testle,Eval_testlt,Eval_transpose,Eval_unit,Eval_user_function,Eval_zero,Evalpoly,FACTOR,FACTORIAL,FACTORPOLY,FILTER,FLOATF,FLOOR,FOR,FORCE_FIXED_PRINTOUT,FUNCTION,Find,GAMMA,GCD,HERMITE,HILBERT,IMAG,INDEX,INNER,INTEGRAL,INV,INVG,INV_check_arg,INV_decomp,ISINTEGER,ISPRIME,LAGUERRE,LAST,LAST_2DASCII_PRINT,LAST_FULL_PRINT,LAST_LATEX_PRINT,LAST_LIST_PRINT,LAST_PLAIN_PRINT,LAST_PRINT,LCM,LEADING,LEGENDRE,LOG,LOOKUP,M,MAXDIM,MAXPRIMETAB,MAX_CONSECUTIVE_APPLICATIONS_OF_ALL_RULES,MAX_CONSECUTIVE_APPLICATIONS_OF_SINGLE_RULE,MAX_FIXED_PRINTOUT_DIGITS,MAX_PROGRAM_SIZE,MEQUAL,METAA,METAB,METAX,MLENGTH,MOD,MSIGN,MULTIPLY,MZERO,N,NIL,NOT,NROOTS,NROOTS_ABS,NROOTS_DELTA,NROOTS_EPSILON,NROOTS_RANDOM,NROOTS_YMAX,NROOTS_divpoly,NSYM,NUM,NUMBER,NUMERATOR,OPERATOR,OR,OUTER,PATTERN,PATTERNSINFO,PI,POLAR,POWER,PRIME,PRINT,PRINT2DASCII,PRINTFULL,PRINTLATEX,PRINTLIST,PRINTMODE_2DASCII,PRINTMODE_COMPUTER,PRINTMODE_HUMAN,PRINTMODE_LATEX,PRINTMODE_LIST,PRINTOUTRESULT,PRINTPLAIN,PRINT_LEAVE_E_ALONE,PRINT_LEAVE_X_ALONE,PRODUCT,QUOTE,QUOTIENT,RANK,RATIONALIZE,REAL,ROOTS,ROUND,SECRETX,SELFTEST,SETQ,SGN,SHAPE,SILENTPATTERN,SIMPLIFY,SIN,SINH,SPACE_BETWEEN_COLUMNS,SPACE_BETWEEN_ROWS,SQRT,STOP,STR,SUBST,SUM,SYM,SYMBOLSINFO,SYMBOL_A,SYMBOL_A_UNDERSCORE,SYMBOL_B,SYMBOL_B_UNDERSCORE,SYMBOL_C,SYMBOL_D,SYMBOL_I,SYMBOL_IDENTITY_MATRIX,SYMBOL_J,SYMBOL_N,SYMBOL_R,SYMBOL_S,SYMBOL_T,SYMBOL_X,SYMBOL_X_UNDERSCORE,SYMBOL_Y,SYMBOL_Z,TAN,TANH,TAYLOR,TENSOR,TEST,TESTEQ,TESTGE,TESTGT,TESTLE,TESTLT,TIMING_DEBUGS,TOS,TRACE,TRANSPOSE,T_DOUBLE,T_EQ,T_FUNCTION,T_GTEQ,T_INTEGER,T_LTEQ,T_NEQ,T_NEWLINE,T_QUOTASSIGN,T_STRING,T_SYMBOL,U,UNIT,USR_SYMBOLS,VERSION,YMAX,YYE,YYRECT,ZERO,__emit_char,__emit_str,__factor_add,__factorial,__is_negative,__is_radical_number,__lcm,__legendre,__legendre2,__legendre3,__normalize_radical_factors,__rationalize_tensor,_print,abs,absValFloat,absval,absval_tensor,add,addSymbolLeftOfAssignment,addSymbolRightOfAssignment,add_all,add_factor_to_accumulator,add_numbers,add_terms,addf,adj,alloc_tensor,allocatedId,any_denominators,approxAll,approxLogs,approxLogsOfRationals,approxOneRatioOnly,approxRadicals,approxRadicalsOfRationals,approxRationalsOfLogs,approxRationalsOfPowersOfE,approxRationalsOfPowersOfPI,approxRationalsOfRadicals,approxSineOfRationalMultiplesOfPI,approxSineOfRationals,approxTrigonometric,approx_just_an_integer,approx_logarithmsOfRationals,approx_nothingUseful,approx_radicalOfRatio,approx_ratioOfRadical,approx_rationalOfE,approx_rationalOfPi,approx_rationalsOfLogarithms,approx_sine_of_pi_times_rational,approx_sine_of_rational,approxratioRecursive,arccos,arccosh,arcsin,arcsinh,arctan,arctanh,areunivarpolysfactoredorexpandedform,arg,arglist,assignmentFound,avoidCalculatingPowersIntoArctans,bake,bake_poly,bake_poly_term,besselj,bessely,bigInt,bignum_factorial,bignum_float,bignum_power_number,bignum_scan_float,bignum_scan_integer,bignum_truncate,binding,binomial,buffer,build_tensor,caaddr,caadr,caar,cadaddr,cadadr,cadar,caddaddr,caddadr,caddar,caddddr,cadddr,caddr,cadr,called_from_Algebra_block,car,cdaddr,cdadr,cdar,cddaddr,cddar,cdddaddr,cddddr,cdddr,cddr,cdr,ceiling,chainOfUserSymbolsNotFunctionsBeingEvaluated,charTabIndex,chartab,checkFloatHasWorkedOutCompletely,check_esc_flag,check_stack,check_tensor_dimensions,choose,choose_check_args,circexp,clearAlgebraEnvironment,clearRenamedVariablesToAvoidBindingToExternalScope,clear_symbols,clear_term,clearall,clockform,cmpGlyphs,cmp_args,cmp_expr,cmp_terms,cmp_terms_count,codeGen,coeff,cofactor,collectLatexStringFromReturnValue,collectUserSymbols,combine_factors,combine_gammas,combine_terms,compareState,compare_numbers,compare_rationals,compare_tensors,compatible,computeDependenciesFromAlgebra,computeResultsAndJavaScriptFromAlgebra,compute_fa,conjugate,cons,consCount,contract,convert_bignum_to_double,convert_rational_to_double,copy_tensor,cosine,cosine_of_angle,cosine_of_angle_sum,count,countOccurrencesOfSymbol,count_denominators,counter,countsize,d_scalar_scalar,d_scalar_scalar_1,d_scalar_tensor,d_tensor_scalar,d_tensor_tensor,dabs,darccos,darccosh,darcsin,darcsinh,darctan,darctanh,dbesselj0,dbesseljn,dbessely0,dbesselyn,dcos,dcosh,dd,decomp,decomp_product,decomp_sum,defineSomeHandyConstants,define_user_function,defn,defn_str,degree,denominator,derf,derfc,derivative,derivative_of_integral,det,determinant,detg,dfunction,dhermite,dirac,display,display_flag,displaychar,divide,divide_numbers,divisors,divisors_onstack,divpoly,dlog,do_clearPatterns,do_clearall,do_simplify_nested_radicals,dontCreateNewRadicalsInDenominatorWhenEvalingMultiplication,dotprod_unicode,doubleToReasonableString,dpow,dpower,dproduct,draw_flag,draw_stop_return,dsgn,dsin,dsinh,dsum,dtan,dtanh,dupl,eigen,elelmIndex,elem,emit_denominator,emit_denominators,emit_expr,emit_factor,emit_factorial_function,emit_flat_tensor,emit_fraction,emit_function,emit_index_function,emit_multiply,emit_number,emit_numerators,emit_numerical_fraction,emit_power,emit_string,emit_subexpr,emit_symbol,emit_tensor,emit_tensor_inner,emit_term,emit_top_expr,emit_unsigned_expr,emit_x,equal,equaln,equalq,erfc,errorMessage,esc_flag,evaluatingAsFloats,evaluatingPolar,exec,expand,expand_get_A,expand_get_AF,expand_get_B,expand_get_C,expand_get_CF,expand_tensor,expanding,expcos,exponential,expr_level,expsin,f1,f10,f2,f3,f4,f5,f9,f_equals_a,factor,factor_a,factor_again,factor_b,factor_number,factor_small_number,factor_term,factorial,factorpoly,factors,factpoly_expo,fill_buf,filter,filter_main,filter_sum,filter_tensor,findDependenciesInScript,findPossibleClockForm,findPossibleExponentialForm,findroot,fixup_fraction,fixup_power,flag,floatToRatioRoutine,fmt_index,fmt_level,fmt_x,frame,freeze,functionInvokationsScanningStack,gamma,gamma_of_sum,gammaf,gcd,gcd_main,gcd_numbers,gcd_polys,gcd_powers_with_same_base,gcd_product_product,gcd_product_sum,gcd_sum,gcd_sum_product,gcd_sum_sum,gen,getSimpleRoots,getStateHash,get_binding,get_factor_from_complex_root,get_factor_from_real_root,get_innerprod_factors,get_next_token,get_printname,get_size,get_token,getdisplaystr,glyph,gp,guess,hasImaginaryCoeff,hasNegativeRationalExponent,hash_addition,hash_function,hash_multiplication,hash_power,hashcode_values,hashed_itab,hermite,hilbert,i1,imag,imaginaryunit,index_function,init,initNRoots,inited,inner,inner_f,input_str,integral,integral_of_form,integral_of_product,integral_of_sum,inv,inverse,invert_number,invg,isNumberOneOverSomething,isNumericAtom,isNumericAtomOrTensor,isSimpleRoot,isSmall,isSymbolLeftOfAssignment,isSymbolReclaimable,isZeroAtom,isZeroAtomOrTensor,isZeroLikeOrNonZeroLikeOrUndetermined,isZeroTensor,is_denominator,is_factor,is_small_integer,is_square_matrix,is_usr_symbol,isadd,isalnumorunderscore,isalpha,isalphaOrUnderscore,iscomplexnumber,iscomplexnumberdouble,iscons,isdenominator,isdigit,isdouble,iseveninteger,isfactor,isfactorial,isfloating,isfraction,isidentitymatrix,isimaginarynumber,isimaginarynumberdouble,isimaginaryunit,isinnerordot,isinteger,isintegerfactor,isintegerorintegerfloat,isinv,iskeyword,isminusone,isminusoneoversqrttwo,isminusoneovertwo,ismultiply,isnegative,isnegativenumber,isnegativeterm,isnonnegativeinteger,isnpi,isone,isoneover,isoneoversqrttwo,isoneovertwo,isplusone,isplustwo,ispolyexpandedform,ispolyexpandedform_expr,ispolyexpandedform_factor,ispolyexpandedform_term,ispolyfactoredorexpandedform,ispolyfactoredorexpandedform_factor,ispolyfactoredorexpandedform_power,isposint,ispositivenumber,ispower,isquarterturn,isrational,isspace,isstr,issymbol,issymbolic,istensor,istranspose,isunderscore,isunivarpolyfactoredorexpandedform,itab,italu_hashcode,j1,laguerre,laguerre2,lastFoundSymbol,latexErrorSign,lcm,leading,legendre,length,lessp,level,list,listLength,logarithm,logbuf,lookupsTotal,lu_decomp,madd,makePositive,makeSignSameAs,make_hashed_itab,mask,mcmp,mcmpint,mdiv,mdivrem,meta_mode,mgcd,mini_solve,mint,mmod,mmul,mod,monic,move,moveTos,mp_clr_bit,mp_denominator,mp_numerator,mp_set_bit,mpow,mprime,mroot,mshiftright,msub,mtotal,multinomial_sum,multiply,multiply_all,multiply_all_noexpand,multiply_consecutive_constants,multiply_denominators,multiply_denominators_factor,multiply_denominators_term,multiply_noexpand,multiply_numbers,n_factor_number,negate,negate_expand,negate_noexpand,negate_number,new_string,newline_flag,nil_symbols,normaliseDots,normalisedCoeff,normalize_angle,nroots_a,nroots_b,nroots_c,nroots_df,nroots_dx,nroots_fa,nroots_fb,nroots_x,nroots_y,nterms,nthCadr,numerator,numericRootOfPolynomial,o,one,oneElement,one_as_double,out_buf,out_count,out_of_memory,outer,p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,parse,parse_internal,parse_p1,parse_p2,parse_time_simplifications,partition,patternHasBeenFound,patternsinfo,peek,performing_roots,polar,polarRectAMinusOneBase,polycoeff,polyform,pop,pop_double,pop_frame,pop_integer,power,power_str,power_sum,power_tensor,predefinedSymbolsInGlobalScope_doNotTrackInDependencies,prime,primetab,print2dascii,printMode,print_ABS_latex,print_ARCCOS_codegen,print_ARCSIN_codegen,print_ARCTAN_codegen,print_BINOMIAL_latex,print_COS_codegen,print_DEFINT_latex,print_DOT_codegen,print_DOT_latex,print_DO_codegen,print_FOR_codegen,print_INV_codegen,print_INV_latex,print_PRODUCT_codegen,print_PRODUCT_latex,print_SETQ_codegen,print_SIN_codegen,print_SQRT_latex,print_SUM_codegen,print_SUM_latex,print_TAN_codegen,print_TESTEQ_latex,print_TESTGE_latex,print_TESTGT_latex,print_TESTLE_latex,print_TESTLT_latex,print_TEST_codegen,print_TEST_latex,print_TRANSPOSE_codegen,print_TRANSPOSE_latex,print_UNIT_codegen,print_a_over_b,print_base,print_base_of_denom,print_char,print_denom,print_double,print_expo_of_denom,print_exponent,print_expr,print_factor,print_factorial_function,print_glyphs,print_index_function,print_list,print_multiply_sign,print_number,print_power,print_str,print_subexpr,print_tensor,print_tensor_inner,print_tensor_inner_latex,print_tensor_latex,print_term,printchar,printchar_nowrap,printline,program_buf,promote_tensor,push,pushTryNotToDuplicate,push_cars,push_double,push_factor,push_frame,push_identity_matrix,push_integer,push_rational,push_symbol,push_term_factors,push_terms,push_zero_matrix,qadd,qdiv,qmul,qpow,qpowf,quickfactor,quickpower,rational,rationalize,rationalize_coefficients,real,reciprocate,rect,recursionLevelNestedRadicalsRemoval,recursiveDependencies,ref,ref1,rememberPrint,remove_negative_exponents,reset_after_error,restore,restoreMetaBindings,rewrite_args,rewrite_args_tensor,roots,roots2,roots3,run,runUserDefinedSimplifications,save,saveMetaBindings,scalar_times_tensor,scan,scan_error,scan_expression,scan_factor,scan_function_call_with_function_name,scan_function_call_without_function_name,scan_index,scan_meta,scan_power,scan_relation,scan_stmt,scan_str,scan_string,scan_subexpr,scan_symbol,scan_tensor,scan_term,scanned,scanningParameters,setM,setSignTo,set_binding,set_component,setq_indexed,sfac_product,sfac_product_f,sgn,shape,show_power_debug,sign,sign_of_term,simfac,simfac_term,simpleComplexityMeasure,simplify,simplifyForCodeGeneration,simplify_1_in_products,simplify_main,simplify_nested_radicals,simplify_polar,simplify_polarRect,simplify_rational_expressions,simplify_rectToClock,simplify_tensor,simplify_trig,simplifyfactorials,sine,sine_of_angle,sine_of_angle_sum,skipRootVariableToBeSolved,sort_stack,square,ssqrt,stack,stackAddsCount,std_symbol,step,step2,stop,strcmp,stringsEmittedByUserPrintouts,subf,subst,subtract,subtract_numbers,swap,symbol,symbolsDependencies,symbolsHavingReassignments,symbolsInExpressionsWithoutAssignments,symbolsLeftOfAssignment,symbolsRightOfAssignment,symbolsinfo,symnum,symtab,take_care_of_nested_radicals,tangent,taylor,tensor,tensor_plus_tensor,tensor_times_scalar,testApprox,test_flag,text_metric,theRandom,token,token_buf,token_str,top,top_level_eval,tos,transform,transpose,transpose_unicode,trigmode,trivial_divide,try_kth_prime,turnErrorMessageToLatex,ucmp,unfreeze,unique,unique_f,update_token_buf,userSimplificationsInListForm,userSimplificationsInStringForm,usr_symbol,verbosing,version,will_be_displayed_as_fraction,ybinomial,ycosh,ydirac,yerf,yerfc,yfloor,yindex,yround,ysinh,yyarg,yybesselj,yybessely,yyceiling,yycondense,yycontract,yycosh,yydegree,yydetg,yydivpoly,yyerf,yyerfc,yyexpand,yyfactorpoly,yyfloat,yyfloor,yyhermite,yyhermite2,yyinvg,yylcm,yylog,yymultiply,yyouter,yypower,yyrationalize,yyround,yysgn,yysimfac,yysinh,yytangent,zero,zzfloat,hasProp={}.hasOwnProperty,slice=[].slice;for(bigInt=require("big-integer"),version="1.3.1",SELFTEST=1,NSYM=1e3,DEBUG=!1,PRINTOUTRESULT=!1,PRINTMODE_LATEX="PRINTMODE_LATEX",PRINTMODE_2DASCII="PRINTMODE_2DASCII",PRINTMODE_COMPUTER="PRINTMODE_COMPUTER",PRINTMODE_HUMAN="PRINTMODE_HUMAN",PRINTMODE_LIST="PRINTMODE_LIST",printMode=PRINTMODE_COMPUTER,dontCreateNewRadicalsInDenominatorWhenEvalingMultiplication=!0,recursionLevelNestedRadicalsRemoval=0,do_simplify_nested_radicals=!0,avoidCalculatingPowersIntoArctans=!0,rational=function(){function rational(){}return rational.prototype.a=null,rational.prototype.b=null,rational}(),U=function(){function U(){this.cons={},this.cons.car=null,this.cons.cdr=null,this.q=new rational}return U.prototype.cons=null,U.prototype.printname="",U.prototype.str="",U.prototype.tensor=null,U.prototype.q=null,U.prototype.d=0,U.prototype.k=0,U.prototype.tag=0,U.prototype.toString=function(){return print_expr(this)},U.prototype.toLatexString=function(){return collectLatexStringFromReturnValue(this)},U}(),errorMessage="",CONS=0,NUM=1,DOUBLE=2,STR=3,TENSOR=4,SYM=5,counter=0,ABS=counter++,ADD=counter++,ADJ=counter++,AND=counter++,APPROXRATIO=counter++,ARCCOS=counter++,ARCCOSH=counter++,ARCSIN=counter++,ARCSINH=counter++,ARCTAN=counter++,ARCTANH=counter++,ARG=counter++,ATOMIZE=counter++,BESSELJ=counter++,BESSELY=counter++,BINDING=counter++,BINOMIAL=counter++,CEILING=counter++,CHECK=counter++,CHOOSE=counter++,CIRCEXP=counter++,CLEAR=counter++,CLEARALL=counter++,CLEARPATTERNS=counter++,CLOCK=counter++,COEFF=counter++,COFACTOR=counter++,CONDENSE=counter++,CONJ=counter++,CONTRACT=counter++,COS=counter++,COSH=counter++,DECOMP=counter++,DEFINT=counter++,DEGREE=counter++,DENOMINATOR=counter++,DERIVATIVE=counter++,DET=counter++,DIM=counter++,DIRAC=counter++,DIVISORS=counter++,DO=counter++,DOT=counter++,DRAW=counter++,DSOLVE=counter++,EIGEN=counter++,EIGENVAL=counter++,EIGENVEC=counter++,ERF=counter++,ERFC=counter++,EVAL=counter++,EXP=counter++,EXPAND=counter++,EXPCOS=counter++,EXPSIN=counter++,FACTOR=counter++,FACTORIAL=counter++,FACTORPOLY=counter++,FILTER=counter++,FLOATF=counter++,FLOOR=counter++,FOR=counter++,FUNCTION=counter++,GAMMA=counter++,GCD=counter++,HERMITE=counter++,HILBERT=counter++,IMAG=counter++,INDEX=counter++,INNER=counter++,INTEGRAL=counter++,INV=counter++,INVG=counter++,ISINTEGER=counter++,ISPRIME=counter++,LAGUERRE=counter++,LCM=counter++,LEADING=counter++,LEGENDRE=counter++,LOG=counter++,LOOKUP=counter++,MOD=counter++,MULTIPLY=counter++,NOT=counter++,NROOTS=counter++,NUMBER=counter++,NUMERATOR=counter++,OPERATOR=counter++,OR=counter++,OUTER=counter++,PATTERN=counter++,PATTERNSINFO=counter++,POLAR=counter++,POWER=counter++,PRIME=counter++,PRINT_LEAVE_E_ALONE=counter++,PRINT_LEAVE_X_ALONE=counter++,PRINT=counter++,PRINT2DASCII=counter++,PRINTFULL=counter++,PRINTLATEX=counter++,PRINTLIST=counter++,PRINTPLAIN=counter++,PRODUCT=counter++,QUOTE=counter++,QUOTIENT=counter++,RANK=counter++,RATIONALIZE=counter++,REAL=counter++,ROUND=counter++,YYRECT=counter++,ROOTS=counter++,SETQ=counter++,SGN=counter++,SILENTPATTERN=counter++,SIMPLIFY=counter++,SIN=counter++,SINH=counter++,SHAPE=counter++,SQRT=counter++,STOP=counter++,SUBST=counter++,SUM=counter++,SYMBOLSINFO=counter++,TAN=counter++,TANH=counter++,TAYLOR=counter++,TEST=counter++,TESTEQ=counter++,TESTGE=counter++,TESTGT=counter++,TESTLE=counter++,TESTLT=counter++,TRANSPOSE=counter++,UNIT=counter++,ZERO=counter++,NIL=counter++,LAST=counter++,LAST_PRINT=counter++,LAST_2DASCII_PRINT=counter++,LAST_FULL_PRINT=counter++,LAST_LATEX_PRINT=counter++,LAST_LIST_PRINT=counter++,LAST_PLAIN_PRINT=counter++,AUTOEXPAND=counter++,BAKE=counter++,ASSUME_REAL_VARIABLES=counter++,TRACE=counter++,FORCE_FIXED_PRINTOUT=counter++,MAX_FIXED_PRINTOUT_DIGITS=counter++,YYE=counter++,DRAWX=counter++,METAA=counter++,METAB=counter++,METAX=counter++,SECRETX=counter++,VERSION=counter++,PI=counter++,SYMBOL_A=counter++,SYMBOL_B=counter++,SYMBOL_C=counter++,SYMBOL_D=counter++,SYMBOL_I=counter++,SYMBOL_J=counter++,SYMBOL_N=counter++,SYMBOL_R=counter++,SYMBOL_S=counter++,SYMBOL_T=counter++,SYMBOL_X=counter++,SYMBOL_Y=counter++,SYMBOL_Z=counter++,SYMBOL_IDENTITY_MATRIX=counter++,SYMBOL_A_UNDERSCORE=counter++,SYMBOL_B_UNDERSCORE=counter++,SYMBOL_X_UNDERSCORE=counter++,C1=counter++,C2=counter++,C3=counter++,C4=counter++,C5=counter++,C6=counter++,USR_SYMBOLS=counter++,E=YYE,TOS=1e5,BUF=1e4,MAX_PROGRAM_SIZE=100001,MAXPRIMETAB=1e4,MAX_CONSECUTIVE_APPLICATIONS_OF_ALL_RULES=5,MAX_CONSECUTIVE_APPLICATIONS_OF_SINGLE_RULE=10,MAXDIM=24,symbolsDependencies={},symbolsHavingReassignments=[],symbolsInExpressionsWithoutAssignments=[],patternHasBeenFound=!1,predefinedSymbolsInGlobalScope_doNotTrackInDependencies=["rationalize","abs","e","i","pi","sin","ceiling","cos","roots","integral","derivative","defint","sqrt","eig","cov","deig","dcov","float","floor","product","root","round","sum","test","unit"],parse_time_simplifications=!0,chainOfUserSymbolsNotFunctionsBeingEvaluated=[],stringsEmittedByUserPrintouts="",called_from_Algebra_block=!1,tensor=function(){function tensor(){this.dim=function(){var o,ref,results;for(results=[],o=0,ref=MAXDIM;0<=ref?o<=ref:o>=ref;0<=ref?o++:o--)results.push(0);return results}(),this.elem=[]}return tensor.prototype.ndim=0,tensor.prototype.dim=null,tensor.prototype.nelem=0,tensor.prototype.elem=null,tensor}(),display=function(){function display(){}return display.prototype.h=0,display.prototype.w=0,display.prototype.n=0,display.prototype.a=[],display}(),text_metric=function(){function text_metric(){}return text_metric.prototype.ascent=0,text_metric.prototype.descent=0,text_metric.prototype.width=0,text_metric}(),tos=0,expanding=0,evaluatingAsFloats=0,evaluatingPolar=0,fmt_x=0,fmt_index=0,fmt_level=0,verbosing=0,primetab=function(){var ceil,i,j,primes;for(primes=[2],i=3;primes.length<MAXPRIMETAB;){for(j=0,ceil=Math.sqrt(i);j<primes.length&&primes[j]<=ceil;){if(i%primes[j]==0){j=-1;break}j++}-1!==j&&primes.push(i),i+=2}return primes[MAXPRIMETAB]=0,primes}(),esc_flag=0,draw_flag=0,mtotal=0,trigmode=0,logbuf="",program_buf="",symtab=[],binding=[],isSymbolReclaimable=[],arglist=[],stack=[],frame=0,p0=null,p1=null,p2=null,p3=null,p4=null,p5=null,p6=null,p7=null,p8=null,p9=null,zero=null,one=null,one_as_double=null,imaginaryunit=null,out_buf="",out_count=0,test_flag=0,codeGen=!1,draw_stop_return=null,userSimplificationsInListForm=[],userSimplificationsInStringForm=[],transpose_unicode=7488,dotprod_unicode=183,symbol=function(x){return symtab[x]},iscons=function(p){return p.k===CONS},isrational=function(p){return p.k===NUM},isdouble=function(p){return p.k===DOUBLE},isNumericAtom=function(p){return isrational(p)||isdouble(p)},isstr=function(p){return p.k===STR},istensor=function(p){if(null!=p)return p.k===TENSOR},isNumericAtomOrTensor=function(p){var a,i,n,o,ref;if(isNumericAtom(p)||p===symbol(SYMBOL_IDENTITY_MATRIX))return 1;if(!istensor(p)&&!isNumericAtom(p))return 0;for(n=p.tensor.nelem,a=p.tensor.elem,i=o=0,ref=n;0<=ref?o<ref:o>ref;i=0<=ref?++o:--o)if(!isNumericAtomOrTensor(a[i]))return 0;return 1},issymbol=function(p){return p.k===SYM},iskeyword=function(p){return issymbol(p)&&symnum(p)<NIL},car=function(p){return iscons(p)?p.cons.car:symbol(NIL)},cdr=function(p){return iscons(p)?p.cons.cdr:symbol(NIL)},caar=function(p){return car(car(p))},cadr=function(p){return car(cdr(p))},cdar=function(p){return cdr(car(p))},cddr=function(p){return cdr(cdr(p))},caadr=function(p){return car(car(cdr(p)))},caddr=function(p){return car(cdr(cdr(p)))},cadar=function(p){return car(cdr(car(p)))},cdadr=function(p){return cdr(car(cdr(p)))},cddar=function(p){return cdr(cdr(car(p)))},cdddr=function(p){return cdr(cdr(cdr(p)))},caaddr=function(p){return car(car(cdr(cdr(p))))},cadadr=function(p){return car(cdr(car(cdr(p))))},caddar=function(p){return car(cdr(cdr(car(p))))},cdaddr=function(p){return cdr(car(cdr(cdr(p))))},cadddr=function(p){return car(cdr(cdr(cdr(p))))},cddddr=function(p){return cdr(cdr(cdr(cdr(p))))},caddddr=function(p){return car(cdr(cdr(cdr(cdr(p)))))},cadaddr=function(p){return car(cdr(car(cdr(cdr(p)))))},cddaddr=function(p){return cdr(cdr(car(cdr(cdr(p)))))},caddadr=function(p){return car(cdr(cdr(car(cdr(p)))))},cdddaddr=function(p){return cdr(cdr(cdr(car(cdr(cdr(p))))))},caddaddr=function(p){return car(cdr(cdr(car(cdr(cdr(p))))))},listLength=function(p){var startCount;for(startCount=-1;iscons(p);)p=cdr(p),startCount++;return startCount},nthCadr=function(p,n){var startCount;for(startCount=0;startCount<=n;)p=cdr(p),startCount++;return car(p)},isadd=function(p){return car(p)===symbol(ADD)},ismultiply=function(p){return car(p)===symbol(MULTIPLY)},ispower=function(p){return car(p)===symbol(POWER)},isfactorial=function(p){return car(p)===symbol(FACTORIAL)},isinnerordot=function(p){return car(p)===symbol(INNER)||car(p)===symbol(DOT)},istranspose=function(p){return car(p)===symbol(TRANSPOSE)},isinv=function(p){return car(p)===symbol(INV)},isidentitymatrix=function(p){return p===symbol(SYMBOL_IDENTITY_MATRIX)},MSIGN=function(p){return p.isPositive()?1:p.isZero()?0:-1},MLENGTH=function(p){return p.toString().length},MZERO=function(p){return p.isZero()},MEQUAL=function(p,n){return p.equals(n)},reset_after_error=function(){return moveTos(0),esc_flag=0,draw_flag=0,frame=TOS,evaluatingAsFloats=0,evaluatingPolar=0},$=null!=exports?exports:this,$.version=version,$.isadd=isadd,$.ismultiply=ismultiply,$.ispower=ispower,$.isfactorial=isfactorial,$.car=car,$.cdr=cdr,$.caar=caar,$.cadr=cadr,$.cdar=cdar,$.cddr=cddr,$.caadr=caadr,$.caddr=caddr,$.cadar=cadar,$.cdadr=cdadr,$.cddar=cddar,$.cdddr=cdddr,$.caaddr=caaddr,$.cadadr=cadadr,$.caddar=caddar,$.cdaddr=cdaddr,$.cadddr=cadddr,$.cddddr=cddddr,$.caddddr=caddddr,$.cadaddr=cadaddr,$.cddaddr=cddaddr,$.caddadr=caddadr,$.cdddaddr=cdddaddr,$.caddaddr=caddaddr,$.symbol=symbol,$.iscons=iscons,$.isrational=isrational,$.isdouble=isdouble,$.isNumericAtom=isNumericAtom,$.isstr=isstr,$.istensor=istensor,$.issymbol=issymbol,$.iskeyword=iskeyword,$.CONS=CONS,$.NUM=NUM,$.DOUBLE=DOUBLE,$.STR=STR,$.TENSOR=TENSOR,$.SYM=SYM,DEBUG_ABS=!1,Eval_abs=function(){return push(cadr(p1)),Eval(),abs()},absValFloat=function(){return Eval(),absval(),Eval(),zzfloat()},abs=function(){var theArgument;if(theArgument=top(),DEBUG_ABS&&console.trace(">>>>  ABS of "+theArgument),numerator(),DEBUG_ABS&&console.log("ABS numerator "+stack[tos-1]),absval(),DEBUG_ABS&&console.log("ABSVAL numerator: "+stack[tos-1]),push(theArgument),denominator(),DEBUG_ABS&&console.log("ABS denominator: "+stack[tos-1]),absval(),DEBUG_ABS&&console.log("ABSVAL denominator: "+stack[tos-1]),divide(),DEBUG_ABS&&console.log("ABSVAL divided: "+stack[tos-1]),DEBUG_ABS)return console.log("<<<<<<<  ABS")},absval=function(){var anyFactorsYet,input;if(save(),input=p1=pop(),DEBUG_ABS&&console.log("ABS of "+p1),isZeroAtomOrTensor(p1))return DEBUG_ABS&&console.log(" abs: "+p1+" just zero"),push(zero),DEBUG_ABS&&console.log(" --\x3e ABS of "+input+" : "+stack[tos-1]),void restore();if(isnegativenumber(p1))return DEBUG_ABS&&console.log(" abs: "+p1+" just a negative"),push(p1),negate(),void restore();if(ispositivenumber(p1))return DEBUG_ABS&&console.log(" abs: "+p1+" just a positive"),push(p1),DEBUG_ABS&&console.log(" --\x3e ABS of "+input+" : "+stack[tos-1]),void restore();if(p1===symbol(PI))return DEBUG_ABS&&console.log(" abs: "+p1+" of PI"),push(p1),DEBUG_ABS&&console.log(" --\x3e ABS of "+input+" : "+stack[tos-1]),void restore();if(car(p1)===symbol(ADD)&&(findPossibleClockForm(p1)||findPossibleExponentialForm(p1)||Find(p1,imaginaryunit)))return DEBUG_ABS&&console.log(" abs: "+p1+" is a sum"),DEBUG_ABS&&console.log("abs of a sum"),push(p1),rect(),p1=pop(),push(p1),real(),push_integer(2),power(),push(p1),imag(),push_integer(2),power(),add(),push_rational(1,2),power(),simplify_trig(),DEBUG_ABS&&console.log(" --\x3e ABS of "+input+" : "+stack[tos-1]),void restore();if(car(p1)===symbol(POWER)&&equaln(cadr(p1),-1))return DEBUG_ABS&&console.log(" abs: "+p1+" is -1 to any power"),evaluatingAsFloats?(DEBUG_ABS&&console.log(" abs: numeric, so result is 1.0"),push_double(1)):(DEBUG_ABS&&console.log(" abs: symbolic, so result is 1"),push_integer(1)),DEBUG_ABS&&console.log(" --\x3e ABS of "+input+" : "+stack[tos-1]),void restore();if(car(p1)===symbol(POWER)&&ispositivenumber(caddr(p1)))return DEBUG_ABS&&console.log(" abs: "+p1+" is something to the power of a positive number"),push(cadr(p1)),abs(),push(caddr(p1)),power(),DEBUG_ABS&&console.log(" --\x3e ABS of "+input+" : "+stack[tos-1]),void restore();if(car(p1)===symbol(POWER)&&cadr(p1)===symbol(E))return DEBUG_ABS&&console.log(" abs: "+p1+" is an exponential"),push(caddr(p1)),real(),exponential(),DEBUG_ABS&&console.log(" --\x3e ABS of "+input+" : "+stack[tos-1]),void restore();if(car(p1)===symbol(MULTIPLY)){for(DEBUG_ABS&&console.log(" abs: "+p1+" is a product"),anyFactorsYet=!1,p1=cdr(p1);iscons(p1);)push(car(p1)),absval(),anyFactorsYet&&multiply(),anyFactorsYet=!0,p1=cdr(p1);return DEBUG_ABS&&console.log(" --\x3e ABS of "+input+" : "+stack[tos-1]),void restore()}return car(p1)===symbol(ABS)?(DEBUG_ABS&&console.log(" abs: "+p1+" is abs of a abs"),push_symbol(ABS),push(cadr(p1)),list(2),DEBUG_ABS&&console.log(" --\x3e ABS of "+input+" : "+stack[tos-1]),void restore()):istensor(p1)?(absval_tensor(),void restore()):((isnegativeterm(p1)||car(p1)===symbol(ADD)&&isnegativeterm(cadr(p1)))&&(push(p1),negate(),p1=pop()),DEBUG_ABS&&console.log(" abs: "+p1+" is nothing decomposable"),push_symbol(ABS),push(p1),list(2),DEBUG_ABS&&console.log(" --\x3e ABS of "+input+" : "+stack[tos-1]),restore())},absval_tensor=function(){return 1!==p1.tensor.ndim&&stop("abs(tensor) with tensor rank > 1"),push(p1),push(p1),conjugate(),inner(),push_rational(1,2),power(),simplify(),Eval()},flag=0,Eval_add=function(){var h;for(h=tos,p1=cdr(p1);iscons(p1);)push(car(p1)),Eval(),p2=pop(),push_terms(p2),p1=cdr(p1);return add_terms(tos-h)},stackAddsCount=0,add_terms=function(n){var h,i,i1,j1,o,ref,ref1,results,s,subsetOfStack;if(stackAddsCount++,i=0,s=h=tos-n,DEBUG&&console.log("stack before adding terms #"+stackAddsCount),DEBUG)for(i=o=0,ref=tos;0<=ref?o<ref:o>ref;i=0<=ref?++o:--o)console.log(print_list(stack[i]));for(i=i1=0;i1<10&&!(n<2)&&(flag=0,(subsetOfStack=stack.slice(h,h+n)).sort(cmp_terms),stack=stack.slice(0,h).concat(subsetOfStack).concat(stack.slice(h+n)),0!==flag);i=++i1)n=combine_terms(h,n);switch(moveTos(h+n),n){case 0:evaluatingAsFloats?push_double(0):push(zero);break;case 1:break;default:list(n),p1=pop(),push_symbol(ADD),push(p1),cons()}if(DEBUG&&console.log("stack after adding terms #"+stackAddsCount),DEBUG){for(results=[],i=j1=0,ref1=tos;0<=ref1?j1<ref1:j1>ref1;i=0<=ref1?++j1:--j1)results.push(console.log(print_list(stack[i])));return results}},cmp_terms_count=0,cmp_terms=function(p1,p2){var i,o,ref,t;if(cmp_terms_count++,i=0,isNumericAtom(p1)&&isNumericAtom(p2))return flag=1,0;if(istensor(p1)&&istensor(p2)){if(p1.tensor.ndim<p2.tensor.ndim)return-1;if(p1.tensor.ndim>p2.tensor.ndim)return 1;for(i=o=0,ref=p1.tensor.ndim;0<=ref?o<ref:o>ref;i=0<=ref?++o:--o){if(p1.tensor.dim[i]<p2.tensor.dim[i])return-1;if(p1.tensor.dim[i]>p2.tensor.dim[i])return 1}return flag=1,0}return car(p1)===symbol(MULTIPLY)&&(p1=cdr(p1),isNumericAtom(car(p1))&&(p1=cdr(p1),cdr(p1)===symbol(NIL)&&(p1=car(p1)))),car(p2)===symbol(MULTIPLY)&&(p2=cdr(p2),isNumericAtom(car(p2))&&(p2=cdr(p2),cdr(p2)===symbol(NIL)&&(p2=car(p2)))),0===(t=cmp_expr(p1,p2))&&(flag=1),t},combine_terms=function(s,n){var i,i1,j,j1,l1,m1,o,ref,ref1,ref2,ref3,ref4,ref5,ref6,ref7,ref8,ref9,t;for(i=0;i<n-1;)if(check_esc_flag(),p3=stack[s+i],p4=stack[s+i+1],istensor(p3)&&istensor(p4)){if(push(p3),push(p4),tensor_plus_tensor(),(p1=pop())!==symbol(NIL)){for(stack[s+i]=p1,j=o=ref=i+1,ref1=n-1;ref<=ref1?o<ref1:o>ref1;j=ref<=ref1?++o:--o)stack[s+j]=stack[s+j+1];n--,i--}i++}else if(istensor(p3)||istensor(p4))i++;else if(isNumericAtom(p3)&&isNumericAtom(p4)){if(push(p3),push(p4),add_numbers(),p1=pop(),isZeroAtomOrTensor(p1)){for(j=i1=ref2=i,ref3=n-2;ref2<=ref3?i1<ref3:i1>ref3;j=ref2<=ref3?++i1:--i1)stack[s+j]=stack[s+j+2];n-=2}else{for(stack[s+i]=p1,j=j1=ref4=i+1,ref5=n-1;ref4<=ref5?j1<ref5:j1>ref5;j=ref4<=ref5?++j1:--j1)stack[s+j]=stack[s+j+1];n--}i--,i++}else if(isNumericAtom(p3)||isNumericAtom(p4))i++;else if(evaluatingAsFloats?(p1=one_as_double,p2=one_as_double):(p1=one,p2=one),t=0,car(p3)===symbol(MULTIPLY)&&(p3=cdr(p3),t=1,isNumericAtom(car(p3))&&(p1=car(p3),p3=cdr(p3),cdr(p3)===symbol(NIL)&&(p3=car(p3),t=0))),car(p4)===symbol(MULTIPLY)&&(p4=cdr(p4),isNumericAtom(car(p4))&&(p2=car(p4),p4=cdr(p4),cdr(p4)===symbol(NIL)&&(p4=car(p4)))),equal(p3,p4))if(push(p1),push(p2),add_numbers(),p1=pop(),isZeroAtomOrTensor(p1)){for(j=l1=ref6=i,ref7=n-2;ref6<=ref7?l1<ref7:l1>ref7;j=ref6<=ref7?++l1:--l1)stack[s+j]=stack[s+j+2];n-=2,i--,i++}else{for(push(p1),t?(push(symbol(MULTIPLY)),push(p3),cons()):push(p3),multiply(),stack[s+i]=pop(),j=m1=ref8=i+1,ref9=n-1;ref8<=ref9?m1<ref9:m1>ref9;j=ref8<=ref9?++m1:--m1)stack[s+j]=stack[s+j+1];n--,i--,i++}else i++;return n},push_terms=function(p){var results;if(car(p)===symbol(ADD)){for(p=cdr(p),results=[];iscons(p);)push(car(p)),results.push(p=cdr(p));return results}if(!isZeroAtom(p))return push(p)},add=function(){var h;return save(),p2=pop(),p1=pop(),h=tos,push_terms(p1),push_terms(p2),add_terms(tos-h),restore()},add_all=function(k){var h,i,o,ref,s;for(i=0,save(),s=tos-k,h=tos,i=o=0,ref=k;0<=ref?o<ref:o>ref;i=0<=ref?++o:--o)push_terms(stack[s+i]);return add_terms(tos-h),p1=pop(),moveTos(tos-k),push(p1),restore()},subtract=function(){return negate(),add()},Eval_adj=function(){return push(cadr(p1)),Eval(),adj()},adj=function(){var doNothing,i,i1,j,n,o,ref,ref1;for(i=0,j=0,n=0,save(),p1=pop(),istensor(p1)&&2===p1.tensor.ndim&&p1.tensor.dim[0]===p1.tensor.dim[1]?doNothing=1:stop("adj: square matrix expected"),n=p1.tensor.dim[0],(p2=alloc_tensor(n*n)).tensor.ndim=2,p2.tensor.dim[0]=n,p2.tensor.dim[1]=n,i=o=0,ref=n;0<=ref?o<ref:o>ref;i=0<=ref?++o:--o)for(j=i1=0,ref1=n;0<=ref1?i1<ref1:i1>ref1;j=0<=ref1?++i1:--i1)cofactor(p1,n,i,j),p2.tensor.elem[n*j+i]=pop();return push(p2),restore()},Eval_approxratio=function(){var theArgument;return theArgument=cadr(p1),push(theArgument),approxratioRecursive()},approxratioRecursive=function(){var i,i1,o,ref,ref1;if(i=0,save(),p1=pop(),istensor(p1)){for((p4=alloc_tensor(p1.tensor.nelem)).tensor.ndim=p1.tensor.ndim,i=o=0,ref=p1.tensor.ndim;0<=ref?o<ref:o>ref;i=0<=ref?++o:--o)p4.tensor.dim[i]=p1.tensor.dim[i];for(i=i1=0,ref1=p1.tensor.nelem;0<=ref1?i1<ref1:i1>ref1;i=0<=ref1?++i1:--i1)push(p1.tensor.elem[i]),approxratioRecursive(),p4.tensor.elem[i]=pop(),check_tensor_dimensions(p4);push(p4)}else p1.k===DOUBLE?(push(p1),approxOneRatioOnly()):iscons(p1)?(push(car(p1)),approxratioRecursive(),push(cdr(p1)),approxratioRecursive(),cons()):push(p1);return restore()},approxOneRatioOnly=function(){var numberOfDigitsAfterTheDot,precision,splitBeforeAndAfterDot,supposedlyTheFloat,theFloat,theRatio;if(zzfloat(),(supposedlyTheFloat=pop()).k!==DOUBLE)return push_symbol(APPROXRATIO),push(theArgument),list(2);2===(splitBeforeAndAfterDot=(theFloat=supposedlyTheFloat.d).toString().split(".")).length?(numberOfDigitsAfterTheDot=splitBeforeAndAfterDot[1].length,precision=1/Math.pow(10,numberOfDigitsAfterTheDot),theRatio=floatToRatioRoutine(theFloat,precision),push_rational(theRatio[0],theRatio[1])):push_integer(theFloat)},floatToRatioRoutine=function(decimal,AccuracyFactor){var DecimalSign,FractionDenominator,FractionNumerator,PreviousDenominator,ScratchValue,Z,ret;if(FractionNumerator=void 0,FractionDenominator=void 0,DecimalSign=void 0,Z=void 0,PreviousDenominator=void 0,ScratchValue=void 0,ret=[0,0],isNaN(decimal))return ret;if(Infinity===decimal)return ret[0]=1,ret[1]=0,ret;if(-Infinity===decimal)return ret[0]=-1,ret[1]=0,ret;if(DecimalSign=decimal<0?-1:1,decimal=Math.abs(decimal),Math.abs(decimal-Math.floor(decimal))<AccuracyFactor)return FractionNumerator=decimal*DecimalSign,FractionDenominator=1,ret[0]=FractionNumerator,ret[1]=FractionDenominator,ret;if(decimal<1e-19)return FractionNumerator=DecimalSign,FractionDenominator=1e19,ret[0]=FractionNumerator,ret[1]=FractionDenominator,ret;if(decimal>1e19)return FractionNumerator=1e19*DecimalSign,FractionDenominator=1,ret[0]=FractionNumerator,ret[1]=FractionDenominator,ret;for(Z=decimal,PreviousDenominator=0,FractionDenominator=1;Z=1/(Z-Math.floor(Z)),ScratchValue=FractionDenominator,FractionDenominator=FractionDenominator*Math.floor(Z)+PreviousDenominator,PreviousDenominator=ScratchValue,FractionNumerator=Math.floor(decimal*FractionDenominator+.5),Math.abs(decimal-FractionNumerator/FractionDenominator)>AccuracyFactor&&Z!==Math.floor(Z););return FractionNumerator*=DecimalSign,ret[0]=FractionNumerator,ret[1]=FractionDenominator,ret},approx_just_an_integer=0,approx_sine_of_rational=1,approx_sine_of_pi_times_rational=2,approx_rationalOfPi=3,approx_radicalOfRatio=4,approx_nothingUseful=5,approx_ratioOfRadical=6,approx_rationalOfE=7,approx_logarithmsOfRationals=8,approx_rationalsOfLogarithms=9,approxRationalsOfRadicals=function(theFloat){var bestResultSoFar,complexity,error,hypothesis,i,i1,j,len,likelyMultiplier,minimumComplexity,numberOfDigitsAfterTheDot,o,precision,ratio,ref,result,splitBeforeAndAfterDot;if(2!==(splitBeforeAndAfterDot=theFloat.toString().split(".")).length)return[""+Math.floor(theFloat),approx_just_an_integer,Math.floor(theFloat),1,2];for(numberOfDigitsAfterTheDot=splitBeforeAndAfterDot[1].length,precision=1/Math.pow(10,numberOfDigitsAfterTheDot),console.log("precision: "+precision),bestResultSoFar=null,minimumComplexity=Number.MAX_VALUE,o=0,len=(ref=[2,3,5,6,7,8,10]).length;o<len;o++)for(i=ref[o],j=i1=1;i1<=10;j=++i1)hypothesis=Math.sqrt(i)/j,Math.abs(hypothesis)>1e-10?(ratio=theFloat/hypothesis,likelyMultiplier=Math.round(ratio),error=Math.abs(1-ratio/likelyMultiplier)):(ratio=1,likelyMultiplier=1,error=Math.abs(theFloat-hypothesis)),error<2*precision&&(complexity=simpleComplexityMeasure(likelyMultiplier,i,j))<minimumComplexity&&(minimumComplexity=complexity,bestResultSoFar=[result=likelyMultiplier+" * sqrt( "+i+" ) / "+j,approx_ratioOfRadical,likelyMultiplier,i,j]);return bestResultSoFar},approxRadicalsOfRationals=function(theFloat){var bestResultSoFar,complexity,error,hypothesis,i,i1,j,len,len1,likelyMultiplier,minimumComplexity,numberOfDigitsAfterTheDot,o,precision,ratio,ref,ref1,result,splitBeforeAndAfterDot;if(2!==(splitBeforeAndAfterDot=theFloat.toString().split(".")).length)return[""+Math.floor(theFloat),approx_just_an_integer,Math.floor(theFloat),1,2];for(numberOfDigitsAfterTheDot=splitBeforeAndAfterDot[1].length,precision=1/Math.pow(10,numberOfDigitsAfterTheDot),console.log("precision: "+precision),bestResultSoFar=null,minimumComplexity=Number.MAX_VALUE,o=0,len=(ref=[1,2,3,5,6,7,8,10]).length;o<len;o++)for(i=ref[o],i1=0,len1=(ref1=[1,2,3,5,6,7,8,10]).length;i1<len1;i1++)j=ref1[i1],hypothesis=Math.sqrt(i/j),Math.abs(hypothesis)>1e-10?(ratio=theFloat/hypothesis,likelyMultiplier=Math.round(ratio),error=Math.abs(1-ratio/likelyMultiplier)):(ratio=1,likelyMultiplier=1,error=Math.abs(theFloat-hypothesis)),error<2*precision&&(complexity=simpleComplexityMeasure(likelyMultiplier,i,j))<minimumComplexity&&(minimumComplexity=complexity,bestResultSoFar=[result=likelyMultiplier+" * (sqrt( "+i+" / "+j+" )",approx_radicalOfRatio,likelyMultiplier,i,j]);return bestResultSoFar},approxRadicals=function(theFloat){var approxRadicalsOfRationalsResult,approxRationalsOfRadicalsResult,numberOfDigitsAfterTheDot,precision,splitBeforeAndAfterDot;return 2!==(splitBeforeAndAfterDot=theFloat.toString().split(".")).length?[""+Math.floor(theFloat),approx_just_an_integer,Math.floor(theFloat),1,2]:(numberOfDigitsAfterTheDot=splitBeforeAndAfterDot[1].length,precision=1/Math.pow(10,numberOfDigitsAfterTheDot),console.log("precision: "+precision),null!=(approxRationalsOfRadicalsResult=approxRationalsOfRadicals(theFloat))?approxRationalsOfRadicalsResult:null!=(approxRadicalsOfRationalsResult=approxRadicalsOfRationals(theFloat))?approxRadicalsOfRationalsResult:null)},approxLogs=function(theFloat){var approxLogsOfRationalsResult,approxRationalsOfLogsResult,numberOfDigitsAfterTheDot,precision,splitBeforeAndAfterDot;return 2!==(splitBeforeAndAfterDot=theFloat.toString().split(".")).length?[""+Math.floor(theFloat),approx_just_an_integer,Math.floor(theFloat),1,2]:(numberOfDigitsAfterTheDot=splitBeforeAndAfterDot[1].length,precision=1/Math.pow(10,numberOfDigitsAfterTheDot),console.log("precision: "+precision),null!=(approxRationalsOfLogsResult=approxRationalsOfLogs(theFloat))?approxRationalsOfLogsResult:null!=(approxLogsOfRationalsResult=approxLogsOfRationals(theFloat))?approxLogsOfRationalsResult:null)},approxRationalsOfLogs=function(theFloat){var bestResultSoFar,complexity,error,hypothesis,i,i1,j,likelyMultiplier,minimumComplexity,numberOfDigitsAfterTheDot,o,precision,ratio,result,splitBeforeAndAfterDot;if(2!==(splitBeforeAndAfterDot=theFloat.toString().split(".")).length)return[""+Math.floor(theFloat),approx_just_an_integer,Math.floor(theFloat),1,2];for(numberOfDigitsAfterTheDot=splitBeforeAndAfterDot[1].length,precision=1/Math.pow(10,numberOfDigitsAfterTheDot),console.log("precision: "+precision),bestResultSoFar=null,minimumComplexity=Number.MAX_VALUE,i=o=2;o<=5;i=++o)for(j=i1=1;i1<=5;j=++i1)hypothesis=Math.log(i)/j,Math.abs(hypothesis)>1e-10?(ratio=theFloat/hypothesis,likelyMultiplier=Math.round(ratio),error=Math.abs(1-ratio/likelyMultiplier)):(ratio=1,likelyMultiplier=1,error=Math.abs(theFloat-hypothesis)),1!==likelyMultiplier&&Math.abs(Math.floor(likelyMultiplier/j))===Math.abs(likelyMultiplier/j)||error<2.2*precision&&(complexity=simpleComplexityMeasure(likelyMultiplier,i,j))<minimumComplexity&&(minimumComplexity=complexity,bestResultSoFar=[result=likelyMultiplier+" * log( "+i+" ) / "+j,approx_rationalsOfLogarithms,likelyMultiplier,i,j]);return bestResultSoFar},approxLogsOfRationals=function(theFloat){var bestResultSoFar,complexity,error,hypothesis,i,i1,j,likelyMultiplier,minimumComplexity,numberOfDigitsAfterTheDot,o,precision,ratio,result,splitBeforeAndAfterDot;if(2!==(splitBeforeAndAfterDot=theFloat.toString().split(".")).length)return[""+Math.floor(theFloat),approx_just_an_integer,Math.floor(theFloat),1,2];for(numberOfDigitsAfterTheDot=splitBeforeAndAfterDot[1].length,precision=1/Math.pow(10,numberOfDigitsAfterTheDot),console.log("precision: "+precision),bestResultSoFar=null,minimumComplexity=Number.MAX_VALUE,i=o=1;o<=5;i=++o)for(j=i1=1;i1<=5;j=++i1)hypothesis=Math.log(i/j),Math.abs(hypothesis)>1e-10?(ratio=theFloat/hypothesis,likelyMultiplier=Math.round(ratio),error=Math.abs(1-ratio/likelyMultiplier)):(ratio=1,likelyMultiplier=1,error=Math.abs(theFloat-hypothesis)),error<1.96*precision&&(complexity=simpleComplexityMeasure(likelyMultiplier,i,j))<minimumComplexity&&(minimumComplexity=complexity,bestResultSoFar=[result=likelyMultiplier+" * log( "+i+" / "+j+" )",approx_logarithmsOfRationals,likelyMultiplier,i,j]);return bestResultSoFar},approxRationalsOfPowersOfE=function(theFloat){var bestResultSoFar,complexity,error,hypothesis,i,i1,j,likelyMultiplier,minimumComplexity,numberOfDigitsAfterTheDot,o,precision,ratio,result,splitBeforeAndAfterDot;if(2!==(splitBeforeAndAfterDot=theFloat.toString().split(".")).length)return[""+Math.floor(theFloat),approx_just_an_integer,Math.floor(theFloat),1,2];for(numberOfDigitsAfterTheDot=splitBeforeAndAfterDot[1].length,precision=1/Math.pow(10,numberOfDigitsAfterTheDot),console.log("precision: "+precision),bestResultSoFar=null,minimumComplexity=Number.MAX_VALUE,i=o=1;o<=2;i=++o)for(j=i1=1;i1<=12;j=++i1)hypothesis=Math.pow(Math.E,i)/j,Math.abs(hypothesis)>1e-10?(ratio=theFloat/hypothesis,likelyMultiplier=Math.round(ratio),error=Math.abs(1-ratio/likelyMultiplier)):(ratio=1,likelyMultiplier=1,error=Math.abs(theFloat-hypothesis)),error<2*precision&&(complexity=simpleComplexityMeasure(likelyMultiplier,i,j))<minimumComplexity&&(minimumComplexity=complexity,bestResultSoFar=[result=likelyMultiplier+" * (e ^ "+i+" ) / "+j,approx_rationalOfE,likelyMultiplier,i,j]);return bestResultSoFar},approxRationalsOfPowersOfPI=function(theFloat){var bestResultSoFar,complexity,error,hypothesis,i,i1,j,likelyMultiplier,minimumComplexity,numberOfDigitsAfterTheDot,o,precision,ratio,result,splitBeforeAndAfterDot;if(2!==(splitBeforeAndAfterDot=theFloat.toString().split(".")).length)return[""+Math.floor(theFloat),approx_just_an_integer,Math.floor(theFloat),1,2];for(numberOfDigitsAfterTheDot=splitBeforeAndAfterDot[1].length,precision=1/Math.pow(10,numberOfDigitsAfterTheDot),console.log("precision: "+precision),bestResultSoFar=null,minimumComplexity=Number.MAX_VALUE,i=o=1;o<=5;i=++o)for(j=i1=1;i1<=12;j=++i1)hypothesis=Math.pow(Math.PI,i)/j,Math.abs(hypothesis)>1e-10?(ratio=theFloat/hypothesis,likelyMultiplier=Math.round(ratio),error=Math.abs(1-ratio/likelyMultiplier)):(ratio=1,likelyMultiplier=1,error=Math.abs(theFloat-hypothesis)),error<2*precision&&(complexity=simpleComplexityMeasure(likelyMultiplier,i,j))<minimumComplexity&&(minimumComplexity=complexity,bestResultSoFar=[result=likelyMultiplier+" * (pi ^ "+i+" ) / "+j+" )",approx_rationalOfPi,likelyMultiplier,i,j]);return bestResultSoFar},approxTrigonometric=function(theFloat){var approxSineOfRationalMultiplesOfPIResult,approxSineOfRationalsResult,numberOfDigitsAfterTheDot,precision,splitBeforeAndAfterDot;return 2!==(splitBeforeAndAfterDot=theFloat.toString().split(".")).length?[""+Math.floor(theFloat),approx_just_an_integer,Math.floor(theFloat),1,2]:(numberOfDigitsAfterTheDot=splitBeforeAndAfterDot[1].length,precision=1/Math.pow(10,numberOfDigitsAfterTheDot),console.log("precision: "+precision),null!=(approxSineOfRationalsResult=approxSineOfRationals(theFloat))?approxSineOfRationalsResult:null!=(approxSineOfRationalMultiplesOfPIResult=approxSineOfRationalMultiplesOfPI(theFloat))?approxSineOfRationalMultiplesOfPIResult:null)},approxSineOfRationals=function(theFloat){var bestResultSoFar,complexity,error,fraction,hypothesis,i,i1,j,likelyMultiplier,minimumComplexity,numberOfDigitsAfterTheDot,o,precision,ratio,result,splitBeforeAndAfterDot;if(2!==(splitBeforeAndAfterDot=theFloat.toString().split(".")).length)return[""+Math.floor(theFloat),approx_just_an_integer,Math.floor(theFloat),1,2];for(numberOfDigitsAfterTheDot=splitBeforeAndAfterDot[1].length,precision=1/Math.pow(10,numberOfDigitsAfterTheDot),console.log("precision: "+precision),bestResultSoFar=null,minimumComplexity=Number.MAX_VALUE,i=o=1;o<=4;i=++o)for(j=i1=1;i1<=4;j=++i1)fraction=i/j,hypothesis=Math.sin(fraction),Math.abs(hypothesis)>1e-10?(ratio=theFloat/hypothesis,likelyMultiplier=Math.round(ratio),error=Math.abs(1-ratio/likelyMultiplier)):(ratio=1,likelyMultiplier=1,error=Math.abs(theFloat-hypothesis)),error<2*precision&&(complexity=simpleComplexityMeasure(likelyMultiplier,i,j))<minimumComplexity&&(minimumComplexity=complexity,bestResultSoFar=[result=likelyMultiplier+" * sin( "+i+"/"+j+" )",approx_sine_of_rational,likelyMultiplier,i,j]);return bestResultSoFar},approxSineOfRationalMultiplesOfPI=function(theFloat){var bestResultSoFar,complexity,error,fraction,hypothesis,i,i1,j,likelyMultiplier,minimumComplexity,numberOfDigitsAfterTheDot,o,precision,ratio,result,splitBeforeAndAfterDot;if(2!==(splitBeforeAndAfterDot=theFloat.toString().split(".")).length)return[""+Math.floor(theFloat),approx_just_an_integer,Math.floor(theFloat),1,2];for(numberOfDigitsAfterTheDot=splitBeforeAndAfterDot[1].length,precision=1/Math.pow(10,numberOfDigitsAfterTheDot),console.log("precision: "+precision),bestResultSoFar=null,minimumComplexity=Number.MAX_VALUE,i=o=1;o<=13;i=++o)for(j=i1=1;i1<=13;j=++i1)fraction=i/j,hypothesis=Math.sin(Math.PI*fraction),Math.abs(hypothesis)>1e-10?(ratio=theFloat/hypothesis,likelyMultiplier=Math.round(ratio),error=Math.abs(1-ratio/likelyMultiplier)):(ratio=1,likelyMultiplier=1,error=Math.abs(theFloat-hypothesis)),error<23*precision&&(complexity=simpleComplexityMeasure(likelyMultiplier,i,j))<minimumComplexity&&(minimumComplexity=complexity,bestResultSoFar=[result=likelyMultiplier+" * sin( "+i+"/"+j+" * pi )",approx_sine_of_pi_times_rational,likelyMultiplier,i,j]);return bestResultSoFar},approxAll=function(theFloat){var LOG_EXPLANATIONS,approxLogsResult,approxRadicalsResult,approxRationalsOfPowersOfEResult,approxRationalsOfPowersOfPIResult,approxTrigonometricResult,bestApproxSoFar,constantsSum,constantsSumMin,numberOfDigitsAfterTheDot,precision,splitBeforeAndAfterDot;return 2!==(splitBeforeAndAfterDot=theFloat.toString().split(".")).length?[""+Math.floor(theFloat),approx_just_an_integer,Math.floor(theFloat),1,2]:(numberOfDigitsAfterTheDot=splitBeforeAndAfterDot[1].length,precision=1/Math.pow(10,numberOfDigitsAfterTheDot),console.log("precision: "+precision),constantsSumMin=Number.MAX_VALUE,constantsSum=0,bestApproxSoFar=null,LOG_EXPLANATIONS=!0,null!=(approxRadicalsResult=approxRadicals(theFloat))&&((constantsSum=simpleComplexityMeasure(approxRadicalsResult))<constantsSumMin?(console.log("better explanation by approxRadicals: "+approxRadicalsResult+" complexity: "+constantsSum),constantsSumMin=constantsSum,bestApproxSoFar=approxRadicalsResult):console.log("subpar explanation by approxRadicals: "+approxRadicalsResult+" complexity: "+constantsSum)),null!=(approxLogsResult=approxLogs(theFloat))&&((constantsSum=simpleComplexityMeasure(approxLogsResult))<constantsSumMin?(console.log("better explanation by approxLogs: "+approxLogsResult+" complexity: "+constantsSum),constantsSumMin=constantsSum,bestApproxSoFar=approxLogsResult):console.log("subpar explanation by approxLogs: "+approxLogsResult+" complexity: "+constantsSum)),null!=(approxRationalsOfPowersOfEResult=approxRationalsOfPowersOfE(theFloat))&&((constantsSum=simpleComplexityMeasure(approxRationalsOfPowersOfEResult))<constantsSumMin?(console.log("better explanation by approxRationalsOfPowersOfE: "+approxRationalsOfPowersOfEResult+" complexity: "+constantsSum),constantsSumMin=constantsSum,bestApproxSoFar=approxRationalsOfPowersOfEResult):console.log("subpar explanation by approxRationalsOfPowersOfE: "+approxRationalsOfPowersOfEResult+" complexity: "+constantsSum)),null!=(approxRationalsOfPowersOfPIResult=approxRationalsOfPowersOfPI(theFloat))&&((constantsSum=simpleComplexityMeasure(approxRationalsOfPowersOfPIResult))<constantsSumMin?(console.log("better explanation by approxRationalsOfPowersOfPI: "+approxRationalsOfPowersOfPIResult+" complexity: "+constantsSum),constantsSumMin=constantsSum,bestApproxSoFar=approxRationalsOfPowersOfPIResult):console.log("subpar explanation by approxRationalsOfPowersOfPI: "+approxRationalsOfPowersOfPIResult+" complexity: "+constantsSum)),null!=(approxTrigonometricResult=approxTrigonometric(theFloat))&&((constantsSum=simpleComplexityMeasure(approxTrigonometricResult))<constantsSumMin?(console.log("better explanation by approxTrigonometric: "+approxTrigonometricResult+" complexity: "+constantsSum),constantsSumMin=constantsSum,bestApproxSoFar=approxTrigonometricResult):console.log("subpar explanation by approxTrigonometric: "+approxTrigonometricResult+" complexity: "+constantsSum)),bestApproxSoFar)},simpleComplexityMeasure=function(aResult,b,c){var theSum;if(theSum=null,aResult instanceof Array){switch(aResult[1]){case approx_sine_of_pi_times_rational:theSum=4;break;case approx_rationalOfPi:theSum=Math.pow(4,Math.abs(aResult[3]))*Math.abs(aResult[2]);break;case approx_rationalOfE:theSum=Math.pow(3,Math.abs(aResult[3]))*Math.abs(aResult[2]);break;default:theSum=0}theSum+=Math.abs(aResult[2])*(Math.abs(aResult[3])+Math.abs(aResult[4]))}else theSum+=Math.abs(aResult)*(Math.abs(b)+Math.abs(c));return 1===aResult[2]?theSum-=1:theSum+=1,1===aResult[3]?theSum-=1:theSum+=1,1===aResult[4]?theSum-=1:theSum+=1,theSum<0&&(theSum=0),theSum},testApprox=function(){var error,fraction,i,i1,i2,i3,j,j1,j2,j3,k3,l1,l2,l3,len,len1,len2,len3,len4,len5,len6,len7,m1,m2,m3,n1,n2,o,o1,o2,originalValue,q1,q2,r1,r2,ref,ref1,ref2,ref3,ref4,ref5,ref6,ref7,returned,returnedFraction,returnedValue,s1,s2,t1,t2,u1,u2,v1,v2,value,x1,x2,z1,z2;for(o=0,len=(ref=[2,3,5,6,7,8,10]).length;o<len;o++)for(i=ref[o],i1=0,len1=(ref1=[2,3,5,6,7,8,10]).length;i1<len1;i1++)i!==(j=ref1[i1])&&(console.log("testapproxRadicals testing: 1 * sqrt( "+i+" ) / "+j),fraction=i/j,value=Math.sqrt(i)/j,returnedValue=(returned=approxRadicals(value))[2]*Math.sqrt(returned[3])/returned[4],Math.abs(value-returnedValue)>1e-15&&console.log("fail testapproxRadicals: 1 * sqrt( "+i+" ) / "+j+" . obtained: "+returned));for(j1=0,len2=(ref2=[2,3,5,6,7,8,10]).length;j1<len2;j1++)for(i=ref2[j1],l1=0,len3=(ref3=[2,3,5,6,7,8,10]).length;l1<len3;l1++)i!==(j=ref3[l1])&&(console.log("testapproxRadicals testing with 4 digits: 1 * sqrt( "+i+" ) / "+j),fraction=i/j,value=(originalValue=Math.sqrt(i)/j).toFixed(4),returnedValue=(returned=approxRadicals(value))[2]*Math.sqrt(returned[3])/returned[4],Math.abs(originalValue-returnedValue)>1e-15&&console.log("fail testapproxRadicals with 4 digits: 1 * sqrt( "+i+" ) / "+j+" . obtained: "+returned));for(m1=0,len4=(ref4=[2,3,5,6,7,8,10]).length;m1<len4;m1++)for(i=ref4[m1],n1=0,len5=(ref5=[2,3,5,6,7,8,10]).length;n1<len5;n1++)i!==(j=ref5[n1])&&(console.log("testapproxRadicals testing: 1 * sqrt( "+i+" / "+j+" )"),fraction=i/j,value=Math.sqrt(i/j),null!=(returned=approxRadicals(value))&&(returnedValue=returned[2]*Math.sqrt(returned[3]/returned[4]),returned[1]===approx_radicalOfRatio&&Math.abs(value-returnedValue)>1e-15&&console.log("fail testapproxRadicals: 1 * sqrt( "+i+" / "+j+" ) . obtained: "+returned)));for(o1=0,len6=(ref6=[1,2,3,5,6,7,8,10]).length;o1<len6;o1++)for(i=ref6[o1],q1=0,len7=(ref7=[1,2,3,5,6,7,8,10]).length;q1<len7;q1++)j=ref7[q1],1===i&&1===j||(console.log("testapproxRadicals testing with 4 digits:: 1 * sqrt( "+i+" / "+j+" )"),fraction=i/j,value=(originalValue=Math.sqrt(i/j)).toFixed(4),returnedValue=(returned=approxRadicals(value))[2]*Math.sqrt(returned[3]/returned[4]),returned[1]===approx_radicalOfRatio&&Math.abs(originalValue-returnedValue)>1e-15&&console.log("fail testapproxRadicals with 4 digits:: 1 * sqrt( "+i+" / "+j+" ) . obtained: "+returned));for(i=r1=1;r1<=5;i=++r1)for(j=s1=1;s1<=5;j=++s1)console.log("testApproxAll testing: 1 * log("+i+" ) / "+j),fraction=i/j,value=Math.log(i)/j,returnedValue=(returned=approxAll(value))[2]*Math.log(returned[3])/returned[4],Math.abs(value-returnedValue)>1e-15&&console.log("fail testApproxAll: 1 * log("+i+" ) / "+j+" . obtained: "+returned);for(i=t1=1;t1<=5;i=++t1)for(j=u1=1;u1<=5;j=++u1)console.log("testApproxAll testing with 4 digits: 1 * log("+i+" ) / "+j),fraction=i/j,value=(originalValue=Math.log(i)/j).toFixed(4),returnedValue=(returned=approxAll(value))[2]*Math.log(returned[3])/returned[4],Math.abs(originalValue-returnedValue)>1e-15&&console.log("fail testApproxAll with 4 digits: 1 * log("+i+" ) / "+j+" . obtained: "+returned);for(i=v1=1;v1<=5;i=++v1)for(j=x1=1;x1<=5;j=++x1)console.log("testApproxAll testing: 1 * log("+i+" / "+j+" )"),fraction=i/j,value=Math.log(i/j),returnedValue=(returned=approxAll(value))[2]*Math.log(returned[3]/returned[4]),Math.abs(value-returnedValue)>1e-15&&console.log("fail testApproxAll: 1 * log("+i+" / "+j+" ) . obtained: "+returned);for(i=z1=1;z1<=5;i=++z1)for(j=i2=1;i2<=5;j=++i2)console.log("testApproxAll testing with 4 digits: 1 * log("+i+" / "+j+" )"),fraction=i/j,value=(originalValue=Math.log(i/j)).toFixed(4),returnedValue=(returned=approxAll(value))[2]*Math.log(returned[3]/returned[4]),Math.abs(originalValue-returnedValue)>1e-15&&console.log("fail testApproxAll with 4 digits: 1 * log("+i+" / "+j+" ) . obtained: "+returned);for(i=j2=1;j2<=2;i=++j2)for(j=l2=1;l2<=12;j=++l2)console.log("testApproxAll testing: 1 * (e ^ "+i+" ) / "+j),fraction=i/j,value=Math.pow(Math.E,i)/j,returnedValue=(returned=approxAll(value))[2]*Math.pow(Math.E,returned[3])/returned[4],Math.abs(value-returnedValue)>1e-15&&console.log("fail testApproxAll: 1 * (e ^ "+i+" ) / "+j+" . obtained: "+returned);for(i=m2=1;m2<=2;i=++m2)for(j=n2=1;n2<=12;j=++n2)console.log("approxRationalsOfPowersOfE testing with 4 digits: 1 * (e ^ "+i+" ) / "+j),fraction=i/j,value=(originalValue=Math.pow(Math.E,i)/j).toFixed(4),returnedValue=(returned=approxRationalsOfPowersOfE(value))[2]*Math.pow(Math.E,returned[3])/returned[4],Math.abs(originalValue-returnedValue)>1e-15&&console.log("fail approxRationalsOfPowersOfE with 4 digits: 1 * (e ^ "+i+" ) / "+j+" . obtained: "+returned);for(i=o2=1;o2<=2;i=++o2)for(j=q2=1;q2<=12;j=++q2)console.log("testApproxAll testing: 1 * pi ^ "+i+" / "+j),fraction=i/j,value=Math.pow(Math.PI,i)/j,returnedValue=(returned=approxAll(value))[2]*Math.pow(Math.PI,returned[3])/returned[4],Math.abs(value-returnedValue)>1e-15&&console.log("fail testApproxAll: 1 * pi ^ "+i+" / "+j+" ) . obtained: "+returned);for(i=r2=1;r2<=2;i=++r2)for(j=s2=1;s2<=12;j=++s2)console.log("approxRationalsOfPowersOfPI testing with 4 digits: 1 * pi ^ "+i+" / "+j),fraction=i/j,value=(originalValue=Math.pow(Math.PI,i)/j).toFixed(4),returnedValue=(returned=approxRationalsOfPowersOfPI(value))[2]*Math.pow(Math.PI,returned[3])/returned[4],Math.abs(originalValue-returnedValue)>1e-15&&console.log("fail approxRationalsOfPowersOfPI with 4 digits: 1 * pi ^ "+i+" / "+j+" ) . obtained: "+returned);for(i=t2=1;t2<=4;i=++t2)for(j=u2=1;u2<=4;j=++u2)console.log("testApproxAll testing: 1 * sin( "+i+"/"+j+" )"),fraction=i/j,value=Math.sin(fraction),returnedFraction=(returned=approxAll(value))[3]/returned[4],returnedValue=returned[2]*Math.sin(returnedFraction),Math.abs(value-returnedValue)>1e-15&&console.log("fail testApproxAll: 1 * sin( "+i+"/"+j+" ) . obtained: "+returned);for(i=v2=1;v2<=4;i=++v2)for(j=x2=1;x2<=4;j=++x2)console.log("testApproxAll testing with 5 digits: 1 * sin( "+i+"/"+j+" )"),fraction=i/j,value=(originalValue=Math.sin(fraction)).toFixed(5),null==(returned=approxAll(value))&&console.log("fail testApproxAll with 5 digits: 1 * sin( "+i+"/"+j+" ) . obtained:  undefined "),returnedFraction=returned[3]/returned[4],returnedValue=returned[2]*Math.sin(returnedFraction),(error=Math.abs(originalValue-returnedValue))>1e-14&&console.log("fail testApproxAll with 5 digits: 1 * sin( "+i+"/"+j+" ) . obtained: "+returned+" error: "+error);for(i=z2=1;z2<=4;i=++z2)for(j=i3=1;i3<=4;j=++i3)console.log("testApproxAll testing with 4 digits: 1 * sin( "+i+"/"+j+" )"),fraction=i/j,value=(originalValue=Math.sin(fraction)).toFixed(4),null==(returned=approxAll(value))&&console.log("fail testApproxAll with 4 digits: 1 * sin( "+i+"/"+j+" ) . obtained:  undefined "),returnedFraction=returned[3]/returned[4],returnedValue=returned[2]*Math.sin(returnedFraction),(error=Math.abs(originalValue-returnedValue))>1e-14&&console.log("fail testApproxAll with 4 digits: 1 * sin( "+i+"/"+j+" ) . obtained: "+returned+" error: "+error);for("0"!==approxAll(value=0)[0]&&console.log("fail testApproxAll: 0"),"0"!==approxAll(value=0)[0]&&console.log("fail testApproxAll: 0.0"),"0"!==approxAll(value=0)[0]&&console.log("fail testApproxAll: 0.00"),"0"!==approxAll(value=0)[0]&&console.log("fail testApproxAll: 0.000"),"0"!==approxAll(value=0)[0]&&console.log("fail testApproxAll: 0.0000"),"1"!==approxAll(value=1)[0]&&console.log("fail testApproxAll: 1"),"1"!==approxAll(value=1)[0]&&console.log("fail testApproxAll: 1.0"),"1"!==approxAll(value=1)[0]&&console.log("fail testApproxAll: 1.00"),"1"!==approxAll(value=1)[0]&&console.log("fail testApproxAll: 1.000"),"1"!==approxAll(value=1)[0]&&console.log("fail testApproxAll: 1.0000"),"1"!==approxAll(value=1)[0]&&console.log("fail testApproxAll: 1.00000"),value=Math.sqrt(2),"1 * sqrt( 2 ) / 1"!==approxAll(value)[0]&&console.log("fail testApproxAll: Math.sqrt(2)"),"1 * sqrt( 2 ) / 1"!==approxAll(value=1.41)[0]&&console.log("fail testApproxAll: 1.41"),"1 * sqrt( 2 ) / 1"!==approxRadicals(value=1.4)[0]&&console.log("fail approxRadicals: 1.4"),"1 * log( 2 ) / 1"!==approxLogs(value=.6)[0]&&console.log("fail approxLogs: 0.6"),"1 * log( 2 ) / 1"!==approxLogs(value=.69)[0]&&console.log("fail approxLogs: 0.69"),"1 * log( 2 ) / 1"!==approxLogs(value=.7)[0]&&console.log("fail approxLogs: 0.7"),"1 * log( 3 ) / 1"!==approxLogs(value=1.09)[0]&&console.log("fail approxLogs: 1.09"),"1 * log( 3 ) / 1"!==approxAll(value=1.09)[0]&&console.log("fail approxAll: 1.09"),"1 * log( 3 ) / 1"!==approxAll(value=1.098)[0]&&console.log("fail approxAll: 1.098"),"1 * log( 3 ) / 1"!==approxAll(value=1.1)[0]&&console.log("fail approxAll: 1.1"),"1 * log( 3 ) / 1"!==approxAll(value=1.11)[0]&&console.log("fail approxAll: 1.11"),value=Math.sqrt(3),"1 * sqrt( 3 ) / 1"!==approxAll(value)[0]&&console.log("fail testApproxAll: Math.sqrt(3)"),"1"!==approxAll(value=1)[0]&&console.log("fail testApproxAll: 1.0000"),"1 * (pi ^ 1 ) / 1 )"!==approxAll(value=3.141592)[0]&&console.log("fail testApproxAll: 3.141592"),"10 * (pi ^ 1 ) / 1 )"!==approxAll(value=31.41592)[0]&&console.log("fail testApproxAll: 31.41592"),"100 * (pi ^ 1 ) / 1 )"!==approxAll(value=314.1592)[0]&&console.log("fail testApproxAll: 314.1592"),"10000000 * (pi ^ 1 ) / 1 )"!==approxAll(value=31415926.53589793)[0]&&console.log("fail testApproxAll: 31415926.53589793"),value=Math.sqrt(2),"2 * sin( 1/4 * pi )"!==approxTrigonometric(value)[0]&&console.log("fail approxTrigonometric: Math.sqrt(2)"),value=Math.sqrt(3),"2 * sin( 1/3 * pi )"!==approxTrigonometric(value)[0]&&console.log("fail approxTrigonometric: Math.sqrt(3)"),value=(Math.sqrt(6)-Math.sqrt(2))/4,"1 * sin( 1/12 * pi )"!==approxAll(value)[0]&&console.log("fail testApproxAll: (Math.sqrt(6) - Math.sqrt(2))/4"),value=Math.sqrt(2-Math.sqrt(2))/2,"1 * sin( 1/8 * pi )"!==approxAll(value)[0]&&console.log("fail testApproxAll: Math.sqrt(2 - Math.sqrt(2))/2"),value=(Math.sqrt(6)+Math.sqrt(2))/4,"1 * sin( 5/12 * pi )"!==approxAll(value)[0]&&console.log("fail testApproxAll: (Math.sqrt(6) + Math.sqrt(2))/4"),value=Math.sqrt(2+Math.sqrt(3))/2,"1 * sin( 5/12 * pi )"!==approxAll(value)[0]&&console.log("fail testApproxAll: Math.sqrt(2 + Math.sqrt(3))/2"),value=(Math.sqrt(5)-1)/4,"1 * sin( 1/10 * pi )"!==approxAll(value)[0]&&console.log("fail testApproxAll: (Math.sqrt(5) - 1)/4"),value=Math.sqrt(10-2*Math.sqrt(5))/4,"1 * sin( 1/5 * pi )"!==approxAll(value)[0]&&console.log("fail testApproxAll: Math.sqrt(10 - 2*Math.sqrt(5))/4"),value=Math.sin(Math.PI/7),"1 * sin( 1/7 * pi )"!==approxAll(value)[0]&&console.log("fail testApproxAll: Math.sin(Math.PI/7)"),value=Math.sin(Math.PI/9),"1 * sin( 1/9 * pi )"!==approxAll(value)[0]&&console.log("fail testApproxAll: Math.sin(Math.PI/9)"),"6 * (pi ^ 5 ) / 1 )"!==approxRationalsOfPowersOfPI(value=1836.15267)[0]&&console.log("fail approxRationalsOfPowersOfPI: 1836.15267"),i=j3=1;j3<=13;i=++j3)for(j=k3=1;k3<=13;j=++k3)console.log("approxTrigonometric testing: 1 * sin( "+i+"/"+j+" * pi )"),fraction=i/j,value=Math.sin(Math.PI*fraction),returnedFraction=(returned=approxTrigonometric(value))[3]/returned[4],returnedValue=returned[2]*Math.sin(Math.PI*returnedFraction),Math.abs(value-returnedValue)>1e-15&&console.log("fail approxTrigonometric: 1 * sin( "+i+"/"+j+" * pi ) . obtained: "+returned);for(i=l3=1;l3<=13;i=++l3)for(j=m3=1;m3<=13;j=++m3)5===i&&11===j||6===i&&11===j||(console.log("approxTrigonometric testing with 4 digits: 1 * sin( "+i+"/"+j+" * pi )"),fraction=i/j,value=(originalValue=Math.sin(Math.PI*fraction)).toFixed(4),returnedFraction=(returned=approxTrigonometric(value))[3]/returned[4],returnedValue=returned[2]*Math.sin(Math.PI*returnedFraction),(error=Math.abs(originalValue-returnedValue))>1e-14&&console.log("fail approxTrigonometric with 4 digits: 1 * sin( "+i+"/"+j+" * pi ) . obtained: "+returned+" error: "+error));return console.log("testApprox done")},$.approxRadicals=approxRadicals,$.approxRationalsOfLogs=approxRationalsOfLogs,$.approxAll=approxAll,$.testApprox=testApprox,Eval_arccos=function(){return push(cadr(p1)),Eval(),arccos()},arccos=function(){var d,errno,n;if(n=0,d=0,save(),p1=pop(),car(p1)===symbol(COS))return push(cadr(p1)),void restore();if(isdouble(p1))return errno=0,d=Math.acos(p1.d),push_double(d),void restore();if(isoneoversqrttwo(p1)||car(p1)===symbol(MULTIPLY)&&equalq(car(cdr(p1)),1,2)&&car(car(cdr(cdr(p1))))===symbol(POWER)&&equaln(car(cdr(car(cdr(cdr(p1))))),2)&&equalq(car(cdr(cdr(car(cdr(cdr(p1)))))),1,2))return evaluatingAsFloats?push_double(Math.PI/4):(push_rational(1,4),push_symbol(PI),multiply()),void restore();if(isminusoneoversqrttwo(p1)||car(p1)===symbol(MULTIPLY)&&equalq(car(cdr(p1)),-1,2)&&car(car(cdr(cdr(p1))))===symbol(POWER)&&equaln(car(cdr(car(cdr(cdr(p1))))),2)&&equalq(car(cdr(cdr(car(cdr(cdr(p1)))))),1,2))return evaluatingAsFloats?push_double(3*Math.PI/4):(push_rational(3,4),push_symbol(PI),multiply()),void restore();if(!isrational(p1))return push_symbol(ARCCOS),push(p1),list(2),void restore();switch(push(p1),push_integer(2),multiply(),n=pop_integer()){case-2:evaluatingAsFloats?push_double(Math.PI):push_symbol(PI);break;case-1:evaluatingAsFloats?push_double(2*Math.PI/3):(push_rational(2,3),push_symbol(PI),multiply());break;case 0:evaluatingAsFloats?push_double(Math.PI/2):(push_rational(1,2),push_symbol(PI),multiply());break;case 1:evaluatingAsFloats?push_double(Math.PI/3):(push_rational(1,3),push_symbol(PI),multiply());break;case 2:evaluatingAsFloats?push_double(0):push(zero);break;default:push_symbol(ARCCOS),push(p1),list(2)}return restore()},Eval_arccosh=function(){return push(cadr(p1)),Eval(),arccosh()},arccosh=function(){var d;return d=0,save(),p1=pop(),car(p1)===symbol(COSH)?(push(cadr(p1)),void restore()):isdouble(p1)?((d=p1.d)<1&&stop("arccosh function argument is less than 1.0"),d=Math.log(d+Math.sqrt(d*d-1)),push_double(d),void restore()):isplusone(p1)?(push(zero),void restore()):(push_symbol(ARCCOSH),push(p1),list(2),restore())},Eval_arcsin=function(){return push(cadr(p1)),Eval(),arcsin()},arcsin=function(){var d,errno,n;if(n=0,d=0,save(),p1=pop(),car(p1)===symbol(SIN))return push(cadr(p1)),void restore();if(isdouble(p1))return errno=0,d=Math.asin(p1.d),push_double(d),void restore();if(isoneoversqrttwo(p1)||car(p1)===symbol(MULTIPLY)&&equalq(car(cdr(p1)),1,2)&&car(car(cdr(cdr(p1))))===symbol(POWER)&&equaln(car(cdr(car(cdr(cdr(p1))))),2)&&equalq(car(cdr(cdr(car(cdr(cdr(p1)))))),1,2))return push_rational(1,4),push_symbol(PI),multiply(),void restore();if(isminusoneoversqrttwo(p1)||car(p1)===symbol(MULTIPLY)&&equalq(car(cdr(p1)),-1,2)&&car(car(cdr(cdr(p1))))===symbol(POWER)&&equaln(car(cdr(car(cdr(cdr(p1))))),2)&&equalq(car(cdr(cdr(car(cdr(cdr(p1)))))),1,2))return evaluatingAsFloats?push_double(-Math.PI/4):(push_rational(-1,4),push_symbol(PI),multiply()),void restore();if(!isrational(p1))return push_symbol(ARCSIN),push(p1),list(2),void restore();switch(push(p1),push_integer(2),multiply(),n=pop_integer()){case-2:evaluatingAsFloats?push_double(-Math.PI/2):(push_rational(-1,2),push_symbol(PI),multiply());break;case-1:evaluatingAsFloats?push_double(-Math.PI/6):(push_rational(-1,6),push_symbol(PI),multiply());break;case 0:evaluatingAsFloats?push_double(0):push(zero);break;case 1:evaluatingAsFloats?push_double(Math.PI/6):(push_rational(1,6),push_symbol(PI),multiply());break;case 2:evaluatingAsFloats?push_double(Math.PI/2):(push_rational(1,2),push_symbol(PI),multiply());break;default:push_symbol(ARCSIN),push(p1),list(2)}return restore()},Eval_arcsinh=function(){return push(cadr(p1)),Eval(),arcsinh()},arcsinh=function(){var d;return d=0,save(),p1=pop(),car(p1)===symbol(SINH)?(push(cadr(p1)),void restore()):isdouble(p1)?(d=p1.d,d=Math.log(d+Math.sqrt(d*d+1)),push_double(d),void restore()):isZeroAtomOrTensor(p1)?(push(zero),void restore()):(push_symbol(ARCSINH),push(p1),list(2),restore())},Eval_arctan=function(){return push(cadr(p1)),Eval(),arctan()},arctan=function(){var d,errno;return d=0,save(),p1=pop(),car(p1)===symbol(TAN)?(push(cadr(p1)),void restore()):isdouble(p1)?(errno=0,d=Math.atan(p1.d),push_double(d),void restore()):isZeroAtomOrTensor(p1)?(push(zero),void restore()):isnegative(p1)?(push(p1),negate(),arctan(),negate(),void restore()):Find(p1,symbol(SIN))&&Find(p1,symbol(COS))&&(push(p1),numerator(),p2=pop(),push(p1),denominator(),p3=pop(),car(p2)===symbol(SIN)&&car(p3)===symbol(COS)&&equal(cadr(p2),cadr(p3)))?(push(cadr(p2)),void restore()):car(p1)===symbol(POWER)&&equaln(cadr(p1),3)&&equalq(caddr(p1),-1,2)||car(p1)===symbol(MULTIPLY)&&equalq(car(cdr(p1)),1,3)&&car(car(cdr(cdr(p1))))===symbol(POWER)&&equaln(car(cdr(car(cdr(cdr(p1))))),3)&&equalq(car(cdr(cdr(car(cdr(cdr(p1)))))),1,2)?(push_rational(1,6),evaluatingAsFloats?push_double(Math.PI):push(symbol(PI)),multiply(),void restore()):equaln(p1,1)?(push_rational(1,4),evaluatingAsFloats?push_double(Math.PI):push(symbol(PI)),multiply(),void restore()):car(p1)===symbol(POWER)&&equaln(cadr(p1),3)&&equalq(caddr(p1),1,2)?(push_rational(1,3),evaluatingAsFloats?push_double(Math.PI):push(symbol(PI)),multiply(),void restore()):(push_symbol(ARCTAN),push(p1),list(2),restore())},Eval_arctanh=function(){return push(cadr(p1)),Eval(),arctanh()},arctanh=function(){var d;return d=0,save(),p1=pop(),car(p1)===symbol(TANH)?(push(cadr(p1)),void restore()):isdouble(p1)?(((d=p1.d)<-1||d>1)&&stop("arctanh function argument is not in the interval [-1,1]"),d=Math.log((1+d)/(1-d))/2,push_double(d),void restore()):isZeroAtomOrTensor(p1)?(push(zero),void restore()):(push_symbol(ARCTANH),push(p1),list(2),restore())},DEBUG_ARG=!1,Eval_arg=function(){return push(cadr(p1)),Eval(),arg()},arg=function(){return save(),p1=pop(),push(p1),numerator(),yyarg(),push(p1),denominator(),yyarg(),subtract(),restore()},yyarg=function(){if(save(),p1=pop(),ispositivenumber(p1)||p1===symbol(PI))isdouble(p1)||evaluatingAsFloats?push_double(0):push_integer(0);else if(isnegativenumber(p1))isdouble(p1)||evaluatingAsFloats?push_double(Math.PI):push(symbol(PI)),negate();else if(issymbol(p1))push_symbol(ARG),push(p1),list(2);else if(car(p1)===symbol(POWER)&&equaln(cadr(p1),-1))evaluatingAsFloats?push_double(Math.PI):push(symbol(PI)),push(caddr(p1)),multiply();else if(car(p1)===symbol(POWER)&&cadr(p1)===symbol(E))push(caddr(p1)),imag();else if(car(p1)===symbol(POWER)&&isoneovertwo(caddr(p1)))DEBUG_ARG&&console.log("arg of a sqrt: "+p1),push(cadr(p1)),arg(),DEBUG_ARG&&console.log(" = 1/2 * "+stack[tos-1]),push(caddr(p1)),multiply();else if(car(p1)===symbol(MULTIPLY))for(push_integer(0),p1=cdr(p1);iscons(p1);)push(car(p1)),arg(),add(),p1=cdr(p1);else car(p1)===symbol(ADD)?(push(p1),rect(),p1=pop(),push(p1),real(),p2=pop(),push(p1),imag(),p3=pop(),isZeroAtomOrTensor(p2)?(evaluatingAsFloats?push_double(Math.PI):push(symbol(PI)),isnegative(p3)&&negate()):(push(p3),push(p2),divide(),arctan(),isnegative(p2)&&(evaluatingAsFloats?push_double(Math.PI):push_symbol(PI),isnegative(p3)?subtract():add()))):isZeroAtomOrTensor(get_binding(symbol(ASSUME_REAL_VARIABLES)))?(push_symbol(ARG),push(p1),list(2)):push_integer(0);return restore()},bake=function(){var h,s,t,x,y,z;if(h=0,s=0,t=0,x=0,y=0,z=0,expanding++,save(),p1=pop(),s=ispolyexpandedform(p1,symbol(SYMBOL_S)),t=ispolyexpandedform(p1,symbol(SYMBOL_T)),x=ispolyexpandedform(p1,symbol(SYMBOL_X)),y=ispolyexpandedform(p1,symbol(SYMBOL_Y)),z=ispolyexpandedform(p1,symbol(SYMBOL_Z)),1===s&&0===t&&0===x&&0===y&&0===z)p2=symbol(SYMBOL_S),bake_poly();else if(0===s&&1===t&&0===x&&0===y&&0===z)p2=symbol(SYMBOL_T),bake_poly();else if(0===s&&0===t&&1===x&&0===y&&0===z)p2=symbol(SYMBOL_X),bake_poly();else if(0===s&&0===t&&0===x&&1===y&&0===z)p2=symbol(SYMBOL_Y),bake_poly();else if(0===s&&0===t&&0===x&&0===y&&1===z)p2=symbol(SYMBOL_Z),bake_poly();else if(iscons(p1)&&car(p1)!==symbol(FOR)){for(h=tos,push(car(p1)),p1=cdr(p1);iscons(p1);)push(car(p1)),bake(),p1=cdr(p1);list(tos-h)}else push(p1);return restore(),expanding--},polyform=function(){var h;if(h=0,save(),p2=pop(),p1=pop(),ispolyexpandedform(p1,p2))bake_poly();else if(iscons(p1)){for(h=tos,push(car(p1)),p1=cdr(p1);iscons(p1);)push(car(p1)),push(p2),polyform(),p1=cdr(p1);list(tos-h)}else push(p1);return restore()},bake_poly=function(){var a,h,i,k,n,o,ref;for(h=0,i=0,k=0,n=0,a=tos,push(p1),push(p2),k=coeff(),h=tos,i=o=ref=k-1;o>=0;i=o+=-1)p1=stack[a+i],bake_poly_term(i);return(n=tos-h)>1&&(list(n),push(symbol(ADD)),swap(),cons()),p1=pop(),moveTos(tos-k),push(p1)},bake_poly_term=function(k){var h,n;if(h=0,n=0,!isZeroAtomOrTensor(p1)){if(0!==k){if(h=tos,car(p1)===symbol(MULTIPLY))for(p1=cdr(p1);iscons(p1);)push(car(p1)),p1=cdr(p1);else equaln(p1,1)||push(p1);return 1===k?push(p2):(push(symbol(POWER)),push(p2),push_integer(k),list(3)),(n=tos-h)>1?(list(n),push(symbol(MULTIPLY)),swap(),cons()):void 0}if(car(p1)===symbol(ADD))for(p1=cdr(p1);iscons(p1);)push(car(p1)),p1=cdr(p1);else push(p1)}},Eval_besselj=function(){return push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),besselj()},besselj=function(){return save(),yybesselj(),restore()},yybesselj=function(){var d,n;if(d=0,n=0,p2=pop(),p1=pop(),push(p2),n=pop_integer(),isdouble(p1)&&!isNaN(n))return d=jn(n,p1.d),void push_double(d);if(isZeroAtomOrTensor(p1)&&isZeroAtomOrTensor(p2))push_integer(1);else{if(!isZeroAtomOrTensor(p1)||isNaN(n))return p2.k===NUM&&MEQUAL(p2.q.b,2)?MEQUAL(p2.q.a,1)?(evaluatingAsFloats?push_double(2/Math.PI):(push_integer(2),push_symbol(PI),divide()),push(p1),divide(),push_rational(1,2),power(),push(p1),sine(),void multiply()):MEQUAL(p2.q.a,-1)?(evaluatingAsFloats?push_double(2/Math.PI):(push_integer(2),push_symbol(PI),divide()),push(p1),divide(),push_rational(1,2),power(),push(p1),cosine(),void multiply()):(push_integer(MSIGN(p2.q.a)),p3=pop(),push_integer(2),push(p1),divide(),push(p2),push(p3),subtract(),multiply(),push(p1),push(p2),push(p3),subtract(),besselj(),multiply(),push(p1),push(p2),push_integer(2),push(p3),multiply(),subtract(),besselj(),void subtract()):isnegativeterm(p1)?(push(p1),negate(),push(p2),power(),push(p1),push(p2),negate(),power(),multiply(),push_symbol(BESSELJ),push(p1),negate(),push(p2),list(3),void multiply()):isnegativeterm(p2)?(push_integer(-1),push(p2),power(),push_symbol(BESSELJ),push(p1),push(p2),negate(),list(3),void multiply()):(push(symbol(BESSELJ)),push(p1),push(p2),list(3));push_integer(0)}},Eval_bessely=function(){return push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),bessely()},bessely=function(){return save(),yybessely(),restore()},yybessely=function(){var d,n;return d=0,n=0,p2=pop(),p1=pop(),push(p2),n=pop_integer(),isdouble(p1)&&!isNaN(n)?(d=yn(n,p1.d),void push_double(d)):isnegativeterm(p2)?(push_integer(-1),push(p2),power(),push_symbol(BESSELY),push(p1),push(p2),negate(),list(3),void multiply()):(push_symbol(BESSELY),push(p1),push(p2),void list(3))},mint=function(a){return bigInt(a)},isSmall=function(a){return a.geq(Number.MIN_SAFE_INTEGER)&&a.leq(Number.MAX_SAFE_INTEGER)},setSignTo=function(a,b){if(a.isPositive()){if(b<0)return a.multiply(bigInt(-1))}else if(b>0)return a.multiply(bigInt(-1));return a},makeSignSameAs=function(a,b){if(a.isPositive()){if(b.isNegative())return a.multiply(bigInt(-1))}else if(b.isPositive())return a.multiply(bigInt(-1));return a},makePositive=function(a){return a.isNegative()?a.multiply(bigInt(-1)):a},add_numbers=function(){var a,b,theResult;if(a=1,b=1,!isrational(stack[tos-1])||!isrational(stack[tos-2]))return save(),p2=pop(),p1=pop(),a=isdouble(p1)?p1.d:convert_rational_to_double(p1),b=isdouble(p2)?p2.d:convert_rational_to_double(p2),push_double(theResult=a+b),restore();qadd()},subtract_numbers=function(){var a,b;if(a=0,b=0,!isrational(stack[tos-1])||!isrational(stack[tos-2]))return save(),p2=pop(),p1=pop(),a=isdouble(p1)?p1.d:convert_rational_to_double(p1),b=isdouble(p2)?p2.d:convert_rational_to_double(p2),push_double(a-b),restore();qsub()},multiply_numbers=function(){var a,b;if(a=0,b=0,!isrational(stack[tos-1])||!isrational(stack[tos-2]))return save(),p2=pop(),p1=pop(),a=isdouble(p1)?p1.d:convert_rational_to_double(p1),b=isdouble(p2)?p2.d:convert_rational_to_double(p2),push_double(a*b),restore();qmul()},divide_numbers=function(){var a,b;if(a=0,b=0,!isrational(stack[tos-1])||!isrational(stack[tos-2]))return save(),p2=pop(),p1=pop(),isZeroAtomOrTensor(p2)&&stop("divide by zero"),a=isdouble(p1)?p1.d:convert_rational_to_double(p1),b=isdouble(p2)?p2.d:convert_rational_to_double(p2),push_double(a/b),restore();qdiv()},invert_number=function(){var a,b;return save(),p1=pop(),isZeroAtomOrTensor(p1)&&stop("divide by zero"),isdouble(p1)?(push_double(1/p1.d),void restore()):(a=bigInt(p1.q.a),b=bigInt(p1.q.b),b=makeSignSameAs(b,a),a=setSignTo(a,1),(p1=new U).k=NUM,p1.q.a=b,p1.q.b=a,push(p1),restore())},compare_rationals=function(a,b){var ab,ba,t;return t=0,ab=mmul(a.q.a,b.q.b),ba=mmul(a.q.b,b.q.a),t=mcmp(ab,ba)},compare_numbers=function(a,b){var x,y;return x=0,y=0,isrational(a)&&isrational(b)?compare_rationals(a,b):(x=isdouble(a)?a.d:convert_rational_to_double(a))<(y=isdouble(b)?b.d:convert_rational_to_double(b))?-1:x>y?1:0},negate_number=function(){if(save(),p1=pop(),isZeroAtomOrTensor(p1))return push(p1),void restore();switch(p1.k){case NUM:(p2=new U).k=NUM,p2.q.a=bigInt(p1.q.a.multiply(bigInt.minusOne)),p2.q.b=bigInt(p1.q.b),push(p2);break;case DOUBLE:push_double(-p1.d);break;default:stop("bug caught in mp_negate_number")}return restore()},bignum_truncate=function(){var a;return save(),p1=pop(),a=mdiv(p1.q.a,p1.q.b),(p1=new U).k=NUM,p1.q.a=a,p1.q.b=bigInt(1),push(p1),restore()},mp_numerator=function(){return save(),(p1=pop()).k!==NUM?(push(one),void restore()):((p2=new U).k=NUM,p2.q.a=bigInt(p1.q.a),p2.q.b=bigInt(1),push(p2),restore())},mp_denominator=function(){return save(),(p1=pop()).k!==NUM?(push(one),void restore()):((p2=new U).k=NUM,p2.q.a=bigInt(p1.q.b),p2.q.b=bigInt(1),push(p2),restore())},bignum_power_number=function(expo){var a,b,t;return save(),p1=pop(),a=mpow(p1.q.a,Math.abs(expo)),b=mpow(p1.q.b,Math.abs(expo)),expo<0&&(t=a,a=makeSignSameAs(a=b,b=t),b=setSignTo(b,1)),(p1=new U).k=NUM,p1.q.a=a,p1.q.b=b,push(p1),restore()},convert_bignum_to_double=function(p){return p.toJSNumber()},convert_rational_to_double=function(p){var quotientAndRemainder,result;return p.q,result=(quotientAndRemainder=p.q.a.divmod(p.q.b)).quotient+quotientAndRemainder.remainder/p.q.b.toJSNumber()},push_integer=function(n){return DEBUG&&console.log("pushing integer "+n),save(),(p1=new U).k=NUM,p1.q.a=bigInt(n),p1.q.b=bigInt(1),push(p1),restore()},push_double=function(d){return save(),(p1=new U).k=DOUBLE,p1.d=d,push(p1),restore()},push_rational=function(a,b){var p;return(p=new U).k=NUM,p.q.a=bigInt(a),p.q.b=bigInt(b),push(p)},pop_integer=function(){var n;switch(n=NaN,save(),(p1=pop()).k){case NUM:isinteger(p1)&&isSmall(p1.q.a)&&(n=p1.q.a.toJSNumber());break;case DOUBLE:DEBUG&&console.log("popping integer but double is found"),Math.floor(p1.d)===p1.d&&(DEBUG&&console.log("...altough it's an integer"),n=p1.d)}return restore(),n},print_double=function(p,flag){var accumulator,buf;return accumulator="",buf=doubleToReasonableString(p.d),accumulator+=print_str(1===flag&&"-"===buf?buf+1:buf)},bignum_scan_integer=function(s){var a,scounter,sign_;return save(),"+"!==(sign_=s[scounter=0])&&"-"!==sign_||scounter++,a=bigInt(s.substring(scounter)),(p1=new U).k=NUM,p1.q.a=a,p1.q.b=bigInt(1),push(p1),"-"===sign_&&negate(),restore()},bignum_scan_float=function(s){return push_double(parseFloat(s))},print_number=function(p,signed){var aAsString,accumulator,buf,denominatorString;switch(accumulator="",denominatorString="",buf="",p.k){case NUM:aAsString=p.q.a.toString(),signed||"-"===aAsString[0]&&(aAsString=aAsString.substring(1)),printMode===PRINTMODE_LATEX&&isfraction(p)&&(aAsString="\\frac{"+aAsString+"}{"),accumulator+=aAsString,isfraction(p)&&(printMode!==PRINTMODE_LATEX&&(accumulator+="/"),denominatorString=p.q.b.toString(),printMode===PRINTMODE_LATEX&&(denominatorString+="}"),accumulator+=denominatorString);break;case DOUBLE:aAsString=doubleToReasonableString(p.d),signed||"-"===aAsString[0]&&(aAsString=aAsString.substring(1)),accumulator+=aAsString}return accumulator},gcd_numbers=function(){return save(),p2=pop(),p1=pop(),(p3=new U).k=NUM,p3.q.a=mgcd(p1.q.a,p2.q.a),p3.q.b=mgcd(p1.q.b,p2.q.b),p3.q.a=setSignTo(p3.q.a,1),push(p3),restore()},pop_double=function(){var d;switch(d=0,save(),(p1=pop()).k){case NUM:d=convert_rational_to_double(p1);break;case DOUBLE:d=p1.d;break;default:d=0}return restore(),d},bignum_float=function(){var d;return d=0,d=convert_rational_to_double(pop()),push_double(d)},bignum_factorial=function(n){return save(),(p1=new U).k=NUM,p1.q.a=__factorial(n),p1.q.b=bigInt(1),push(p1),restore()},__factorial=function(n){var a,b,i,o,ref,t;if(i=0,0===n||1===n)return a=bigInt(1);if(a=bigInt(2),b=bigInt(0),3<=n)for(i=o=3,ref=n;3<=ref?o<=ref:o>=ref;i=3<=ref?++o:--o)b=bigInt(i),a=t=mmul(a,b);return a},mask=[1,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768,65536,131072,262144,524288,1048576,2097152,4194304,8388608,16777216,33554432,67108864,134217728,268435456,536870912,1073741824,2147483648],mp_set_bit=function(x,k){return console.log("not implemented yet"),x[k/32]|=mask[k%32]},mp_clr_bit=function(x,k){return console.log("not implemented yet"),x[k/32]&=~mask[k%32]},mshiftright=function(a){return a.shiftRight()},Eval_binomial=function(){return push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),binomial()},binomial=function(){return save(),ybinomial(),restore()},ybinomial=function(){if(p2=pop(),p1=pop(),0!==BINOM_check_args())return push(p1),factorial(),push(p2),factorial(),divide(),push(p1),push(p2),subtract(),factorial(),divide();push(zero)},BINOM_check_args=function(){return isNumericAtom(p1)&&lessp(p1,zero)?0:isNumericAtom(p2)&&lessp(p2,zero)?0:isNumericAtom(p1)&&isNumericAtom(p2)&&lessp(p1,p2)?0:1},Eval_ceiling=function(){return push(cadr(p1)),Eval(),ceiling()},ceiling=function(){return save(),yyceiling(),restore()},yyceiling=function(){var d,doNothing;return d=0,p1=pop(),isNumericAtom(p1)?isdouble(p1)?(d=Math.ceil(p1.d),void push_double(d)):isinteger(p1)?void push(p1):((p3=new U).k=NUM,p3.q.a=mdiv(p1.q.a,p1.q.b),p3.q.b=mint(1),push(p3),isnegativenumber(p1)?1:(push_integer(1),add())):(push_symbol(CEILING),push(p1),void list(2))},Eval_choose=function(){return push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),choose()},choose=function(){return save(),p2=pop(),p1=pop(),0===choose_check_args()?(push_integer(0),void restore()):(push(p1),factorial(),push(p2),factorial(),divide(),push(p1),push(p2),subtract(),factorial(),divide(),restore())},choose_check_args=function(){return isNumericAtom(p1)&&lessp(p1,zero)?0:isNumericAtom(p2)&&lessp(p2,zero)?0:isNumericAtom(p1)&&isNumericAtom(p2)&&lessp(p1,p2)?0:1},Eval_circexp=function(){return push(cadr(p1)),Eval(),circexp(),Eval()},circexp=function(){var h,i,o,ref;if(i=0,h=0,save(),p1=pop(),car(p1)===symbol(COS))return push(cadr(p1)),expcos(),void restore();if(car(p1)===symbol(SIN))return push(cadr(p1)),expsin(),void restore();if(car(p1)===symbol(TAN))return p1=cadr(p1),push(imaginaryunit),push(p1),multiply(),exponential(),p2=pop(),push(imaginaryunit),push(p1),multiply(),negate(),exponential(),p3=pop(),push(p3),push(p2),subtract(),push(imaginaryunit),multiply(),push(p2),push(p3),add(),divide(),void restore();if(car(p1)===symbol(COSH))return p1=cadr(p1),push(p1),exponential(),push(p1),negate(),exponential(),add(),push_rational(1,2),multiply(),void restore();if(car(p1)===symbol(SINH))return p1=cadr(p1),push(p1),exponential(),push(p1),negate(),exponential(),subtract(),push_rational(1,2),multiply(),void restore();if(car(p1)===symbol(TANH))return p1=cadr(p1),push(p1),push_integer(2),multiply(),exponential(),p1=pop(),push(p1),push_integer(1),subtract(),push(p1),push_integer(1),add(),divide(),void restore();if(iscons(p1)){for(h=tos;iscons(p1);)push(car(p1)),circexp(),p1=cdr(p1);return list(tos-h),void restore()}if(p1.k===TENSOR){for(push(p1),copy_tensor(),i=o=0,ref=(p1=pop()).tensor.nelem;0<=ref?o<ref:o>ref;i=0<=ref?++o:--o)push(p1.tensor.elem[i]),circexp(),p1.tensor.elem[i]=pop();return push(p1),void restore()}return push(p1),restore()},Eval_clearall=function(){return do_clearall(),push(symbol(NIL))},do_clearall=function(){return 0===test_flag&&clear_term(),do_clearPatterns(),clear_symbols(),defn(),codeGen=!1},clearall=function(){return run("clearall")},clearRenamedVariablesToAvoidBindingToExternalScope=function(){var i,o,ref,results;for(results=[],i=o=0,ref=symtab.length;0<=ref?o<ref:o>ref;i=0<=ref?++o:--o)-1!==symtab[i].printname.indexOf("AVOID_BINDING_TO_EXTERNAL_SCOPE_VALUE")?(symtab[i].k=SYM,symtab[i].printname="",binding[i]=symtab[i],results.push(isSymbolReclaimable[i]=!0)):results.push(void 0);return results},Eval_clear=function(){var indexFound,variableToBeCleared;for(p2=cdr(p1);iscons(p2);)(variableToBeCleared=car(p2)).k!==SYM&&stop("symbol error"),indexFound=symtab.indexOf(variableToBeCleared),symtab[indexFound].k=SYM,symtab[indexFound].printname="",binding[indexFound]=symtab[indexFound],isSymbolReclaimable[indexFound]=!0,p2=cdr(p2);return push(symbol(NIL))},DEBUG_CLOCKFORM=!1,Eval_clock=function(){return push(cadr(p1)),Eval(),clockform()},clockform=function(){return save(),p1=pop(),push(p1),abs(),DEBUG_CLOCKFORM&&console.log("clockform: abs of "+p1+" : "+stack[tos-1]),push_symbol(POWER),push_integer(-1),push(p1),arg(),DEBUG_CLOCKFORM&&console.log("clockform: arg of "+p1+" : "+stack[tos-1]),evaluatingAsFloats?push_double(Math.PI):push(symbol(PI)),divide(),DEBUG_CLOCKFORM&&console.log("clockform: divide : "+stack[tos-1]),list(3),DEBUG_CLOCKFORM&&console.log("clockform: power : "+stack[tos-1]),multiply(),DEBUG_CLOCKFORM&&console.log("clockform: multiply : "+stack[tos-1]),restore()},Eval_coeff=function(){return push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),push(cadddr(p1)),Eval(),p3=pop(),p2=pop(),p1=pop(),p3===symbol(NIL)&&(p3=p2,p2=symbol(SYMBOL_X)),push(p1),push(p2),push(p3),power(),divide(),push(p2),filter()},coeff=function(){var h,n,prev_expanding;for(save(),p2=pop(),p1=pop(),h=tos;;){if(push(p1),push(p2),push(zero),subst(),Eval(),p3=pop(),push(p3),push(p1),push(p3),subtract(),p1=pop(),equal(p1,zero))return n=tos-h,restore(),n;push(p1),push(p2),prev_expanding=expanding,expanding=1,divide(),expanding=prev_expanding,p1=pop()}},Eval_cofactor=function(){var doNothing,i,j,n;return i=0,j=0,n=0,push(cadr(p1)),Eval(),p2=pop(),istensor(p2)&&2===p2.tensor.ndim&&p2.tensor.dim[0]===p2.tensor.dim[1]?doNothing=1:stop("cofactor: 1st arg: square matrix expected"),n=p2.tensor.dim[0],push(caddr(p1)),Eval(),((i=pop_integer())<1||i>n)&&stop("cofactor: 2nd arg: row index expected"),push(cadddr(p1)),Eval(),((j=pop_integer())<1||j>n)&&stop("cofactor: 3rd arg: column index expected"),cofactor(p2,n,i-1,j-1)},cofactor=function(p,n,row,col){var i,i1,j,o,ref,ref1;for(i=0,j=0,i=o=0,ref=n;0<=ref?o<ref:o>ref;i=0<=ref?++o:--o)for(j=i1=0,ref1=n;0<=ref1?i1<ref1:i1>ref1;j=0<=ref1?++i1:--i1)i!==row&&j!==col&&push(p.tensor.elem[n*i+j]);if(determinant(n-1),(row+col)%2)return negate()},Eval_condense=function(){return push(cadr(p1)),Eval(),Condense()},Condense=function(){var prev_expanding;return prev_expanding=expanding,expanding=0,save(),yycondense(),restore(),expanding=prev_expanding},yycondense=function(){if(p1=pop(),car(p1)===symbol(ADD)){for(p3=cdr(p1),push(car(p3)),p3=cdr(p3);iscons(p3);)push(car(p3)),gcd(),p3=cdr(p3);for(inverse(),p2=pop(),push(zero),p3=cdr(p1);iscons(p3);)push(p2),push(car(p3)),multiply_noexpand(),add(),p3=cdr(p3);return yyexpand(),push(p2),divide()}push(p1)},Eval_conj=function(){return push(cadr(p1)),Eval(),p1=pop(),push(p1),Find(p1,imaginaryunit)?conjugate():(polar(),conjugate(),clockform())},conjugate=function(){return push(imaginaryunit),push(imaginaryunit),negate(),subst(),Eval()},consCount=0,cons=function(){var p;return consCount++,DEBUG&&console.log("cons tos: "+tos+" # "+consCount),(p=new U).k=CONS,p.cons.cdr=pop(),p===p.cons.cdr&&console.log("something wrong p == its cdr"),p.cons.car=pop(),push(p)},Eval_contract=function(){return push(cadr(p1)),Eval(),cddr(p1)===symbol(NIL)?(push_integer(1),push_integer(2)):(push(caddr(p1)),Eval(),push(cadddr(p1)),Eval()),contract()},contract=function(){return save(),yycontract(),restore()},yycontract=function(){var a,ai,an,b,h,i,i1,j,j1,k,l,l1,m,m1,n,n1,ndim,nelem,o,o1,ref,ref1,ref2,ref3,ref4,ref5,ref6;if(h=0,i=0,j=0,k=0,l=0,m=0,n=0,ndim=0,nelem=0,ai=[],an=[],p3=pop(),p2=pop(),p1=pop(),!istensor(p1))return isZeroAtomOrTensor(p1)||stop("contract: tensor expected, 1st arg is not a tensor"),void push(zero);for(push(p2),l=pop_integer(),push(p3),m=pop_integer(),ndim=p1.tensor.ndim,(l<1||l>ndim||m<1||m>ndim||l===m||p1.tensor.dim[l-1]!==p1.tensor.dim[m-1])&&stop("contract: index out of range"),l--,m--,n=p1.tensor.dim[l],nelem=1,i=o=0,ref=ndim;0<=ref?o<ref:o>ref;i=0<=ref?++o:--o)i!==l&&i!==m&&(nelem*=p1.tensor.dim[i]);for((p2=alloc_tensor(nelem)).tensor.ndim=ndim-2,j=0,i=i1=0,ref1=ndim;0<=ref1?i1<ref1:i1>ref1;i=0<=ref1?++i1:--i1)i!==l&&i!==m&&(p2.tensor.dim[j++]=p1.tensor.dim[i]);for(a=p1.tensor.elem,b=p2.tensor.elem,i=j1=0,ref2=ndim;0<=ref2?j1<ref2:j1>ref2;i=0<=ref2?++j1:--j1)ai[i]=0,an[i]=p1.tensor.dim[i];for(i=l1=0,ref3=nelem;0<=ref3?l1<ref3:l1>ref3;i=0<=ref3?++l1:--l1){for(push(zero),j=m1=0,ref4=n;0<=ref4?m1<ref4:m1>ref4;j=0<=ref4?++m1:--m1){for(ai[l]=j,ai[m]=j,h=0,k=n1=0,ref5=ndim;0<=ref5?n1<ref5:n1>ref5;k=0<=ref5?++n1:--n1)h=h*an[k]+ai[k];push(a[h]),add()}for(b[i]=pop(),j=o1=ref6=ndim-1;ref6<=0?o1<=0:o1>=0;j=ref6<=0?++o1:--o1)if(j!==l&&j!==m){if(++ai[j]<an[j])break;ai[j]=0}}return push(1===nelem?b[0]:p2)},Eval_cos=function(){return push(cadr(p1)),Eval(),cosine()},cosine=function(){return save(),p1=pop(),car(p1)===symbol(ADD)?cosine_of_angle_sum():cosine_of_angle(),restore()},cosine_of_angle_sum=function(){for(p2=cdr(p1);iscons(p2);){if(p4=car(p2),isnpi(p4))return push(p1),push(p4),subtract(),p3=pop(),push(p3),cosine(),push(p4),cosine(),multiply(),push(p3),sine(),push(p4),sine(),multiply(),void subtract();p2=cdr(p2)}return cosine_of_angle()},cosine_of_angle=function(){var d,n;if(car(p1)!==symbol(ARCCOS)){if(isdouble(p1))return d=Math.cos(p1.d),Math.abs(d)<1e-10&&(d=0),void push_double(d);if(isnegative(p1)&&(push(p1),negate(),p1=pop()),car(p1)===symbol(ARCTAN))return push_integer(1),push(cadr(p1)),push_integer(2),power(),add(),push_rational(-1,2),void power();if(push(p1),push_integer(180),multiply(),evaluatingAsFloats?push_double(Math.PI):push_symbol(PI),divide(),(n=pop_integer())<0||isNaN(n))return push(symbol(COS)),push(p1),void list(2);switch(n%360){case 90:case 270:return push_integer(0);case 60:case 300:return push_rational(1,2);case 120:case 240:return push_rational(-1,2);case 45:case 315:return push_rational(1,2),push_integer(2),push_rational(1,2),power(),multiply();case 135:case 225:return push_rational(-1,2),push_integer(2),push_rational(1,2),power(),multiply();case 30:case 330:return push_rational(1,2),push_integer(3),push_rational(1,2),power(),multiply();case 150:case 210:return push_rational(-1,2),push_integer(3),push_rational(1,2),power(),multiply();case 0:return push_integer(1);case 180:return push_integer(-1);default:return push(symbol(COS)),push(p1),list(2)}}else push(cadr(p1))},Eval_cosh=function(){return push(cadr(p1)),Eval(),ycosh()},ycosh=function(){return save(),yycosh(),restore()},yycosh=function(){var d;if(d=0,p1=pop(),car(p1)!==symbol(ARCCOSH)){if(isdouble(p1))return d=Math.cosh(p1.d),Math.abs(d)<1e-10&&(d=0),void push_double(d);if(!isZeroAtomOrTensor(p1))return push_symbol(COSH),push(p1),list(2);push(one)}else push(cadr(p1))},Eval_decomp=function(){var h;return save(),console.log("Eval_decomp is being called!!!!!!!!!!!!!!!!!!!!"),h=tos,push(symbol(NIL)),push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),(p1=pop())===symbol(NIL)?guess():push(p1),decomp(!1),list(tos-h),restore()},pushTryNotToDuplicate=function(toBePushed){if(!(tos>0&&(DEBUG&&console.log("comparing "+toBePushed+" to: "+stack[tos-1]),equal(toBePushed,stack[tos-1]))))return push(toBePushed);DEBUG&&console.log("skipping "+toBePushed+" because it's already on stack ")},decomp=function(generalTransform){if(save(),p2=pop(),p1=pop(),DEBUG&&console.log("DECOMPOSING "+p1),generalTransform){if(!iscons(p1))return DEBUG&&console.log(" ground thing: "+p1),pushTryNotToDuplicate(p1),void restore()}else if(0===Find(p1,p2))return DEBUG&&console.log(" entire expression is constant"),pushTryNotToDuplicate(p1),void restore();if(isadd(p1))return decomp_sum(generalTransform),void restore();if(ismultiply(p1))return decomp_product(generalTransform),void restore();for(DEBUG&&console.log(" naive decomp"),p3=cdr(p1),DEBUG&&console.log("startig p3: "+p3);iscons(p3);)generalTransform&&push(car(p3)),DEBUG&&console.log("recursive decomposition"),push(car(p3)),DEBUG&&console.log("car(p3): "+car(p3)),push(p2),DEBUG&&console.log("p2: "+p2),decomp(generalTransform),p3=cdr(p3);return restore()},decomp_sum=function(generalTransform){var h;for(DEBUG&&console.log(" decomposing the sum "),h=0,p3=cdr(p1);iscons(p3);)(Find(car(p3),p2)||generalTransform)&&(push(car(p3)),push(p2),decomp(generalTransform)),p3=cdr(p3);for(h=tos,p3=cdr(p1);iscons(p3);)0===Find(car(p3),p2)&&pushTryNotToDuplicate(car(p3)),p3=cdr(p3);if(tos-h)return add_all(tos-h),p3=pop(),pushTryNotToDuplicate(p3),push(p3),negate()},decomp_product=function(generalTransform){var h;for(DEBUG&&console.log(" decomposing the product "),h=0,p3=cdr(p1);iscons(p3);)(Find(car(p3),p2)||generalTransform)&&(push(car(p3)),push(p2),decomp(generalTransform)),p3=cdr(p3);for(h=tos,p3=cdr(p1);iscons(p3);)0===Find(car(p3),p2)&&pushTryNotToDuplicate(car(p3)),p3=cdr(p3);if(tos-h)return multiply_all(tos-h)},define_user_function=function(){return p3=caadr(p1),p4=cdadr(p1),p5=caddr(p1),issymbol(p3)||stop("function name?"),car(p5)===symbol(EVAL)&&(push(cadr(p5)),Eval(),p5=pop()),push_symbol(FUNCTION),push(p5),push(p4),list(3),p5=pop(),set_binding(p3,p5),push_symbol(NIL)},Eval_function_reference=function(){return push(p1)},Eval_defint=function(){for(push(cadr(p1)),Eval(),p2=pop(),p1=cddr(p1);iscons(p1);)push(car(p1)),p1=cdr(p1),Eval(),p3=pop(),push(car(p1)),p1=cdr(p1),Eval(),p4=pop(),push(car(p1)),p1=cdr(p1),Eval(),p5=pop(),push(p2),push(p3),integral(),p2=pop(),push(p2),push(p3),push(p5),subst(),Eval(),push(p2),push(p3),push(p4),subst(),Eval(),subtract(),p2=pop();return push(p2)},Eval_degree=function(){return push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),(p1=pop())===symbol(NIL)?guess():push(p1),degree()},degree=function(){return save(),p2=pop(),p1=pop(),p3=zero,yydegree(p1),push(p3),restore()},yydegree=function(p){var results;if(equal(p,p2)){if(isZeroAtomOrTensor(p3))return p3=one}else if(car(p)===symbol(POWER)){if(equal(cadr(p),p2)&&isNumericAtom(caddr(p))&&lessp(p3,caddr(p)))return p3=caddr(p)}else if(iscons(p)){for(p=cdr(p),results=[];iscons(p);)yydegree(car(p)),results.push(p=cdr(p));return results}},Eval_denominator=function(){return push(cadr(p1)),Eval(),denominator()},denominator=function(){var h,theArgument;if(h=0,theArgument=pop(),car(theArgument)===symbol(ADD)&&(push(theArgument),rationalize(),theArgument=pop()),car(theArgument)!==symbol(MULTIPLY)||isplusone(car(cdr(theArgument))))return isrational(theArgument)?(push(theArgument),mp_denominator()):car(theArgument)===symbol(POWER)&&isnegativeterm(caddr(theArgument))?(push(theArgument),reciprocate()):push(one);for(h=tos,theArgument=cdr(theArgument);iscons(theArgument);)push(car(theArgument)),denominator(),theArgument=cdr(theArgument);return multiply_all(tos-h)},Eval_derivative=function(){var doNothing,i,i1,n,o,ref,ref1;for(i=0,p1=cdr(p1),push(car(p1)),Eval(),p1=cdr(p1),push(car(p1)),Eval(),(p2=pop())===symbol(NIL)?(guess(),push(symbol(NIL))):isNumericAtom(p2)?(guess(),push(p2)):(push(p2),p1=cdr(p1),push(car(p1)),Eval()),p5=pop(),p4=pop(),p3=pop();;){if(isNumericAtom(p5)?(push(p5),n=pop_integer(),isNaN(n)&&stop("nth derivative: check n")):n=1,push(p3),n>=0)for(i=o=0,ref=n;0<=ref?o<ref:o>ref;i=0<=ref?++o:--o)push(p4),derivative();else for(i=i1=0,ref1=n=-n;0<=ref1?i1<ref1:i1>ref1;i=0<=ref1?++i1:--i1)push(p4),integral();if(p3=pop(),p5===symbol(NIL))break;if(isNumericAtom(p5)){if(p1=cdr(p1),push(car(p1)),Eval(),(p5=pop())===symbol(NIL))break;isNumericAtom(p5)?doNothing=1:(p4=p5,p1=cdr(p1),push(car(p1)),Eval(),p5=pop())}else p4=p5,p1=cdr(p1),push(car(p1)),Eval(),p5=pop()}return push(p3)},derivative=function(){return save(),p2=pop(),p1=pop(),isNumericAtom(p2)&&stop("undefined function"),istensor(p1)?istensor(p2)?d_tensor_tensor():d_tensor_scalar():istensor(p2)?d_scalar_tensor():d_scalar_scalar(),restore()},d_scalar_scalar=function(){return issymbol(p2)?d_scalar_scalar_1():(push(p1),push(p2),push(symbol(SECRETX)),subst(),push(symbol(SECRETX)),derivative(),push(symbol(SECRETX)),push(p2),subst())},d_scalar_scalar_1=function(){if(equal(p1,p2))push(one);else if(iscons(p1))if(isadd(p1))dsum();else if(car(p1)!==symbol(MULTIPLY))if(car(p1)!==symbol(POWER))if(car(p1)!==symbol(DERIVATIVE))if(car(p1)!==symbol(LOG))if(car(p1)!==symbol(SIN))if(car(p1)!==symbol(COS))if(car(p1)!==symbol(TAN))if(car(p1)!==symbol(ARCSIN))if(car(p1)!==symbol(ARCCOS))if(car(p1)!==symbol(ARCTAN))if(car(p1)!==symbol(SINH))if(car(p1)!==symbol(COSH))if(car(p1)!==symbol(TANH))if(car(p1)!==symbol(ARCSINH))if(car(p1)!==symbol(ARCCOSH))if(car(p1)!==symbol(ARCTANH))if(car(p1)!==symbol(ABS))if(car(p1)!==symbol(SGN))if(car(p1)!==symbol(HERMITE))if(car(p1)!==symbol(ERF))if(car(p1)!==symbol(ERFC))if(car(p1)!==symbol(BESSELJ))if(car(p1)!==symbol(BESSELY)){if(car(p1)!==symbol(INTEGRAL)||caddr(p1)!==p2)return dfunction();derivative_of_integral()}else isZeroAtomOrTensor(caddr(p1))?dbessely0():dbesselyn();else isZeroAtomOrTensor(caddr(p1))?dbesselj0():dbesseljn();else derfc();else derf();else dhermite();else dsgn();else dabs();else darctanh();else darccosh();else darcsinh();else dtanh();else dcosh();else dsinh();else darctan();else darccos();else darcsin();else dtan();else dcos();else dsin();else dlog();else dd();else dpower();else dproduct();else push(zero)},dsum=function(){var h;for(h=tos,p1=cdr(p1);iscons(p1);)push(car(p1)),push(p2),derivative(),p1=cdr(p1);return add_all(tos-h)},dproduct=function(){var i,i1,j,n,o,ref,ref1;for(i=0,j=0,n=0,i=o=0,ref=n=length(p1)-1;0<=ref?o<ref:o>ref;i=0<=ref?++o:--o){for(p3=cdr(p1),j=i1=0,ref1=n;0<=ref1?i1<ref1:i1>ref1;j=0<=ref1?++i1:--i1)push(car(p3)),i===j&&(push(p2),derivative()),p3=cdr(p3);multiply_all(n)}return add_all(n)},dpower=function(){return push(caddr(p1)),push(cadr(p1)),divide(),push(cadr(p1)),push(p2),derivative(),multiply(),push(cadr(p1)),logarithm(),push(caddr(p1)),push(p2),derivative(),multiply(),add(),push(p1),multiply()},dlog=function(){return push(cadr(p1)),push(p2),derivative(),push(cadr(p1)),divide()},dd=function(){return push(cadr(p1)),push(p2),derivative(),p3=pop(),car(p3)===symbol(DERIVATIVE)?(push_symbol(DERIVATIVE),push_symbol(DERIVATIVE),push(cadr(p3)),lessp(caddr(p3),caddr(p1))?(push(caddr(p3)),list(3),push(caddr(p1))):(push(caddr(p1)),list(3),push(caddr(p3))),list(3)):(push(p3),push(caddr(p1)),derivative())},dfunction=function(){return(p3=cdr(p1))===symbol(NIL)||Find(p3,p2)?(push_symbol(DERIVATIVE),push(p1),push(p2),list(3)):push(zero)},dsin=function(){return push(cadr(p1)),push(p2),derivative(),push(cadr(p1)),cosine(),multiply()},dcos=function(){return push(cadr(p1)),push(p2),derivative(),push(cadr(p1)),sine(),multiply(),negate()},dtan=function(){return push(cadr(p1)),push(p2),derivative(),push(cadr(p1)),cosine(),push_integer(-2),power(),multiply()},darcsin=function(){return push(cadr(p1)),push(p2),derivative(),push_integer(1),push(cadr(p1)),push_integer(2),power(),subtract(),push_rational(-1,2),power(),multiply()},darccos=function(){return push(cadr(p1)),push(p2),derivative(),push_integer(1),push(cadr(p1)),push_integer(2),power(),subtract(),push_rational(-1,2),power(),multiply(),negate()},darctan=function(){return push(cadr(p1)),push(p2),derivative(),push_integer(1),push(cadr(p1)),push_integer(2),power(),add(),inverse(),multiply(),simplify()},dsinh=function(){return push(cadr(p1)),push(p2),derivative(),push(cadr(p1)),ycosh(),multiply()},dcosh=function(){return push(cadr(p1)),push(p2),derivative(),push(cadr(p1)),ysinh(),multiply()},dtanh=function(){return push(cadr(p1)),push(p2),derivative(),push(cadr(p1)),ycosh(),push_integer(-2),power(),multiply()},darcsinh=function(){return push(cadr(p1)),push(p2),derivative(),push(cadr(p1)),push_integer(2),power(),push_integer(1),add(),push_rational(-1,2),power(),multiply()},darccosh=function(){return push(cadr(p1)),push(p2),derivative(),push(cadr(p1)),push_integer(2),power(),push_integer(-1),add(),push_rational(-1,2),power(),multiply()},darctanh=function(){return push(cadr(p1)),push(p2),derivative(),push_integer(1),push(cadr(p1)),push_integer(2),power(),subtract(),inverse(),multiply()},dabs=function(){return push(cadr(p1)),push(p2),derivative(),push(cadr(p1)),sgn(),multiply()},dsgn=function(){return push(cadr(p1)),push(p2),derivative(),push(cadr(p1)),dirac(),multiply(),push_integer(2),multiply()},dhermite=function(){return push(cadr(p1)),push(p2),derivative(),push_integer(2),push(caddr(p1)),multiply(),multiply(),push(cadr(p1)),push(caddr(p1)),push_integer(-1),add(),hermite(),multiply()},derf=function(){return push(cadr(p1)),push_integer(2),power(),push_integer(-1),multiply(),exponential(),evaluatingAsFloats?push_double(Math.PI):push_symbol(PI),push_rational(-1,2),power(),multiply(),push_integer(2),multiply(),push(cadr(p1)),push(p2),derivative(),multiply()},derfc=function(){return push(cadr(p1)),push_integer(2),power(),push_integer(-1),multiply(),exponential(),evaluatingAsFloats?push_double(Math.PI):push_symbol(PI),push_rational(-1,2),power(),multiply(),push_integer(-2),multiply(),push(cadr(p1)),push(p2),derivative(),multiply()},dbesselj0=function(){return push(cadr(p1)),push(p2),derivative(),push(cadr(p1)),push_integer(1),besselj(),multiply(),push_integer(-1),multiply()},dbesseljn=function(){return push(cadr(p1)),push(p2),derivative(),push(cadr(p1)),push(caddr(p1)),push_integer(-1),add(),besselj(),push(caddr(p1)),push_integer(-1),multiply(),push(cadr(p1)),divide(),push(cadr(p1)),push(caddr(p1)),besselj(),multiply(),add(),multiply()},dbessely0=function(){return push(cadr(p1)),push(p2),derivative(),push(cadr(p1)),push_integer(1),besselj(),multiply(),push_integer(-1),multiply()},dbesselyn=function(){return push(cadr(p1)),push(p2),derivative(),push(cadr(p1)),push(caddr(p1)),push_integer(-1),add(),bessely(),push(caddr(p1)),push_integer(-1),multiply(),push(cadr(p1)),divide(),push(cadr(p1)),push(caddr(p1)),bessely(),multiply(),add(),multiply()},derivative_of_integral=function(){return push(cadr(p1))},DET_check_arg=function(){return istensor(p1)?2!==p1.tensor.ndim?0:p1.tensor.dim[0]!==p1.tensor.dim[1]?0:1:0},det=function(){var a,i,i1,n,o,ref,ref1;if(i=0,n=0,save(),p1=pop(),0===DET_check_arg())return push_symbol(DET),push(p1),list(2),void restore();for(n=p1.tensor.nelem,a=p1.tensor.elem,i=o=0,ref=n;(0<=ref?o<ref:o>ref)&&isNumericAtom(a[i]);i=0<=ref?++o:--o);if(i===n)yydetg();else{for(i=i1=0,ref1=p1.tensor.nelem;0<=ref1?i1<ref1:i1>ref1;i=0<=ref1?++i1:--i1)push(p1.tensor.elem[i]);determinant(p1.tensor.dim[0])}return restore()},determinant=function(n){var a,breakFromOutherWhile,h,i,i1,j,k,o,q,ref,ref1,s,sign_,t;for(h=0,i=0,j=0,k=0,q=0,s=0,sign_=0,t=0,a=[],h=tos-n*n,i=o=0,ref=n;0<=ref?o<ref:o>ref;i=0<=ref?++o:--o)a[i]=i,a[i+n]=0,a[i+n+n]=1;for(sign_=1,push(zero);;){for(push_integer(1===sign_?1:-1),i=i1=0,ref1=n;0<=ref1?i1<ref1:i1>ref1;i=0<=ref1?++i1:--i1)k=n*a[i]+i,push(stack[h+k]),multiply();for(add(),j=n-1,s=0,breakFromOutherWhile=!1;;)if((q=a[n+j]+a[n+n+j])<0)a[n+n+j]=-a[n+n+j],j--;else{if(q!==j+1)break;if(0===j){breakFromOutherWhile=!0;break}s++,a[n+n+j]=-a[n+n+j],j--}if(breakFromOutherWhile)break;t=a[j-a[n+j]+s],a[j-a[n+j]+s]=a[j-q+s],a[j-q+s]=t,a[n+j]=q,sign_=-sign_}return stack[h]=stack[tos-1],moveTos(h+1)},detg=function(){return save(),p1=pop(),0===DET_check_arg()?(push_symbol(DET),push(p1),list(2),void restore()):(yydetg(),restore())},yydetg=function(){var i,n,o,ref;for(i=0,n=0,i=o=0,ref=(n=p1.tensor.dim[0])*n;0<=ref?o<ref:o>ref;i=0<=ref?++o:--o)push(p1.tensor.elem[i]);return lu_decomp(n),moveTos(tos-n*n),push(p1)},M=function(h,n,i,j){return stack[h+n*i+j]},setM=function(h,n,i,j,value){return stack[h+n*i+j]=value},lu_decomp=function(n){var d,h,i,i1,j,j1,l1,m1,o,ref,ref1,ref2,ref3,ref4,ref5,ref6,ref7,ref8;for(d=0,h=0,i=0,j=0,h=tos-n*n,p1=one,d=o=0,ref=n-1;0<=ref?o<ref:o>ref;d=0<=ref?++o:--o){if(equal(M(h,n,d,d),zero)){for(i=i1=ref1=d+1,ref2=n;(ref1<=ref2?i1<ref2:i1>ref2)&&equal(M(h,n,i,d),zero);i=ref1<=ref2?++i1:--i1);if(i===n){p1=zero;break}for(j=j1=ref3=d,ref4=n;ref3<=ref4?j1<ref4:j1>ref4;j=ref3<=ref4?++j1:--j1)p2=M(h,n,d,j),setM(h,n,d,j,M(h,n,i,j)),setM(h,n,i,j,p2);push(p1),negate(),p1=pop()}for(push(p1),push(M(h,n,d,d)),multiply(),p1=pop(),i=l1=ref5=d+1,ref6=n;ref5<=ref6?l1<ref6:l1>ref6;i=ref5<=ref6?++l1:--l1)for(push(M(h,n,i,d)),push(M(h,n,d,d)),divide(),negate(),p2=pop(),setM(h,n,i,d,zero),j=m1=ref7=d+1,ref8=n;ref7<=ref8?m1<ref8:m1>ref8;j=ref7<=ref8?++m1:--m1)push(M(h,n,d,j)),push(p2),multiply(),push(M(h,n,i,j)),add(),setM(h,n,i,j,pop())}return push(p1),push(M(h,n,n-1,n-1)),multiply(),p1=pop()},Eval_dirac=function(){return push(cadr(p1)),Eval(),dirac()},dirac=function(){return save(),ydirac(),restore()},ydirac=function(){return p1=pop(),isdouble(p1)?0===p1.d?void push_integer(1):void push_integer(0):isrational(p1)?MZERO(mmul(p1.q.a,p1.q.b))?void push_integer(1):void push_integer(0):car(p1)===symbol(POWER)?(push_symbol(DIRAC),push(cadr(p1)),void list(2)):isnegativeterm(p1)?(push_symbol(DIRAC),push(p1),negate(),void list(2)):((isnegativeterm(p1)||car(p1)===symbol(ADD)&&isnegativeterm(cadr(p1)))&&(push(p1),negate(),p1=pop()),push_symbol(DIRAC),push(p1),list(2))},divisors=function(){var h,i,n,o,ref,subsetOfStack;for(i=0,h=0,n=0,save(),h=tos-1,divisors_onstack(),n=tos-h,(subsetOfStack=stack.slice(h,h+n)).sort(cmp_expr),stack=stack.slice(0,h).concat(subsetOfStack).concat(stack.slice(h+n)),(p1=alloc_tensor(n)).tensor.ndim=1,p1.tensor.dim[0]=n,i=o=0,ref=n;0<=ref?o<ref:o>ref;i=0<=ref?++o:--o)p1.tensor.elem[i]=stack[h+i];return moveTos(h),push(p1),restore()},divisors_onstack=function(){var h,i,k,n,o,ref;if(h=0,i=0,k=0,n=0,save(),p1=pop(),h=tos,isNumericAtom(p1))push(p1),factor_small_number();else if(car(p1)===symbol(ADD))push(p1),__factor_add();else if(car(p1)===symbol(MULTIPLY))for(p1=cdr(p1),isNumericAtom(car(p1))&&(push(car(p1)),factor_small_number(),p1=cdr(p1));iscons(p1);)p2=car(p1),car(p2)===symbol(POWER)?(push(cadr(p2)),push(caddr(p2))):(push(p2),push(one)),p1=cdr(p1);else car(p1)===symbol(POWER)?(push(cadr(p1)),push(caddr(p1))):(push(p1),push(one));for(k=tos,push(one),gen(h,k),i=o=0,ref=n=tos-k;0<=ref?o<ref:o>ref;i=0<=ref?++o:--o)stack[h+i]=stack[k+i];return moveTos(h+n),restore()},gen=function(h,k){var expo,i,o,ref;if(expo=0,i=0,save(),p1=pop(),h===k)return push(p1),void restore();if(p2=stack[h+0],p3=stack[h+1],push(p3),expo=pop_integer(),!isNaN(expo))for(i=o=0,ref=Math.abs(expo);0<=ref?o<=ref:o>=ref;i=0<=ref?++o:--o)push(p1),push(p2),push_integer(sign(expo)*i),power(),multiply(),gen(h+2,k);return restore()},__factor_add=function(){for(save(),p1=pop(),p3=cdr(p1),push(car(p3)),p3=cdr(p3);iscons(p3);)push(car(p3)),gcd(),p3=cdr(p3);if(p2=pop(),isplusone(p2))return push(p1),push(one),void restore();if(isNumericAtom(p2))push(p2),factor_small_number();else if(car(p2)===symbol(MULTIPLY))for(p3=cdr(p2),isNumericAtom(car(p3))?(push(car(p3)),factor_small_number()):(push(car(p3)),push(one)),p3=cdr(p3);iscons(p3);)push(car(p3)),push(one),p3=cdr(p3);else push(p2),push(one);for(push(p2),inverse(),p2=pop(),push(zero),p3=cdr(p1);iscons(p3);)push(p2),push(car(p3)),multiply(),add(),p3=cdr(p3);return push(one),restore()},dpow=function(){var a,b,base,expo,result,theta;return a=0,b=0,base=0,expo=0,result=0,theta=0,expo=pop_double(),0===(base=pop_double())&&expo<0&&stop("divide by zero"),base>=0||expo%1==0?(result=Math.pow(base,expo),void push_double(result)):(result=Math.pow(Math.abs(base),expo),theta=Math.PI*expo,expo%.5==0?(a=0,b=Math.sin(theta)):(a=Math.cos(theta),b=Math.sin(theta)),push_double(a*result),push_double(b*result),push(imaginaryunit),multiply(),add())},EIG_N=0,EIG_yydd=[],EIG_yyqq=[],Eval_eigen=function(){return 0===EIG_check_arg()&&stop("eigen: argument is not a square matrix"),eigen(EIGEN),p1=usr_symbol("D"),set_binding(p1,p2),p1=usr_symbol("Q"),set_binding(p1,p3),push(symbol(NIL))},Eval_eigenval=function(){return 0===EIG_check_arg()?(push_symbol(EIGENVAL),push(p1),void list(2)):(eigen(EIGENVAL),push(p2))},Eval_eigenvec=function(){return 0===EIG_check_arg()?(push_symbol(EIGENVEC),push(p1),void list(2)):(eigen(EIGENVEC),push(p3))},EIG_check_arg=function(){var i,i1,j,j1,l1,o,ref,ref1,ref2,ref3,ref4;if(i=0,j=0,push(cadr(p1)),Eval(),yyfloat(),Eval(),p1=pop(),!istensor(p1))return 0;for(2===p1.tensor.ndim&&p1.tensor.dim[0]===p1.tensor.dim[1]||stop("eigen: argument is not a square matrix"),i=o=0,ref=EIG_N=p1.tensor.dim[0];0<=ref?o<ref:o>ref;i=0<=ref?++o:--o)for(j=i1=0,ref1=EIG_N;0<=ref1?i1<ref1:i1>ref1;j=0<=ref1?++i1:--i1)isdouble(p1.tensor.elem[EIG_N*i+j])||stop("eigen: matrix is not numerical");for(i=j1=0,ref2=EIG_N-1;0<=ref2?j1<ref2:j1>ref2;i=0<=ref2?++j1:--j1)for(j=l1=ref3=i+1,ref4=EIG_N;ref3<=ref4?l1<ref4:l1>ref4;j=ref3<=ref4?++l1:--l1)Math.abs(p1.tensor.elem[EIG_N*i+j].d-p1.tensor.elem[EIG_N*j+i].d)>1e-10&&stop("eigen: matrix is not symmetrical");return 1},eigen=function(op){var i,i1,j,j1,l1,m1,n1,o,o1,q1,r1,ref,ref1,ref10,ref2,ref3,ref4,ref5,ref6,ref7,ref8,ref9,results,s1;for(i=0,j=0,i=o=0,ref=EIG_N*EIG_N;0<=ref?o<ref:o>ref;i=0<=ref?++o:--o)EIG_yydd[i]=0;for(i=i1=0,ref1=EIG_N*EIG_N;0<=ref1?i1<ref1:i1>ref1;i=0<=ref1?++i1:--i1)EIG_yyqq[i]=0;for(i=j1=0,ref2=EIG_N;0<=ref2?j1<ref2:j1>ref2;i=0<=ref2?++j1:--j1)for(EIG_yydd[EIG_N*i+i]=p1.tensor.elem[EIG_N*i+i].d,j=l1=ref3=i+1,ref4=EIG_N;ref3<=ref4?l1<ref4:l1>ref4;j=ref3<=ref4?++l1:--l1)EIG_yydd[EIG_N*i+j]=p1.tensor.elem[EIG_N*i+j].d,EIG_yydd[EIG_N*j+i]=p1.tensor.elem[EIG_N*i+j].d;for(i=m1=0,ref5=EIG_N;0<=ref5?m1<ref5:m1>ref5;i=0<=ref5?++m1:--m1)for(EIG_yyqq[EIG_N*i+i]=1,j=n1=ref6=i+1,ref7=EIG_N;ref6<=ref7?n1<ref7:n1>ref7;j=ref6<=ref7?++n1:--n1)EIG_yyqq[EIG_N*i+j]=0,EIG_yyqq[EIG_N*j+i]=0;for(i=o1=0;o1<100&&0!==step();i=++o1);if(100===i&&printstr("\nnote: eigen did not converge\n"),op===EIGEN||op===EIGENVAL)for(push(p1),copy_tensor(),p2=pop(),i=q1=0,ref8=EIG_N;0<=ref8?q1<ref8:q1>ref8;i=0<=ref8?++q1:--q1)for(j=r1=0,ref9=EIG_N;0<=ref9?r1<ref9:r1>ref9;j=0<=ref9?++r1:--r1)push_double(EIG_yydd[EIG_N*i+j]),p2.tensor.elem[EIG_N*i+j]=pop();if(op===EIGEN||op===EIGENVEC){for(push(p1),copy_tensor(),p3=pop(),results=[],i=s1=0,ref10=EIG_N;0<=ref10?s1<ref10:s1>ref10;i=0<=ref10?++s1:--s1)results.push(function(){var ref11,results1,t1;for(results1=[],j=t1=0,ref11=EIG_N;0<=ref11?t1<ref11:t1>ref11;j=0<=ref11?++t1:--t1)push_double(EIG_yyqq[EIG_N*i+j]),results1.push(p3.tensor.elem[EIG_N*i+j]=pop());return results1}());return results}},step=function(){var count,i,i1,j,o,ref,ref1,ref2;for(i=0,j=0,count=0,i=o=0,ref=EIG_N-1;0<=ref?o<ref:o>ref;i=0<=ref?++o:--o)for(j=i1=ref1=i+1,ref2=EIG_N;ref1<=ref2?i1<ref2:i1>ref2;j=ref1<=ref2?++i1:--i1)0!==EIG_yydd[EIG_N*i+j]&&(step2(i,j),count++);return count},step2=function(p,q){var c,cc,i1,j1,k,o,ref,ref1,ref2,s,ss,t,theta;for(k=0,t=0,theta=0,c=0,cc=0,s=0,ss=0,theta=.5*(EIG_yydd[EIG_N*p+p]-EIG_yydd[EIG_N*q+q])/EIG_yydd[EIG_N*p+q],t=1/(Math.abs(theta)+Math.sqrt(theta*theta+1)),theta<0&&(t=-t),s=t*(c=1/Math.sqrt(t*t+1)),k=o=0,ref=EIG_N;0<=ref?o<ref:o>ref;k=0<=ref?++o:--o)cc=EIG_yydd[EIG_N*p+k],ss=EIG_yydd[EIG_N*q+k],EIG_yydd[EIG_N*p+k]=c*cc+s*ss,EIG_yydd[EIG_N*q+k]=c*ss-s*cc;for(k=i1=0,ref1=EIG_N;0<=ref1?i1<ref1:i1>ref1;k=0<=ref1?++i1:--i1)cc=EIG_yydd[EIG_N*k+p],ss=EIG_yydd[EIG_N*k+q],EIG_yydd[EIG_N*k+p]=c*cc+s*ss,EIG_yydd[EIG_N*k+q]=c*ss-s*cc;for(k=j1=0,ref2=EIG_N;0<=ref2?j1<ref2:j1>ref2;k=0<=ref2?++j1:--j1)cc=EIG_yyqq[EIG_N*p+k],ss=EIG_yyqq[EIG_N*q+k],EIG_yyqq[EIG_N*p+k]=c*cc+s*ss,EIG_yyqq[EIG_N*q+k]=c*ss-s*cc;return EIG_yydd[EIG_N*p+q]=0,EIG_yydd[EIG_N*q+p]=0},Eval_erf=function(){return push(cadr(p1)),Eval(),yerf()},yerf=function(){return save(),yyerf(),restore()},yyerf=function(){var d;if(d=0,p1=pop(),isdouble(p1))return d=1-erfc(p1.d),void push_double(d);if(isZeroAtomOrTensor(p1))push(zero);else{if(isnegativeterm(p1))return push_symbol(ERF),push(p1),negate(),list(2),void negate();push_symbol(ERF),push(p1),list(2)}},Eval_erfc=function(){return push(cadr(p1)),Eval(),yerfc()},yerfc=function(){return save(),yyerfc(),restore()},yyerfc=function(){var d;if(d=0,p1=pop(),isdouble(p1))return d=erfc(p1.d),void push_double(d);isZeroAtomOrTensor(p1)?push(one):(push_symbol(ERFC),push(p1),list(2))},erfc=function(x){var ans,t,z;return 0===x?1:(t=0,z=0,ans=0,ans=(t=1/(1+.5*(z=Math.abs(x))))*Math.exp(-z*z-1.26551223+t*(1.00002368+t*(.37409196+t*(.09678418+t*(t*(.27886807+t*(t*(1.48851587+t*(.17087277*t-.82215223))-1.13520398))-.18628806))))),x>=0?ans:2-ans)},Eval=function(){var willEvaluateAsFloats;switch(check_esc_flag(),save(),p1=pop(),!evaluatingAsFloats&&isfloating(p1)&&(willEvaluateAsFloats=!0,evaluatingAsFloats++),p1.k){case CONS:Eval_cons();break;case NUM:evaluatingAsFloats?push_double(convert_rational_to_double(p1)):push(p1);break;case DOUBLE:case STR:push(p1);break;case TENSOR:Eval_tensor();break;case SYM:Eval_sym();break;default:stop("atom?")}return willEvaluateAsFloats&&evaluatingAsFloats--,restore()},Eval_sym=function(){var cycleString,i,o,positionIfSymbolAlreadyBeingEvaluated,ref,ref1;if(iskeyword(p1))return push(p1),push(symbol(LAST)),list(2),void Eval();if(p1===symbol(PI)&&evaluatingAsFloats)push_double(Math.PI);else if(p2=get_binding(p1),DEBUG&&console.log("looked up: "+p1+" which contains: "+p2),push(p2),p1!==p2){if(-1!==(positionIfSymbolAlreadyBeingEvaluated=chainOfUserSymbolsNotFunctionsBeingEvaluated.indexOf(p1))){for(cycleString="",i=o=ref=positionIfSymbolAlreadyBeingEvaluated,ref1=chainOfUserSymbolsNotFunctionsBeingEvaluated.length;ref<=ref1?o<ref1:o>ref1;i=ref<=ref1?++o:--o)cycleString+=chainOfUserSymbolsNotFunctionsBeingEvaluated[i].printname+" -> ";return cycleString+=p1.printname,void stop("recursive evaluation of symbols: "+cycleString)}return chainOfUserSymbolsNotFunctionsBeingEvaluated.push(p1),Eval(),chainOfUserSymbolsNotFunctionsBeingEvaluated.pop()}},Eval_cons=function(){var cons_head;if(cons_head=car(p1),car(cons_head)!==symbol(EVAL))switch(issymbol(cons_head)||stop("cons?"),symnum(cons_head)){case ABS:return Eval_abs();case ADD:return Eval_add();case ADJ:return Eval_adj();case AND:return Eval_and();case ARCCOS:return Eval_arccos();case ARCCOSH:return Eval_arccosh();case ARCSIN:return Eval_arcsin();case ARCSINH:return Eval_arcsinh();case ARCTAN:return Eval_arctan();case ARCTANH:return Eval_arctanh();case ARG:return Eval_arg();case ATOMIZE:return Eval_atomize();case BESSELJ:return Eval_besselj();case BESSELY:return Eval_bessely();case BINDING:return Eval_binding();case BINOMIAL:return Eval_binomial();case CEILING:return Eval_ceiling();case CHECK:return Eval_check();case CHOOSE:return Eval_choose();case CIRCEXP:return Eval_circexp();case CLEAR:return Eval_clear();case CLEARALL:return Eval_clearall();case CLEARPATTERNS:return Eval_clearpatterns();case CLOCK:return Eval_clock();case COEFF:return Eval_coeff();case COFACTOR:return Eval_cofactor();case CONDENSE:return Eval_condense();case CONJ:return Eval_conj();case CONTRACT:return Eval_contract();case COS:return Eval_cos();case COSH:return Eval_cosh();case DECOMP:return Eval_decomp();case DEGREE:return Eval_degree();case DEFINT:return Eval_defint();case DENOMINATOR:return Eval_denominator();case DERIVATIVE:return Eval_derivative();case DET:return Eval_det();case DIM:return Eval_dim();case DIRAC:return Eval_dirac();case DIVISORS:return Eval_divisors();case DO:return Eval_do();case DOT:return Eval_inner();case DRAW:return Eval_draw();case DSOLVE:return Eval_dsolve();case EIGEN:return Eval_eigen();case EIGENVAL:return Eval_eigenval();case EIGENVEC:return Eval_eigenvec();case ERF:return Eval_erf();case ERFC:return Eval_erfc();case EVAL:return Eval_Eval();case EXP:return Eval_exp();case EXPAND:return Eval_expand();case EXPCOS:return Eval_expcos();case EXPSIN:return Eval_expsin();case FACTOR:return Eval_factor();case FACTORIAL:return Eval_factorial();case FACTORPOLY:return Eval_factorpoly();case FILTER:return Eval_filter();case FLOATF:return Eval_float();case APPROXRATIO:return Eval_approxratio();case FLOOR:return Eval_floor();case FOR:return Eval_for();case FUNCTION:return Eval_function_reference();case GAMMA:return Eval_gamma();case GCD:return Eval_gcd();case HERMITE:return Eval_hermite();case HILBERT:return Eval_hilbert();case IMAG:return Eval_imag();case INDEX:return Eval_index();case INNER:return Eval_inner();case INTEGRAL:return Eval_integral();case INV:return Eval_inv();case INVG:return Eval_invg();case ISINTEGER:return Eval_isinteger();case ISPRIME:return Eval_isprime();case LAGUERRE:return Eval_laguerre();case LCM:return Eval_lcm();case LEADING:return Eval_leading();case LEGENDRE:return Eval_legendre();case LOG:return Eval_log();case LOOKUP:return Eval_lookup();case MOD:return Eval_mod();case MULTIPLY:return Eval_multiply();case NOT:return Eval_not();case NROOTS:return Eval_nroots();case NUMBER:return Eval_number();case NUMERATOR:return Eval_numerator();case OPERATOR:return Eval_operator();case OR:return Eval_or();case OUTER:return Eval_outer();case PATTERN:return Eval_pattern();case PATTERNSINFO:return Eval_patternsinfo();case POLAR:return Eval_polar();case POWER:return Eval_power();case PRIME:return Eval_prime();case PRINT:return Eval_print();case PRINT2DASCII:return Eval_print2dascii();case PRINTFULL:return Eval_printcomputer();case PRINTLATEX:return Eval_printlatex();case PRINTLIST:return Eval_printlist();case PRINTPLAIN:return Eval_printhuman();case PRODUCT:return Eval_product();case QUOTE:return Eval_quote();case QUOTIENT:return Eval_quotient();case RANK:return Eval_rank();case RATIONALIZE:return Eval_rationalize();case REAL:return Eval_real();case ROUND:return Eval_round();case YYRECT:return Eval_rect();case ROOTS:return Eval_roots();case SETQ:return Eval_setq();case SGN:return Eval_sgn();case SILENTPATTERN:return Eval_silentpattern();case SIMPLIFY:return Eval_simplify();case SIN:return Eval_sin();case SINH:return Eval_sinh();case SHAPE:return Eval_shape();case SQRT:return Eval_sqrt();case STOP:return Eval_stop();case SUBST:return Eval_subst();case SUM:return Eval_sum();case SYMBOLSINFO:return Eval_symbolsinfo();case TAN:return Eval_tan();case TANH:return Eval_tanh();case TAYLOR:return Eval_taylor();case TEST:return Eval_test();case TESTEQ:return Eval_testeq();case TESTGE:return Eval_testge();case TESTGT:return Eval_testgt();case TESTLE:return Eval_testle();case TESTLT:return Eval_testlt();case TRANSPOSE:return Eval_transpose();case UNIT:return Eval_unit();case ZERO:return Eval_zero();default:return Eval_user_function()}else Eval_user_function()},Eval_binding=function(){return push(get_binding(cadr(p1)))},Eval_check=function(){var checkResult;return null==(checkResult=isZeroLikeOrNonZeroLikeOrUndetermined(cadr(p1)))?push(p1):push_integer(checkResult)},Eval_det=function(){return push(cadr(p1)),Eval(),det()},Eval_dim=function(){var n;return push(cadr(p1)),Eval(),p2=pop(),iscons(cddr(p1))?(push(caddr(p1)),Eval(),n=pop_integer()):n=1,istensor(p2)?n<1||n>p2.tensor.ndim?push(p1):push_integer(p2.tensor.dim[n-1]):push_integer(1)},Eval_divisors=function(){return push(cadr(p1)),Eval(),divisors()},Eval_do=function(){var results;for(push(car(p1)),p1=cdr(p1),results=[];iscons(p1);)pop(),push(car(p1)),Eval(),results.push(p1=cdr(p1));return results},Eval_dsolve=function(){return push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),push(cadddr(p1)),Eval(),dsolve()},Eval_Eval=function(){for(push(cadr(p1)),Eval(),p1=cddr(p1);iscons(p1);)push(car(p1)),Eval(),push(cadr(p1)),Eval(),subst(),p1=cddr(p1);return Eval()},Eval_exp=function(){return push(cadr(p1)),Eval(),exponential()},Eval_factorial=function(){return push(cadr(p1)),Eval(),factorial()},Eval_factorpoly=function(){var results;for(p1=cdr(p1),push(car(p1)),Eval(),p1=cdr(p1),push(car(p1)),Eval(),factorpoly(),p1=cdr(p1),results=[];iscons(p1);)push(car(p1)),Eval(),factorpoly(),results.push(p1=cdr(p1));return results},Eval_hermite=function(){return push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),hermite()},Eval_hilbert=function(){return push(cadr(p1)),Eval(),hilbert()},Eval_index=function(){var h,orig,theTensor;if(h=tos,orig=p1,p1=cdr(p1),push(car(p1)),Eval(),theTensor=stack[tos-1],isNumericAtom(theTensor)&&stop("trying to access a scalar as a tensor"),!istensor(theTensor))return moveTos(h),void push(orig);for(p1=cdr(p1);iscons(p1);){if(push(car(p1)),Eval(),!isintegerorintegerfloat(stack[tos-1]))return moveTos(h),void push(orig);p1=cdr(p1)}return index_function(tos-h)},Eval_inv=function(){return push(cadr(p1)),Eval(),inv()},Eval_invg=function(){return push(cadr(p1)),Eval(),invg()},Eval_isinteger=function(){var n;if(push(cadr(p1)),Eval(),p1=pop(),isrational(p1))isinteger(p1)?push(one):push(zero);else{if(!isdouble(p1))return push_symbol(ISINTEGER),push(p1),list(2);(n=Math.floor(p1.d))===p1.d?push(one):push(zero)}},Eval_number=function(){return push(cadr(p1)),Eval(),(p1=pop()).k===NUM||p1.k===DOUBLE?push_integer(1):push_integer(0)},Eval_operator=function(){var h;for(h=tos,push_symbol(OPERATOR),p1=cdr(p1);iscons(p1);)push(car(p1)),Eval(),p1=cdr(p1);return list(tos-h)},Eval_quote=function(){return push(cadr(p1))},Eval_rank=function(){return push(cadr(p1)),Eval(),p1=pop(),istensor(p1)?push_integer(p1.tensor.ndim):push(zero)},Eval_setq=function(){if(caadr(p1)!==symbol(INDEX)){if(!iscons(cadr(p1)))return issymbol(cadr(p1))||stop("symbol assignment: error in symbol"),push(caddr(p1)),Eval(),p2=pop(),set_binding(cadr(p1),p2),push(symbol(NIL));define_user_function()}else setq_indexed()},setq_indexed=function(){var h;for(p4=cadadr(p1),console.log("p4: "+p4),issymbol(p4)||stop("indexed assignment: expected a symbol name"),h=tos,push(caddr(p1)),Eval(),p2=cdadr(p1);iscons(p2);)push(car(p2)),Eval(),p2=cdr(p2);return set_component(tos-h),p3=pop(),set_binding(p4,p3),push(symbol(NIL))},Eval_sqrt=function(){return push(cadr(p1)),Eval(),push_rational(1,2),power()},Eval_stop=function(){return stop("user stop")},Eval_subst=function(){return push(cadddr(p1)),Eval(),push(caddr(p1)),Eval(),push(cadr(p1)),Eval(),subst(),Eval()},Eval_unit=function(){var i,n,o,ref;if(i=0,n=0,push(cadr(p1)),Eval(),n=pop_integer(),isNaN(n))push(p1);else{if(!(n<1)){for((p1=alloc_tensor(n*n)).tensor.ndim=2,p1.tensor.dim[0]=n,p1.tensor.dim[1]=n,i=o=0,ref=n;0<=ref?o<ref:o>ref;i=0<=ref?++o:--o)p1.tensor.elem[n*i+i]=one;return check_tensor_dimensions(p1),push(p1)}push(p1)}},Eval_noexpand=function(){var prev_expanding;return prev_expanding=expanding,expanding=0,Eval(),expanding=prev_expanding},Eval_predicate=function(){return save(),p1=top(),car(p1)===symbol(SETQ)&&(pop(),push_symbol(TESTEQ),push(cadr(p1)),push(caddr(p1)),list(3)),Eval(),restore()},Eval_expand=function(){return push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),(p2=pop())===symbol(NIL)?guess():push(p2),expand()},expand=function(){var prev_expanding;if(save(),p9=pop(),p5=pop(),istensor(p5))return expand_tensor(),void restore();if(car(p5)!==symbol(ADD))return push(p5),numerator(),p3=pop(),push(p5),denominator(),p2=pop(),remove_negative_exponents(),push(p3),push(p2),push(p9),!isone(p3)&&!isone(p2)||ispolyexpandedform(p2,p9)&&!isone(p2)?(divpoly(),p7=pop(),push(p3),push(p2),push(p7),multiply(),subtract(),p3=pop(),isZeroAtomOrTensor(p3)?(push(p7),void restore()):(push(p2),push(p9),factorpoly(),p2=pop(),expand_get_C(),expand_get_B(),expand_get_A(),istensor(p4)?(push(p4),prev_expanding=expanding,expanding=1,inv(),expanding=prev_expanding,push(p3),inner(),push(p2),inner()):(push(p3),push(p4),prev_expanding=expanding,expanding=1,divide(),expanding=prev_expanding,push(p2),multiply()),push(p7),add(),restore())):(pop(),pop(),pop(),push(p5),void restore());for(push_integer(0),p1=cdr(p5);iscons(p1);)push(car(p1)),push(p9),expand(),add(),p1=cdr(p1);restore()},expand_tensor=function(){var i,o,ref;for(i=0,push(p5),copy_tensor(),i=o=0,ref=(p5=pop()).tensor.nelem;0<=ref?o<ref:o>ref;i=0<=ref?++o:--o)push(p5.tensor.elem[i]),push(p9),expand(),p5.tensor.elem[i]=pop();return push(p5)},remove_negative_exponents=function(){var h,i,j,k,n,o,ref;for(h=0,i=0,j=0,k=0,n=0,h=tos,factors(p2),factors(p3),j=0,i=o=0,ref=n=tos-h;0<=ref?o<ref:o>ref;i=0<=ref?++o:--o)p1=stack[h+i],car(p1)===symbol(POWER)&&cadr(p1)===p9&&(push(caddr(p1)),k=pop_integer(),isNaN(k)||k<j&&(j=k));if(moveTos(h),0!==j)return push(p2),push(p9),push_integer(-j),power(),multiply(),p2=pop(),push(p3),push(p9),push_integer(-j),power(),multiply(),p3=pop()},expand_get_C=function(){var a,h,i,i1,j,n,o,prev_expanding,ref,ref1;if(h=0,i=0,j=0,n=0,h=tos,car(p2)===symbol(MULTIPLY))for(p1=cdr(p2);iscons(p1);)p5=car(p1),expand_get_CF(),p1=cdr(p1);else p5=p2,expand_get_CF();if(1!==(n=tos-h)){for((p4=alloc_tensor(n*n)).tensor.ndim=2,p4.tensor.dim[0]=n,p4.tensor.dim[1]=n,a=h,i=o=0,ref=n;0<=ref?o<ref:o>ref;i=0<=ref?++o:--o)for(j=i1=0,ref1=n;0<=ref1?i1<ref1:i1>ref1;j=0<=ref1?++i1:--i1)push(stack[a+j]),push(p9),push_integer(i),power(),prev_expanding=expanding,expanding=1,divide(),expanding=prev_expanding,push(p9),filter(),p4.tensor.elem[n*i+j]=pop();return moveTos(tos-n)}p4=pop()},expand_get_CF=function(){var d,i,j,n,o,prev_expanding,ref,results;if(d=0,i=0,j=0,n=0,Find(p5,p9)){for(prev_expanding=expanding,expanding=1,trivial_divide(),expanding=prev_expanding,car(p5)===symbol(POWER)?(push(caddr(p5)),n=pop_integer(),p6=cadr(p5)):(n=1,p6=p5),push(p6),push(p9),degree(),d=pop_integer(),results=[],i=o=0,ref=n;0<=ref?o<ref:o>ref;i=0<=ref?++o:--o)results.push(function(){var i1,ref1,results1;for(results1=[],j=i1=0,ref1=d;0<=ref1?i1<ref1:i1>ref1;j=0<=ref1?++i1:--i1)push(p8),push(p6),push_integer(i),power(),prev_expanding=expanding,expanding=1,multiply(),expanding=prev_expanding,push(p9),push_integer(j),power(),prev_expanding=expanding,expanding=1,multiply(),results1.push(expanding=prev_expanding);return results1}());return results}},trivial_divide=function(){var h;if(h=0,car(p2)===symbol(MULTIPLY)){for(h=tos,p0=cdr(p2);iscons(p0);)equal(car(p0),p5)||(push(car(p0)),Eval()),p0=cdr(p0);multiply_all(tos-h)}else push_integer(1);return p8=pop()},expand_get_B=function(){var i,n,o,prev_expanding,ref;if(i=0,n=0,istensor(p4)){for(n=p4.tensor.dim[0],(p8=alloc_tensor(n)).tensor.ndim=1,p8.tensor.dim[0]=n,i=o=0,ref=n;0<=ref?o<ref:o>ref;i=0<=ref?++o:--o)push(p3),push(p9),push_integer(i),power(),prev_expanding=expanding,expanding=1,divide(),expanding=prev_expanding,push(p9),filter(),p8.tensor.elem[i]=pop();return p3=p8}},expand_get_A=function(){var h,i,n,o,ref;if(h=0,i=0,n=0,!istensor(p4))return push(p2),reciprocate(),void(p2=pop());if(h=tos,car(p2)===symbol(MULTIPLY))for(p8=cdr(p2);iscons(p8);)p5=car(p8),expand_get_AF(),p8=cdr(p8);else p5=p2,expand_get_AF();for((p8=alloc_tensor(n=tos-h)).tensor.ndim=1,p8.tensor.dim[0]=n,i=o=0,ref=n;0<=ref?o<ref:o>ref;i=0<=ref?++o:--o)p8.tensor.elem[i]=stack[h+i];return moveTos(h),p2=p8},expand_get_AF=function(){var d,i,j,n,o,ref,results;if(d=0,i=0,j=0,n=1,Find(p5,p9)){for(car(p5)===symbol(POWER)&&(push(caddr(p5)),n=pop_integer(),p5=cadr(p5)),push(p5),push(p9),degree(),d=pop_integer(),results=[],i=o=ref=n;ref<=0?o<0:o>0;i=ref<=0?++o:--o)results.push(function(){var i1,ref1,results1;for(results1=[],j=i1=0,ref1=d;0<=ref1?i1<ref1:i1>ref1;j=0<=ref1?++i1:--i1)push(p5),push_integer(i),power(),reciprocate(),push(p9),push_integer(j),power(),results1.push(multiply());return results1}());return results}},Eval_expcos=function(){return push(cadr(p1)),Eval(),expcos()},expcos=function(){return save(),p1=pop(),push(imaginaryunit),push(p1),multiply(),exponential(),push_rational(1,2),multiply(),push(imaginaryunit),negate(),push(p1),multiply(),exponential(),push_rational(1,2),multiply(),add(),restore()},Eval_expsin=function(){return push(cadr(p1)),Eval(),expsin()},expsin=function(){return save(),p1=pop(),push(imaginaryunit),push(p1),multiply(),exponential(),push(imaginaryunit),divide(),push_rational(1,2),multiply(),push(imaginaryunit),negate(),push(p1),multiply(),exponential(),push(imaginaryunit),divide(),push_rational(1,2),multiply(),subtract(),restore()},Eval_factor=function(){var results;for(push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),(p2=pop())===symbol(NIL)?guess():push(p2),factor(),p1=cdddr(p1),results=[];iscons(p1);)push(car(p1)),Eval(),factor_again(),results.push(p1=cdr(p1));return results},factor_again=function(){var h,n;if(save(),p2=pop(),p1=pop(),h=tos,car(p1)===symbol(MULTIPLY))for(p1=cdr(p1);iscons(p1);)push(car(p1)),push(p2),factor_term(),p1=cdr(p1);else push(p1),push(p2),factor_term();return(n=tos-h)>1&&multiply_all_noexpand(n),restore()},factor_term=function(){if(save(),factorpoly(),p1=pop(),car(p1)===symbol(MULTIPLY))for(p1=cdr(p1);iscons(p1);)push(car(p1)),p1=cdr(p1);else push(p1);return restore()},factor=function(){return save(),p2=pop(),p1=pop(),isinteger(p1)?(push(p1),factor_number()):(push(p1),push(p2),factorpoly()),restore()},factor_small_number=function(){var d,expo,i,n,o,ref;for(i=0,save(),n=pop_integer(),isNaN(n)&&stop("number too big to factor"),n<0&&(n=-n),i=o=0,ref=MAXPRIMETAB;(0<=ref?o<ref:o>ref)&&!((d=primetab[i])>n/d);i=0<=ref?++o:--o){for(expo=0;n%d==0;)n/=d,expo++;expo&&(push_integer(d),push_integer(expo))}return n>1&&(push_integer(n),push_integer(1)),restore()},factorial=function(){var n;return n=0,save(),p1=pop(),push(p1),(n=pop_integer())<0||isNaN(n)?(push_symbol(FACTORIAL),push(p1),list(2),void restore()):(bignum_factorial(n),restore())},simplifyfactorials=function(){var x;if(x=0,save(),x=expanding,expanding=0,p1=pop(),car(p1)===symbol(ADD)){for(push(zero),p1=cdr(p1);iscons(p1);)push(car(p1)),simplifyfactorials(),add(),p1=cdr(p1);return expanding=x,void restore()}return car(p1)===symbol(MULTIPLY)?(sfac_product(),expanding=x,void restore()):(push(p1),expanding=x,restore())},sfac_product=function(){var i,i1,j,j1,n,o,ref,ref1,ref2,ref3,s;for(i=0,j=0,n=0,s=tos,p1=cdr(p1),n=0;iscons(p1);)push(car(p1)),p1=cdr(p1),n++;for(i=o=0,ref=n-1;0<=ref?o<ref:o>ref;i=0<=ref?++o:--o)if(stack[s+i]!==symbol(NIL))for(j=i1=ref1=i+1,ref2=n;ref1<=ref2?i1<ref2:i1>ref2;j=ref1<=ref2?++i1:--i1)stack[s+j]!==symbol(NIL)&&sfac_product_f(s,i,j);for(push(one),i=j1=0,ref3=n;0<=ref3?j1<ref3:j1>ref3;i=0<=ref3?++j1:--j1)stack[s+i]!==symbol(NIL)&&(push(stack[s+i]),multiply());return p1=pop(),moveTos(tos-n),push(p1)},sfac_product_f=function(s,a,b){var i,n,o,ref;if(i=0,n=0,p1=stack[s+a],p2=stack[s+b],ispower(p1)?(p3=caddr(p1),p1=cadr(p1)):p3=one,ispower(p2)?(p4=caddr(p2),p2=cadr(p2)):p4=one,isfactorial(p1)&&isfactorial(p2)){if(push(p3),push(p4),add(),yyexpand(),0!==(n=pop_integer()))return;if(push(cadr(p1)),push(cadr(p2)),subtract(),yyexpand(),0===(n=pop_integer())||isNaN(n))return;for(n<0&&(n=-n,p5=p1,p1=p2,p2=p5,p5=p3,p3=p4,p4=p5),push(one),i=o=1,ref=n;1<=ref?o<=ref:o>=ref;i=1<=ref?++o:--o)push(cadr(p2)),push_integer(i),add(),push(p3),power(),multiply();return stack[s+a]=pop(),stack[s+b]=symbol(NIL)}},polycoeff=0,factpoly_expo=0,factorpoly=function(){return save(),p2=pop(),p1=pop(),Find(p1,p2)&&ispolyexpandedform(p1,p2)&&issymbol(p2)?(push(p1),push(p2),yyfactorpoly(),restore()):(push(p1),void restore())},yyfactorpoly=function(){var checkingTheDivision,dividend,foundComplexRoot,foundRealRoot,h,i,i1,j1,l1,o,prev_expanding,previousFactorisation,ref,ref1,ref2,ref3,remainingPoly,whichRootsAreWeFinding;for(h=0,i=0,save(),p2=pop(),p1=pop(),h=tos,isfloating(p1)&&stop("floating point numbers in polynomial"),polycoeff=tos,push(p1),push(p2),factpoly_expo=coeff()-1,rationalize_coefficients(h),whichRootsAreWeFinding="real",remainingPoly=null;factpoly_expo>0;)if(isZeroAtomOrTensor(stack[polycoeff+0])?(push_integer(1),p4=pop(),push_integer(0),p5=pop()):"real"===whichRootsAreWeFinding?foundRealRoot=get_factor_from_real_root():"complex"===whichRootsAreWeFinding&&(foundComplexRoot=get_factor_from_complex_root(remainingPoly)),"real"===whichRootsAreWeFinding){if(0===foundRealRoot){whichRootsAreWeFinding="complex";continue}for(push(p4),push(p2),multiply(),push(p5),add(),p8=pop(),DEBUG&&console.log("success\nFACTOR="+p8),push(p7),push(p8),multiply_noexpand(),p7=pop(),yydivpoly();factpoly_expo&&isZeroAtomOrTensor(stack[polycoeff+factpoly_expo]);)factpoly_expo--;for(push(zero),i=o=0,ref=factpoly_expo;0<=ref?o<=ref:o>=ref;i=0<=ref?++o:--o)push(stack[polycoeff+i]),push(p2),push_integer(i),power(),multiply(),add();remainingPoly=pop()}else if("complex"===whichRootsAreWeFinding){if(0===foundComplexRoot)break;if(push(p4),push(p2),subtract(),push(p4),conjugate(),push(p2),subtract(),multiply(),p8=pop(),DEBUG&&console.log("success\nFACTOR="+p8),push(p7),previousFactorisation=pop(),push(p7),push(p8),multiply_noexpand(),p7=pop(),null==remainingPoly){for(push(zero),i=i1=0,ref1=factpoly_expo;0<=ref1?i1<=ref1:i1>=ref1;i=0<=ref1?++i1:--i1)push(stack[polycoeff+i]),push(p2),push_integer(i),power(),multiply(),add();remainingPoly=pop()}if(push(dividend=remainingPoly),push(p8),push(p2),divpoly(),remainingPoly=pop(),push(remainingPoly),push(p8),multiply(),checkingTheDivision=pop(),!equal(checkingTheDivision,dividend))return DEBUG&&console.log("we found a polynomial based on complex root and its conj but it doesn't divide the poly, quitting"),DEBUG&&console.log("so just returning previousFactorisation times dividend: "+previousFactorisation+" * "+dividend),push(previousFactorisation),push(dividend),prev_expanding=expanding,expanding=0,yycondense(),expanding=prev_expanding,multiply_noexpand(),p7=pop(),stack[h]=p7,moveTos(h+1),void restore();for(i=j1=0,ref2=factpoly_expo;0<=ref2?j1<=ref2:j1>=ref2;i=0<=ref2?++j1:--j1)pop();push(remainingPoly),push(p2),coeff(),factpoly_expo-=2}for(push(zero),i=l1=0,ref3=factpoly_expo;0<=ref3?l1<=ref3:l1>=ref3;i=0<=ref3?++l1:--l1)push(stack[polycoeff+i]),push(p2),push_integer(i),power(),multiply(),add();return p1=pop(),DEBUG&&console.log("POLY="+p1),push(p1),prev_expanding=expanding,expanding=0,yycondense(),expanding=prev_expanding,p1=pop(),factpoly_expo>0&&isnegativeterm(stack[polycoeff+factpoly_expo])&&(push(p1),negate(),p1=pop(),push(p7),negate_noexpand(),p7=pop()),push(p7),push(p1),multiply_noexpand(),p7=pop(),DEBUG&&console.log("RESULT="+p7),stack[h]=p7,moveTos(h+1),restore()},rationalize_coefficients=function(h){var i,i1,o,ref,ref1,ref2,ref3;for(i=0,p7=one,i=o=ref=h,ref1=tos;ref<=ref1?o<ref1:o>ref1;i=ref<=ref1?++o:--o)push(stack[i]),denominator(),push(p7),lcm(),p7=pop();for(i=i1=ref2=h,ref3=tos;ref2<=ref3?i1<ref3:i1>ref3;i=ref2<=ref3?++i1:--i1)push(p7),push(stack[i]),multiply(),stack[i]=pop();if(push(p7),reciprocate(),p7=pop(),DEBUG)return console.log("rationalize_coefficients result")},get_factor_from_real_root=function(){var a0,an,h,i,i1,j,j1,l1,m1,na0,nan,o,ref,ref1,ref2,ref3,ref4,rootsTries_i,rootsTries_j;if(i=0,j=0,h=0,a0=0,an=0,na0=0,nan=0,DEBUG){for(push(zero),i=o=0,ref=factpoly_expo;0<=ref?o<=ref:o>=ref;i=0<=ref?++o:--o)push(stack[polycoeff+i]),push(p2),push_integer(i),power(),multiply(),add();p1=pop(),console.log("POLY="+p1)}if(h=tos,an=tos,push(stack[polycoeff+factpoly_expo]),divisors_onstack(),nan=tos-an,a0=tos,push(stack[polycoeff+0]),divisors_onstack(),na0=tos-a0,DEBUG){for(console.log("divisors of base term"),i=i1=0,ref1=na0;0<=ref1?i1<ref1:i1>ref1;i=0<=ref1?++i1:--i1)console.log(", "+stack[a0+i]);for(console.log("divisors of leading term"),i=j1=0,ref2=nan;0<=ref2?j1<ref2:j1>ref2;i=0<=ref2?++j1:--j1)console.log(", "+stack[an+i])}for(rootsTries_i=l1=0,ref3=nan;0<=ref3?l1<ref3:l1>ref3;rootsTries_i=0<=ref3?++l1:--l1)for(rootsTries_j=m1=0,ref4=na0;0<=ref4?m1<ref4:m1>ref4;rootsTries_j=0<=ref4?++m1:--m1){if(p4=stack[an+rootsTries_i],p5=stack[a0+rootsTries_j],push(p5),push(p4),divide(),negate(),p3=pop(),Evalpoly(),DEBUG&&(console.log("try A="+p4),console.log(", B="+p5),console.log(", root "+p2),console.log("=-B/A="+p3),console.log(", POLY("+p3),console.log(")="+p6)),isZeroAtomOrTensor(p6))return moveTos(h),DEBUG&&console.log("get_factor_from_real_root returning 1"),1;if(push(p5),negate(),p5=pop(),push(p3),negate(),p3=pop(),Evalpoly(),DEBUG&&(console.log("try A="+p4),console.log(", B="+p5),console.log(", root "+p2),console.log("=-B/A="+p3),console.log(", POLY("+p3),console.log(")="+p6)),isZeroAtomOrTensor(p6))return moveTos(h),DEBUG&&console.log("get_factor_from_real_root returning 1"),1}return moveTos(h),DEBUG&&console.log("get_factor_from_real_root returning 0"),0},get_factor_from_complex_root=function(remainingPoly){var a0,an,h,i,i1,j,na0,nan,o,rootsTries_i,rootsTries_j;if(i=0,j=0,h=0,a0=0,an=0,na0=0,nan=0,factpoly_expo<=2)return DEBUG&&console.log("no more factoring via complex roots to be found in polynomial of degree <= 2"),0;if(p1=remainingPoly,DEBUG&&console.log("complex root finding for POLY="+p1),h=tos,an=tos,push_integer(-1),push_rational(2,3),power(),rect(),p4=pop(),DEBUG&&console.log("complex root finding: trying with "+p4),push(p4),p3=pop(),push(p3),Evalpoly(),DEBUG&&console.log("complex root finding result: "+p6),isZeroAtomOrTensor(p6))return moveTos(h),DEBUG&&console.log("get_factor_from_complex_root returning 1"),1;if(push_integer(1),push_rational(2,3),power(),rect(),p4=pop(),DEBUG&&console.log("complex root finding: trying with "+p4),push(p4),p3=pop(),push(p3),Evalpoly(),DEBUG&&console.log("complex root finding result: "+p6),isZeroAtomOrTensor(p6))return moveTos(h),DEBUG&&console.log("get_factor_from_complex_root returning 1"),1;for(rootsTries_i=o=-10;o<=10;rootsTries_i=++o)for(rootsTries_j=i1=1;i1<=5;rootsTries_j=++i1)if(push_integer(rootsTries_i),push_integer(rootsTries_j),push(imaginaryunit),multiply(),add(),rect(),p4=pop(),push(p4),p3=pop(),push(p3),Evalpoly(),isZeroAtomOrTensor(p6))return moveTos(h),DEBUG&&console.log("found complex root: "+p6),1;return moveTos(h),DEBUG&&console.log("get_factor_from_complex_root returning 0"),0},yydivpoly=function(){var i,o,ref;for(i=0,p6=zero,i=o=ref=factpoly_expo;ref<=0?o<0:o>0;i=ref<=0?++o:--o)push(stack[polycoeff+i]),stack[polycoeff+i]=p6,push(p4),divide(),p6=pop(),push(stack[polycoeff+i-1]),push(p6),push(p5),multiply(),subtract(),stack[polycoeff+i-1]=pop();if(stack[polycoeff+0]=p6,DEBUG)return console.log("yydivpoly Q:")},Evalpoly=function(){var i,o,ref;for(i=0,push(zero),i=o=ref=factpoly_expo;ref<=0?o<=0:o>=0;i=ref<=0?++o:--o)push(p3),multiply(),push(stack[polycoeff+i]),DEBUG&&(console.log("Evalpoly top of stack:"),console.log(print_list(stack[tos-i]))),add();return p6=pop()},factors=function(p){var h;if(h=tos,car(p)===symbol(ADD))for(p=cdr(p);iscons(p);)push_term_factors(car(p)),p=cdr(p);else push_term_factors(p);return tos-h},push_term_factors=function(p){var results;if(car(p)===symbol(MULTIPLY)){for(p=cdr(p),results=[];iscons(p);)push(car(p)),results.push(p=cdr(p));return results}return push(p)},Eval_filter=function(){var results;for(p1=cdr(p1),push(car(p1)),Eval(),p1=cdr(p1),results=[];iscons(p1);)push(car(p1)),Eval(),filter(),results.push(p1=cdr(p1));return results},filter=function(){return save(),p2=pop(),p1=pop(),filter_main(),restore()},filter_main=function(){return car(p1)===symbol(ADD)?filter_sum():istensor(p1)?filter_tensor():Find(p1,p2)?push_integer(0):push(p1)},filter_sum=function(){var results;for(push_integer(0),p1=cdr(p1),results=[];iscons(p1);)push(car(p1)),push(p2),filter(),add(),results.push(p1=cdr(p1));return results},filter_tensor=function(){var i,i1,n,o,ref,ref1;for(i=0,n=0,n=p1.tensor.nelem,(p3=alloc_tensor(n)).tensor.ndim=p1.tensor.ndim,i=o=0,ref=p1.tensor.ndim;0<=ref?o<ref:o>ref;i=0<=ref?++o:--o)p3.tensor.dim[i]=p1.tensor.dim[i];for(i=i1=0,ref1=n;0<=ref1?i1<ref1:i1>ref1;i=0<=ref1?++i1:--i1)push(p1.tensor.elem[i]),push(p2),filter(),p3.tensor.elem[i]=pop();return push(p3)},Eval_float=function(){return evaluatingAsFloats++,push(cadr(p1)),Eval(),yyfloat(),Eval(),evaluatingAsFloats--},checkFloatHasWorkedOutCompletely=function(nodeToCheck){var numberOfEs,numberOfMults,numberOfPIs,numberOfPowers,numberOfSums;if(numberOfPowers=countOccurrencesOfSymbol(symbol(POWER),nodeToCheck),numberOfPIs=countOccurrencesOfSymbol(symbol(PI),nodeToCheck),numberOfEs=countOccurrencesOfSymbol(symbol(E),nodeToCheck),numberOfMults=countOccurrencesOfSymbol(symbol(MULTIPLY),nodeToCheck),numberOfSums=countOccurrencesOfSymbol(symbol(ADD),nodeToCheck),DEBUG&&(console.log("     ... numberOfPowers: "+numberOfPowers),console.log("     ... numberOfPIs: "+numberOfPIs),console.log("     ... numberOfEs: "+numberOfEs),console.log("     ... numberOfMults: "+numberOfMults),console.log("     ... numberOfSums: "+numberOfSums)),numberOfPowers>1||numberOfPIs>0||numberOfEs>0||numberOfMults>1||numberOfSums>1)return stop("float: some unevalued parts in "+nodeToCheck)},zzfloat=function(){return save(),evaluatingAsFloats++,Eval(),yyfloat(),Eval(),evaluatingAsFloats--,restore()},yyfloat=function(){var h,i,o,ref;if(i=0,h=0,evaluatingAsFloats++,save(),p1=pop(),iscons(p1)){for(h=tos;iscons(p1);)push(car(p1)),yyfloat(),p1=cdr(p1);list(tos-h)}else if(p1.k===TENSOR){for(push(p1),copy_tensor(),i=o=0,ref=(p1=pop()).tensor.nelem;0<=ref?o<ref:o>ref;i=0<=ref?++o:--o)push(p1.tensor.elem[i]),yyfloat(),p1.tensor.elem[i]=pop();push(p1)}else p1.k===NUM?(push(p1),bignum_float()):p1===symbol(PI)?push_double(Math.PI):p1===symbol(E)?push_double(Math.E):push(p1);return restore(),evaluatingAsFloats--},Eval_floor=function(){return push(cadr(p1)),Eval(),yfloor()},yfloor=function(){return save(),yyfloor(),restore()},yyfloor=function(){var d;return d=0,p1=pop(),isNumericAtom(p1)?isdouble(p1)?(d=Math.floor(p1.d),void push_double(d)):isinteger(p1)?void push(p1):((p3=new U).k=NUM,p3.q.a=mdiv(p1.q.a,p1.q.b),p3.q.b=mint(1),push(p3),isnegativenumber(p1)?(push_integer(-1),add()):void 0):(push_symbol(FLOOR),push(p1),void list(2))},Eval_for=function(){var i,j,k,loopingVariable,o,ref,ref1;if(i=0,j=0,k=0,loopingVariable=caddr(p1),issymbol(loopingVariable)||stop("for: 2nd arg should be the variable to loop over"),push(cadddr(p1)),Eval(),j=pop_integer(),isNaN(j))push(p1);else{if(push(caddddr(p1)),Eval(),k=pop_integer(),!isNaN(k)){for(p4=get_binding(loopingVariable),i=o=ref=j,ref1=k;ref<=ref1?o<=ref1:o>=ref1;i=ref<=ref1?++o:--o)push_integer(i),p5=pop(),set_binding(loopingVariable,p5),push(cadr(p1)),Eval(),pop();return set_binding(loopingVariable,p4),push_symbol(NIL)}push(p1)}},Eval_gamma=function(){return push(cadr(p1)),Eval(),gamma()},gamma=function(){return save(),gammaf(),restore()},gammaf=function(){return p1=pop(),isrational(p1)&&MEQUAL(p1.q.a,1)&&MEQUAL(p1.q.b,2)?(evaluatingAsFloats?push_double(Math.PI):push_symbol(PI),push_rational(1,2),void power()):isrational(p1)&&MEQUAL(p1.q.a,3)&&MEQUAL(p1.q.b,2)?(evaluatingAsFloats?push_double(Math.PI):push_symbol(PI),push_rational(1,2),power(),push_rational(1,2),void multiply()):isnegativeterm(p1)?(evaluatingAsFloats?push_double(Math.PI):push_symbol(PI),push_integer(-1),multiply(),evaluatingAsFloats?push_double(Math.PI):push_symbol(PI),push(p1),multiply(),sine(),push(p1),multiply(),push(p1),negate(),gamma(),multiply(),void divide()):void(car(p1)!==symbol(ADD)?(push_symbol(GAMMA),push(p1),list(2)):gamma_of_sum())},gamma_of_sum=function(){return p3=cdr(p1),isrational(car(p3))&&MEQUAL(car(p3).q.a,1)&&MEQUAL(car(p3).q.b,1)?(push(cadr(p3)),push(cadr(p3)),gamma(),multiply()):isrational(car(p3))&&MEQUAL(car(p3).q.a,-1)&&MEQUAL(car(p3).q.b,1)?(push(cadr(p3)),gamma(),push(cadr(p3)),push_integer(-1),add(),divide()):(push_symbol(GAMMA),push(p1),void list(2))},Eval_gcd=function(){var results;for(p1=cdr(p1),push(car(p1)),Eval(),p1=cdr(p1),results=[];iscons(p1);)push(car(p1)),Eval(),gcd(),results.push(p1=cdr(p1));return results},gcd=function(){var prev_expanding;return prev_expanding=expanding,save(),gcd_main(),restore(),expanding=prev_expanding},gcd_main=function(){var polyVar;if(expanding=1,p2=pop(),p1=pop(),equal(p1,p2))push(p1);else{if(isrational(p1)&&isrational(p2))return push(p1),push(p2),void gcd_numbers();if(polyVar=areunivarpolysfactoredorexpandedform(p1,p2))gcd_polys(polyVar);else if(car(p1)!==symbol(ADD)||car(p2)!==symbol(ADD))if(car(p1)===symbol(ADD)&&(gcd_sum(p1),p1=pop()),car(p2)===symbol(ADD)&&(gcd_sum(p2),p2=pop()),car(p1)!==symbol(MULTIPLY))if(car(p2)!==symbol(MULTIPLY)){if(car(p1)!==symbol(MULTIPLY)||car(p2)!==symbol(MULTIPLY))return gcd_powers_with_same_base();gcd_product_product()}else gcd_product_sum();else gcd_sum_product();else gcd_sum_sum()}},areunivarpolysfactoredorexpandedform=function(p1,p2){var polyVar;return!(!(polyVar=isunivarpolyfactoredorexpandedform(p1))||!isunivarpolyfactoredorexpandedform(p2,polyVar))&&polyVar},gcd_polys=function(polyVar){if(push(p1),push(polyVar),factorpoly(),p1=pop(),push(p2),push(polyVar),factorpoly(),p2=pop(),DEBUG&&console.log("factored polys:"),DEBUG&&console.log("p1:"+p1.toString()),DEBUG&&console.log("p2:"+p2.toString()),car(p1)!==symbol(MULTIPLY)&&car(p2)!==symbol(MULTIPLY)||(car(p1)!==symbol(MULTIPLY)&&(push_symbol(MULTIPLY),push(p1),push(one),list(3),p1=pop()),car(p2)!==symbol(MULTIPLY)&&(push_symbol(MULTIPLY),push(p2),push(one),list(3),p2=pop())),car(p1)!==symbol(MULTIPLY)||car(p2)!==symbol(MULTIPLY))return gcd_powers_with_same_base(),!0;gcd_product_product()},gcd_product_product=function(){var results;for(push(one),p3=cdr(p1),results=[];iscons(p3);){for(p4=cdr(p2);iscons(p4);)push(car(p3)),push(car(p4)),gcd(),multiply(),p4=cdr(p4);results.push(p3=cdr(p3))}return results},gcd_powers_with_same_base=function(){if(car(p1)===symbol(POWER)?(p3=caddr(p1),p1=cadr(p1)):p3=one,car(p2)===symbol(POWER)?(p4=caddr(p2),p2=cadr(p2)):p4=one,equal(p1,p2)){if(isNumericAtom(p3)&&isNumericAtom(p4))return push(p1),lessp(p3,p4)?push(p3):push(p4),void power();if(push(p3),push(p4),divide(),p5=pop(),isNumericAtom(p5))return push(p1),p5=car(p3)===symbol(MULTIPLY)&&isNumericAtom(cadr(p3))?cadr(p3):one,p6=car(p4)===symbol(MULTIPLY)&&isNumericAtom(cadr(p4))?cadr(p4):one,lessp(p5,p6)?push(p3):push(p4),void power();if(push(p3),push(p4),subtract(),p5=pop(),isNumericAtom(p5))return push(p1),isnegativenumber(p5)?push(p3):push(p4),power();push(one)}else push(one)},gcd_sum_sum=function(){if(length(p1)===length(p2)){for(p3=cdr(p1),push(car(p3)),p3=cdr(p3);iscons(p3);)push(car(p3)),gcd(),p3=cdr(p3);for(p3=pop(),p4=cdr(p2),push(car(p4)),p4=cdr(p4);iscons(p4);)push(car(p4)),gcd(),p4=cdr(p4);return p4=pop(),push(p1),push(p3),divide(),p5=pop(),push(p2),push(p4),divide(),p6=pop(),equal(p5,p6)?(push(p5),push(p3),push(p4),gcd(),multiply()):push(one)}push(one)},gcd_sum=function(p){var results;for(p=cdr(p),push(car(p)),p=cdr(p),results=[];iscons(p);)push(car(p)),gcd(),results.push(p=cdr(p));return results},gcd_sum_product=function(){var results;for(push(one),p3=cdr(p1),results=[];iscons(p3);)push(car(p3)),push(p2),gcd(),multiply(),results.push(p3=cdr(p3));return results},gcd_product_sum=function(){var results;for(push(one),p4=cdr(p2),results=[];iscons(p4);)push(p1),push(car(p4)),gcd(),multiply(),results.push(p4=cdr(p4));return results},guess=function(){var p;return p=pop(),push(p),Find(p,symbol(SYMBOL_X))?push_symbol(SYMBOL_X):Find(p,symbol(SYMBOL_Y))?push_symbol(SYMBOL_Y):Find(p,symbol(SYMBOL_Z))?push_symbol(SYMBOL_Z):Find(p,symbol(SYMBOL_T))?push_symbol(SYMBOL_T):Find(p,symbol(SYMBOL_S))?push_symbol(SYMBOL_S):push_symbol(SYMBOL_X)},hermite=function(){return save(),yyhermite(),restore()},yyhermite=function(){var n;return n=0,p2=pop(),p1=pop(),push(p2),(n=pop_integer())<0||isNaN(n)?(push_symbol(HERMITE),push(p1),push(p2),void list(3)):issymbol(p1)?yyhermite2(n):(p3=p1,p1=symbol(SECRETX),yyhermite2(n),p1=p3,push(symbol(SECRETX)),push(p1),subst(),Eval())},yyhermite2=function(n){var i,o,ref,results;for(i=0,push_integer(1),push_integer(0),p4=pop(),results=[],i=o=0,ref=n;0<=ref?o<ref:o>ref;i=0<=ref?++o:--o)p5=p4,p4=pop(),push(p1),push(p4),multiply(),push_integer(i),push(p5),multiply(),subtract(),push_integer(2),results.push(multiply());return results},hilbert=function(){var i,i1,j,n,o,ref,ref1;if(i=0,j=0,n=0,save(),p2=pop(),push(p2),(n=pop_integer())<2)return push_symbol(HILBERT),push(p2),list(2),void restore();for(push_zero_matrix(n,n),p1=pop(),i=o=0,ref=n;0<=ref?o<ref:o>ref;i=0<=ref?++o:--o)for(j=i1=0,ref1=n;0<=ref1?i1<ref1:i1>ref1;j=0<=ref1?++i1:--i1)push_integer(i+j+1),inverse(),p1.tensor.elem[i*n+j]=pop();return push(p1),restore()},DEBUG_IMAG=!1,Eval_imag=function(){return push(cadr(p1)),Eval(),imag()},imag=function(){return save(),rect(),p1=pop(),DEBUG_IMAG&&console.log("IMAGE of "+p1),push(p1),push(p1),conjugate(),DEBUG_IMAG&&console.log(" image: conjugate result: "+stack[tos-1]),subtract(),push_integer(2),divide(),DEBUG_IMAG&&console.log(" image: 1st divide result: "+stack[tos-1]),push(imaginaryunit),divide(),DEBUG_IMAG&&console.log(" image: 2nd divide result: "+stack[tos-1]),restore()},index_function=function(n){var i,i1,j1,k,l1,m,m1,ndim,nelem,o,ref,ref1,ref2,ref3,ref4,ref5,ref6,ref7,s,t;for(i=0,k=0,m=0,ndim=0,nelem=0,t=0,save(),(m=n-1)>(ndim=(p1=stack[s=tos-n]).tensor.ndim)&&stop("too many indices for tensor"),k=0,i=o=0,ref=m;0<=ref?o<ref:o>ref;i=0<=ref?++o:--o)push(stack[s+i+1]),((t=pop_integer())<1||t>p1.tensor.dim[i])&&stop("index out of range"),k=k*p1.tensor.dim[i]+t-1;if(ndim===m)return moveTos(tos-n),push(p1.tensor.elem[k]),void restore();for(i=i1=ref1=m,ref2=ndim;ref1<=ref2?i1<ref2:i1>ref2;i=ref1<=ref2?++i1:--i1)k=k*p1.tensor.dim[i]+0;for(nelem=1,i=j1=ref3=m,ref4=ndim;ref3<=ref4?j1<ref4:j1>ref4;i=ref3<=ref4?++j1:--j1)nelem*=p1.tensor.dim[i];for((p2=alloc_tensor(nelem)).tensor.ndim=ndim-m,i=l1=ref5=m,ref6=ndim;ref5<=ref6?l1<ref6:l1>ref6;i=ref5<=ref6?++l1:--l1)p2.tensor.dim[i-m]=p1.tensor.dim[i];for(i=m1=0,ref7=nelem;0<=ref7?m1<ref7:m1>ref7;i=0<=ref7?++m1:--m1)p2.tensor.elem[i]=p1.tensor.elem[k+i];return check_tensor_dimensions(p1),check_tensor_dimensions(p2),moveTos(tos-n),push(p2),restore()},set_component=function(n){var i,i1,j1,k,l1,m,m1,n1,ndim,o,ref,ref1,ref2,ref3,ref4,ref5,ref6,s,t;for(i=0,k=0,m=0,ndim=0,t=0,save(),n<3&&stop("error in indexed assign"),p2=stack[s=tos-n],p1=stack[s+1],istensor(p1)||stop("error in indexed assign: assigning to something that is not a tensor"),(m=n-2)>(ndim=p1.tensor.ndim)&&stop("error in indexed assign"),k=0,i=o=0,ref=m;0<=ref?o<ref:o>ref;i=0<=ref?++o:--o)push(stack[s+i+2]),((t=pop_integer())<1||t>p1.tensor.dim[i])&&stop("error in indexed assign\n"),k=k*p1.tensor.dim[i]+t-1;for(i=i1=ref1=m,ref2=ndim;ref1<=ref2?i1<ref2:i1>ref2;i=ref1<=ref2?++i1:--i1)k=k*p1.tensor.dim[i]+0;for((p3=alloc_tensor(p1.tensor.nelem)).tensor.ndim=p1.tensor.ndim,i=j1=0,ref3=p1.tensor.ndim;0<=ref3?j1<ref3:j1>ref3;i=0<=ref3?++j1:--j1)p3.tensor.dim[i]=p1.tensor.dim[i];for(i=l1=0,ref4=p1.tensor.nelem;0<=ref4?l1<ref4:l1>ref4;i=0<=ref4?++l1:--l1)p3.tensor.elem[i]=p1.tensor.elem[i];if(check_tensor_dimensions(p1),check_tensor_dimensions(p3),p1=p3,ndim===m)return istensor(p2)&&stop("error in indexed assign"),p1.tensor.elem[k]=p2,check_tensor_dimensions(p1),moveTos(tos-n),push(p1),void restore();for(istensor(p2)||stop("error in indexed assign"),ndim-m!==p2.tensor.ndim&&stop("error in indexed assign"),i=m1=0,ref5=p2.tensor.ndim;0<=ref5?m1<ref5:m1>ref5;i=0<=ref5?++m1:--m1)p1.tensor.dim[m+i]!==p2.tensor.dim[i]&&stop("error in indexed assign");for(i=n1=0,ref6=p2.tensor.nelem;0<=ref6?n1<ref6:n1>ref6;i=0<=ref6?++n1:--n1)p1.tensor.elem[k+i]=p2.tensor.elem[i];return check_tensor_dimensions(p1),check_tensor_dimensions(p2),moveTos(tos-n),push(p1),restore()},Eval_inner=function(){var difference,i,i1,j1,l1,moretheArguments,o,operands,ref,ref1,ref2,ref3,refinedOperands,results,secondArgument,shift,theArguments;for((theArguments=[]).push(car(cdr(p1))),(secondArgument=car(cdr(cdr(p1))))===symbol(NIL)&&stop("pattern needs at least a template and a transformed version"),moretheArguments=cdr(cdr(p1));moretheArguments!==symbol(NIL);)theArguments.push(car(moretheArguments)),moretheArguments=cdr(moretheArguments);if(theArguments.length>2){for(push_symbol(INNER),push(theArguments[theArguments.length-2]),push(theArguments[theArguments.length-1]),list(3),i=o=2,ref=theArguments.length;2<=ref?o<ref:o>ref;i=2<=ref?++o:--o)push_symbol(INNER),swap(),push(theArguments[theArguments.length-i-1]),swap(),list(3);return p1=pop(),void Eval_inner()}for(get_innerprod_factors(p1,operands=[]),refinedOperands=[],i=i1=0,ref1=operands.length;0<=ref1?i1<ref1:i1>ref1;i=0<=ref1?++i1:--i1)operands[i]!==symbol(SYMBOL_IDENTITY_MATRIX)&&refinedOperands.push(operands[i]);if(operands=refinedOperands,refinedOperands=[],operands.length>1){for(shift=0,i=j1=0,ref2=operands.length;(0<=ref2?j1<ref2:j1>ref2)&&i+shift+1<=operands.length-1&&(isNumericAtomOrTensor(operands[i+shift])||isNumericAtomOrTensor(operands[i+shift+1])?refinedOperands.push(operands[i+shift]):(push(operands[i+shift]),Eval(),inv(),push(operands[i+shift+1]),Eval(),subtract(),difference=pop(),isZeroAtomOrTensor(difference)?shift+=1:refinedOperands.push(operands[i+shift])),i+shift===operands.length-2&&refinedOperands.push(operands[operands.length-1]),!(i+shift>=operands.length-1));i=0<=ref2?++j1:--j1);operands=refinedOperands}if(push(symbol(INNER)),!(operands.length>0))return pop(),void push(symbol(SYMBOL_IDENTITY_MATRIX));for(i=l1=0,ref3=operands.length;0<=ref3?l1<ref3:l1>ref3;i=0<=ref3?++l1:--l1)push(operands[i]);for(list(operands.length+1),p1=pop(),p1=cdr(p1),push(car(p1)),Eval(),p1=cdr(p1),results=[];iscons(p1);)push(car(p1)),Eval(),inner(),results.push(p1=cdr(p1));return results},inner=function(){var arg1,arg2,arg3,subtractionResult;if(save(),p2=pop(),p1=pop(),isnegativeterm(p2)&&isnegativeterm(p1)&&(push(p2),negate(),p2=pop(),push(p1),negate(),p1=pop()),isinnerordot(p1)&&(arg1=car(cdr(p1)),arg2=car(cdr(cdr(p1))),arg3=p2,p1=arg1,push(arg2),push(arg3),inner(),p2=pop()),p1===symbol(SYMBOL_IDENTITY_MATRIX))return push(p2),void restore();if(p2===symbol(SYMBOL_IDENTITY_MATRIX))return push(p1),void restore();if(istensor(p1)&&istensor(p2))inner_f();else{if(!isNumericAtomOrTensor(p1)&&!isNumericAtomOrTensor(p2)&&(push(p1),push(p2),inv(),subtract(),subtractionResult=pop(),isZeroAtomOrTensor(subtractionResult)))return push_symbol(SYMBOL_IDENTITY_MATRIX),void restore();if(expanding&&isadd(p1)){for(p1=cdr(p1),push(zero);iscons(p1);)push(car(p1)),push(p2),inner(),add(),p1=cdr(p1);return void restore()}if(expanding&&isadd(p2)){for(p2=cdr(p2),push(zero);iscons(p2);)push(p1),push(car(p2)),inner(),add(),p2=cdr(p2);return void restore()}if(push(p1),push(p2),istensor(p1)&&isNumericAtom(p2))tensor_times_scalar();else if(isNumericAtom(p1)&&istensor(p2))scalar_times_tensor();else{if(!isNumericAtom(p1)&&!isNumericAtom(p2))return pop(),pop(),push_symbol(INNER),push(p1),push(p2),list(3),void restore();multiply()}}return restore()},inner_f=function(){var a,ak,b,bk,c,i,i1,j,j1,k,l1,m1,n,n1,ndim,o,o1,ref,ref1,ref2,ref3,ref4,ref5,ref6;for(i=0,(n=p1.tensor.dim[p1.tensor.ndim-1])!==p2.tensor.dim[0]&&stop("inner: tensor dimension check"),(ndim=p1.tensor.ndim+p2.tensor.ndim-2)>MAXDIM&&stop("inner: rank of result exceeds maximum"),a=p1.tensor.elem,b=p2.tensor.elem,ak=1,i=o=0,ref=p1.tensor.ndim-1;0<=ref?o<ref:o>ref;i=0<=ref?++o:--o)ak*=p1.tensor.dim[i];for(bk=1,i=i1=1,ref1=p2.tensor.ndim;1<=ref1?i1<ref1:i1>ref1;i=1<=ref1?++i1:--i1)bk*=p2.tensor.dim[i];for(c=(p3=alloc_tensor(ak*bk)).tensor.elem,i=j1=0,ref2=ak;0<=ref2?j1<ref2:j1>ref2;i=0<=ref2?++j1:--j1)for(j=l1=0,ref3=n;0<=ref3?l1<ref3:l1>ref3;j=0<=ref3?++l1:--l1)if(!isZeroAtomOrTensor(a[i*n+j]))for(k=m1=0,ref4=bk;0<=ref4?m1<ref4:m1>ref4;k=0<=ref4?++m1:--m1)push(a[i*n+j]),push(b[j*bk+k]),multiply(),push(c[i*bk+k]),add(),c[i*bk+k]=pop();if(0===ndim)return push(p3.tensor.elem[0]);for(p3.tensor.ndim=ndim,j=0,i=n1=0,ref5=p1.tensor.ndim-1;0<=ref5?n1<ref5:n1>ref5;i=0<=ref5?++n1:--n1)p3.tensor.dim[i]=p1.tensor.dim[i];for(j=p1.tensor.ndim-1,i=o1=0,ref6=p2.tensor.ndim-1;0<=ref6?o1<ref6:o1>ref6;i=0<=ref6?++o1:--o1)p3.tensor.dim[j+i]=p2.tensor.dim[i+1];return push(p3)},get_innerprod_factors=function(tree,factors_accumulator){if(iscons(tree)){if(cdr(tree)!==symbol(NIL))return isinnerordot(tree)?(get_innerprod_factors(car(cdr(tree)),factors_accumulator),void get_innerprod_factors(cdr(cdr(tree)),factors_accumulator)):add_factor_to_accumulator(tree,factors_accumulator);tree=get_innerprod_factors(car(tree),factors_accumulator)}else add_factor_to_accumulator(tree,factors_accumulator)},add_factor_to_accumulator=function(tree,factors_accumulator){if(tree!==symbol(NIL))return factors_accumulator.push(tree)},itab=["f(a,a*x)","f(1/x,log(x))","f(x^a,x^(a+1)/(a+1))","f(x^(-2),-x^(-1))","f(x^(-1/2),2*x^(1/2))","f(x^(1/2),2/3*x^(3/2))","f(x,x^2/2)","f(x^2,x^3/3)","f(exp(a*x),1/a*exp(a*x))","f(exp(a*x+b),1/a*exp(a*x+b))","f(x*exp(a*x^2),exp(a*x^2)/(2*a))","f(x*exp(a*x^2+b),exp(a*x^2+b)/(2*a))","f(log(a*x),x*log(a*x)-x)","f(a^x,a^x/log(a),or(not(number(a)),a>0))","f(1/(a+x^2),1/sqrt(a)*arctan(x/sqrt(a)),or(not(number(a)),a>0))","f(1/(a-x^2),1/sqrt(a)*arctanh(x/sqrt(a)))","f(1/sqrt(a-x^2),arcsin(x/(sqrt(a))))","f(1/sqrt(a+x^2),log(x+sqrt(a+x^2)))","f(1/(a+b*x),1/b*log(a+b*x))","f(1/(a+b*x)^2,-1/(b*(a+b*x)))","f(1/(a+b*x)^3,-1/(2*b)*1/(a+b*x)^2)","f(x/(a+b*x),x/b-a*log(a+b*x)/b/b)","f(x/(a+b*x)^2,1/b^2*(log(a+b*x)+a/(a+b*x)))","f(x^2/(a+b*x),1/b^2*(1/2*(a+b*x)^2-2*a*(a+b*x)+a^2*log(a+b*x)))","f(x^2/(a+b*x)^2,1/b^3*(a+b*x-2*a*log(a+b*x)-a^2/(a+b*x)))","f(x^2/(a+b*x)^3,1/b^3*(log(a+b*x)+2*a/(a+b*x)-1/2*a^2/(a+b*x)^2))","f(1/x*1/(a+b*x),-1/a*log((a+b*x)/x))","f(1/x*1/(a+b*x)^2,1/a*1/(a+b*x)-1/a^2*log((a+b*x)/x))","f(1/x*1/(a+b*x)^3,1/a^3*(1/2*((2*a+b*x)/(a+b*x))^2+log(x/(a+b*x))))","f(1/x^2*1/(a+b*x),-1/(a*x)+b/a^2*log((a+b*x)/x))","f(1/x^3*1/(a+b*x),(2*b*x-a)/(2*a^2*x^2)+b^2/a^3*log(x/(a+b*x)))","f(1/x^2*1/(a+b*x)^2,-(a+2*b*x)/(a^2*x*(a+b*x))+2*b/a^3*log((a+b*x)/x))","f(1/(a+b*x^2),1/sqrt(a*b)*arctan(x*sqrt(a*b)/a),or(not(number(a*b)),a*b>0))","f(1/(a+b*x^2),1/(2*sqrt(-a*b))*log((a+x*sqrt(-a*b))/(a-x*sqrt(-a*b))),or(not(number(a*b)),a*b<0))","f(x/(a+b*x^2),1/2*1/b*log(a+b*x^2))","f(x^2/(a+b*x^2),x/b-a/b*integral(1/(a+b*x^2),x))","f(1/(a+b*x^2)^2,x/(2*a*(a+b*x^2))+1/2*1/a*integral(1/(a+b*x^2),x))","f(1/x*1/(a+b*x^2),1/2*1/a*log(x^2/(a+b*x^2)))","f(1/x^2*1/(a+b*x^2),-1/(a*x)-b/a*integral(1/(a+b*x^2),x))","f(1/(a+b*x^3),1/3*1/a*(a/b)^(1/3)*(1/2*log(((a/b)^(1/3)+x)^3/(a+b*x^3))+sqrt(3)*arctan((2*x-(a/b)^(1/3))*(a/b)^(-1/3)/sqrt(3))))","f(x^2/(a+b*x^3),1/3*1/b*log(a+b*x^3))","f(x/(a+b*x^4),1/2*sqrt(b/a)/b*arctan(x^2*sqrt(b/a)),or(not(number(a*b)),a*b>0))","f(x/(a+b*x^4),1/4*sqrt(-b/a)/b*log((x^2-sqrt(-a/b))/(x^2+sqrt(-a/b))),or(not(number(a*b)),a*b<0))","f(x^3/(a+b*x^4),1/4*1/b*log(a+b*x^4))","f(sqrt(a+b*x),2/3*1/b*sqrt((a+b*x)^3))","f(x*sqrt(a+b*x),-2*(2*a-3*b*x)*sqrt((a+b*x)^3)/15/b^2)","f(x^2*sqrt(a+b*x),2*(8*a^2-12*a*b*x+15*b^2*x^2)*sqrt((a+b*x)^3)/105/b^3)","f(sqrt(a+b*x)/x,2*sqrt(a+b*x)+a*integral(1/x*1/sqrt(a+b*x),x))","f(sqrt(a+b*x)/x^2,-sqrt(a+b*x)/x+b/2*integral(1/x*1/sqrt(a+b*x),x))","f(1/sqrt(a+b*x),2*sqrt(a+b*x)/b)","f(x/sqrt(a+b*x),-2/3*(2*a-b*x)*sqrt(a+b*x)/b^2)","f(x^2/sqrt(a+b*x),2/15*(8*a^2-4*a*b*x+3*b^2*x^2)*sqrt(a+b*x)/b^3)","f(1/x*1/sqrt(a+b*x),1/sqrt(a)*log((sqrt(a+b*x)-sqrt(a))/(sqrt(a+b*x)+sqrt(a))),or(not(number(a)),a>0))","f(1/x*1/sqrt(a+b*x),2/sqrt(-a)*arctan(sqrt(-(a+b*x)/a)),or(not(number(a)),a<0))","f(1/x^2*1/sqrt(a+b*x),-sqrt(a+b*x)/a/x-1/2*b/a*integral(1/x*1/sqrt(a+b*x),x))","f(sqrt(x^2+a),1/2*(x*sqrt(x^2+a)+a*log(x+sqrt(x^2+a))))","f(1/sqrt(x^2+a),log(x+sqrt(x^2+a)))","f(1/x*1/sqrt(x^2+a),arcsec(x/sqrt(-a))/sqrt(-a),or(not(number(a)),a<0))","f(1/x*1/sqrt(x^2+a),-1/sqrt(a)*log((sqrt(a)+sqrt(x^2+a))/x),or(not(number(a)),a>0))","f(sqrt(x^2+a)/x,sqrt(x^2+a)-sqrt(a)*log((sqrt(a)+sqrt(x^2+a))/x),or(not(number(a)),a>0))","f(sqrt(x^2+a)/x,sqrt(x^2+a)-sqrt(-a)*arcsec(x/sqrt(-a)),or(not(number(a)),a<0))","f(x/sqrt(x^2+a),sqrt(x^2+a))","f(x*sqrt(x^2+a),1/3*sqrt((x^2+a)^3))","f(sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),1/4*(x*sqrt((x^2+a^(1/3))^3)+3/2*a^(1/3)*x*sqrt(x^2+a^(1/3))+3/2*a^(2/3)*log(x+sqrt(x^2+a^(1/3)))))","f(sqrt(-a+x^6-3*a^(1/3)*x^4+3*a^(2/3)*x^2),1/4*(x*sqrt((x^2-a^(1/3))^3)-3/2*a^(1/3)*x*sqrt(x^2-a^(1/3))+3/2*a^(2/3)*log(x+sqrt(x^2-a^(1/3)))))","f(1/sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),x/a^(1/3)/sqrt(x^2+a^(1/3)))","f(x/sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),-1/sqrt(x^2+a^(1/3)))","f(x*sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),1/5*sqrt((x^2+a^(1/3))^5))","f(x^2*sqrt(x^2+a),1/4*x*sqrt((x^2+a)^3)-1/8*a*x*sqrt(x^2+a)-1/8*a^2*log(x+sqrt(x^2+a)))","f(x^3*sqrt(x^2+a),(1/5*x^2-2/15*a)*sqrt((x^2+a)^3),and(number(a),a>0))","f(x^3*sqrt(x^2+a),sqrt((x^2+a)^5)/5-a*sqrt((x^2+a)^3)/3,and(number(a),a<0))","f(x^2/sqrt(x^2+a),1/2*x*sqrt(x^2+a)-1/2*a*log(x+sqrt(x^2+a)))","f(x^3/sqrt(x^2+a),1/3*sqrt((x^2+a)^3)-a*sqrt(x^2+a))","f(1/x^2*1/sqrt(x^2+a),-sqrt(x^2+a)/a/x)","f(1/x^3*1/sqrt(x^2+a),-1/2*sqrt(x^2+a)/a/x^2+1/2*log((sqrt(a)+sqrt(x^2+a))/x)/a^(3/2),or(not(number(a)),a>0))","f(1/x^3*1/sqrt(x^2-a),1/2*sqrt(x^2-a)/a/x^2+1/2*1/(a^(3/2))*arcsec(x/(a^(1/2))),or(not(number(a)),a>0))","f(x^2*sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),1/6*x*sqrt((x^2+a^(1/3))^5)-1/24*a^(1/3)*x*sqrt((x^2+a^(1/3))^3)-1/16*a^(2/3)*x*sqrt(x^2+a^(1/3))-1/16*a*log(x+sqrt(x^2+a^(1/3))),or(not(number(a)),a>0))","f(x^2*sqrt(-a-3*a^(1/3)*x^4+3*a^(2/3)*x^2+x^6),1/6*x*sqrt((x^2-a^(1/3))^5)+1/24*a^(1/3)*x*sqrt((x^2-a^(1/3))^3)-1/16*a^(2/3)*x*sqrt(x^2-a^(1/3))+1/16*a*log(x+sqrt(x^2-a^(1/3))),or(not(number(a)),a>0))","f(x^3*sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),1/7*sqrt((x^2+a^(1/3))^7)-1/5*a^(1/3)*sqrt((x^2+a^(1/3))^5),or(not(number(a)),a>0))","f(x^3*sqrt(-a-3*a^(1/3)*x^4+3*a^(2/3)*x^2+x^6),1/7*sqrt((x^2-a^(1/3))^7)+1/5*a^(1/3)*sqrt((x^2-a^(1/3))^5),or(not(number(a)),a>0))","f(1/(x-a)/sqrt(x^2-a^2),-sqrt(x^2-a^2)/a/(x-a))","f(1/(x+a)/sqrt(x^2-a^2),sqrt(x^2-a^2)/a/(x+a))","f(sqrt(a-x^2),1/2*(x*sqrt(a-x^2)+a*arcsin(x/sqrt(abs(a)))))","f(1/x*1/sqrt(a-x^2),-1/sqrt(a)*log((sqrt(a)+sqrt(a-x^2))/x),or(not(number(a)),a>0))","f(sqrt(a-x^2)/x,sqrt(a-x^2)-sqrt(a)*log((sqrt(a)+sqrt(a-x^2))/x),or(not(number(a)),a>0))","f(x/sqrt(a-x^2),-sqrt(a-x^2))","f(x*sqrt(a-x^2),-1/3*sqrt((a-x^2)^3))","f(x^2*sqrt(a-x^2),-x/4*sqrt((a-x^2)^3)+1/8*a*(x*sqrt(a-x^2)+a*arcsin(x/sqrt(a))),or(not(number(a)),a>0))","f(x^3*sqrt(a-x^2),(-1/5*x^2-2/15*a)*sqrt((a-x^2)^3),or(not(number(a)),a>0))","f(x^2/sqrt(a-x^2),-x/2*sqrt(a-x^2)+a/2*arcsin(x/sqrt(a)),or(not(number(a)),a>0))","f(1/x^2*1/sqrt(a-x^2),-sqrt(a-x^2)/a/x,or(not(number(a)),a>0))","f(sqrt(a-x^2)/x^2,-sqrt(a-x^2)/x-arcsin(x/sqrt(a)),or(not(number(a)),a>0))","f(sqrt(a-x^2)/x^3,-1/2*sqrt(a-x^2)/x^2+1/2*log((sqrt(a)+sqrt(a-x^2))/x)/sqrt(a),or(not(number(a)),a>0))","f(sqrt(a-x^2)/x^4,-1/3*sqrt((a-x^2)^3)/a/x^3,or(not(number(a)),a>0))","f(sqrt(a*x^2+b),x*sqrt(a*x^2+b)/2+b*log(x*sqrt(a)+sqrt(a*x^2+b))/2/sqrt(a),and(number(a),a>0))","f(sqrt(a*x^2+b),x*sqrt(a*x^2+b)/2+b*arcsin(x*sqrt(-a/b))/2/sqrt(-a),and(number(a),a<0))","f(sin(a*x),-cos(a*x)/a)","f(cos(a*x),sin(a*x)/a)","f(tan(a*x),-log(cos(a*x))/a)","f(1/tan(a*x),log(sin(a*x))/a)","f(1/cos(a*x),log(tan(pi/4+a*x/2))/a)","f(1/sin(a*x),log(tan(a*x/2))/a)","f(sin(a*x)^2,x/2-sin(2*a*x)/(4*a))","f(sin(a*x)^3,-cos(a*x)*(sin(a*x)^2+2)/(3*a))","f(sin(a*x)^4,3/8*x-sin(2*a*x)/(4*a)+sin(4*a*x)/(32*a))","f(cos(a*x)^2,x/2+sin(2*a*x)/(4*a))","f(cos(a*x)^3,sin(a*x)*(cos(a*x)^2+2)/(3*a))","f(cos(a*x)^4,3/8*x+sin(2*a*x)/(4*a)+sin(4*a*x)/(32*a))","f(1/sin(a*x)^2,-1/(a*tan(a*x)))","f(1/cos(a*x)^2,tan(a*x)/a)","f(sin(a*x)*cos(a*x),sin(a*x)^2/(2*a))","f(sin(a*x)^2*cos(a*x)^2,-sin(4*a*x)/(32*a)+x/8)","f(sin(a*x)/cos(a*x)^2,1/(a*cos(a*x)))","f(sin(a*x)^2/cos(a*x),(log(tan(pi/4+a*x/2))-sin(a*x))/a)","f(cos(a*x)/sin(a*x)^2,-1/(a*sin(a*x)))","f(1/(sin(a*x)*cos(a*x)),log(tan(a*x))/a)","f(1/(sin(a*x)*cos(a*x)^2),(1/cos(a*x)+log(tan(a*x/2)))/a)","f(1/(sin(a*x)^2*cos(a*x)),(log(tan(pi/4+a*x/2))-1/sin(a*x))/a)","f(1/(sin(a*x)^2*cos(a*x)^2),-2/(a*tan(2*a*x)))","f(sin(a+b*x),-cos(a+b*x)/b)","f(cos(a+b*x),sin(a+b*x)/b)","f(1/(b+b*sin(a*x)),-tan(pi/4-a*x/2)/a/b)","f(1/(b-b*sin(a*x)),tan(pi/4+a*x/2)/a/b)","f(1/(b+b*cos(a*x)),tan(a*x/2)/a/b)","f(1/(b-b*cos(a*x)),-1/tan(a*x/2)/a/b)","f(1/(a+b*sin(x)),1/sqrt(b^2-a^2)*log((a*tan(x/2)+b-sqrt(b^2-a^2))/(a*tan(x/2)+b+sqrt(b^2-a^2))),b^2-a^2)","f(1/(a+b*cos(x)),1/sqrt(b^2-a^2)*log((sqrt(b^2-a^2)*tan(x/2)+a+b)/(sqrt(b^2-a^2)*tan(x/2)-a-b)),b^2-a^2)","f(x*sin(a*x),sin(a*x)/a^2-x*cos(a*x)/a)","f(x^2*sin(a*x),2*x*sin(a*x)/a^2-(a^2*x^2-2)*cos(a*x)/a^3)","f(x*cos(a*x),cos(a*x)/a^2+x*sin(a*x)/a)","f(x^2*cos(a*x),2*x*cos(a*x)/a^2+(a^2*x^2-2)*sin(a*x)/a^3)","f(arcsin(a*x),x*arcsin(a*x)+sqrt(1-a^2*x^2)/a)","f(arccos(a*x),x*arccos(a*x)-sqrt(1-a^2*x^2)/a)","f(arctan(a*x),x*arctan(a*x)-1/2*log(1+a^2*x^2)/a)","f(x*log(a*x),x^2*log(a*x)/2-x^2/4)","f(x^2*log(a*x),x^3*log(a*x)/3-1/9*x^3)","f(log(x)^2,x*log(x)^2-2*x*log(x)+2*x)","f(1/x*1/(a+log(x)),log(a+log(x)))","f(log(a*x+b),(a*x+b)*log(a*x+b)/a-x)","f(log(a*x+b)/x^2,a/b*log(x)-(a*x+b)*log(a*x+b)/b/x)","f(sinh(x),cosh(x))","f(cosh(x),sinh(x))","f(tanh(x),log(cosh(x)))","f(x*sinh(x),x*cosh(x)-sinh(x))","f(x*cosh(x),x*sinh(x)-cosh(x))","f(sinh(x)^2,sinh(2*x)/4-x/2)","f(tanh(x)^2,x-tanh(x))","f(cosh(x)^2,sinh(2*x)/4+x/2)","f(x^3*exp(a*x^2),exp(a*x^2)*(x^2/a-1/(a^2))/2)","f(x^3*exp(a*x^2+b),exp(a*x^2)*exp(b)*(x^2/a-1/(a^2))/2)","f(exp(a*x^2),-i*sqrt(pi)*erf(i*sqrt(a)*x)/sqrt(a)/2)","f(erf(a*x),x*erf(a*x)+exp(-a^2*x^2)/a/sqrt(pi))","f(x^2*(1-x^2)^(3/2),(x*sqrt(1-x^2)*(-8*x^4+14*x^2-3)+3*arcsin(x))/48)","f(x^2*(1-x^2)^(5/2),(x*sqrt(1-x^2)*(48*x^6-136*x^4+118*x^2-15)+15*arcsin(x))/384)","f(x^4*(1-x^2)^(3/2),(-x*sqrt(1-x^2)*(16*x^6-24*x^4+2*x^2+3)+3*arcsin(x))/128)","f(x*exp(a*x),exp(a*x)*(a*x-1)/(a^2))","f(x*exp(a*x+b),exp(a*x+b)*(a*x-1)/(a^2))","f(x^2*exp(a*x),exp(a*x)*(a^2*x^2-2*a*x+2)/(a^3))","f(x^2*exp(a*x+b),exp(a*x+b)*(a^2*x^2-2*a*x+2)/(a^3))","f(x^3*exp(a*x),exp(a*x)*x^3/a-3/a*integral(x^2*exp(a*x),x))","f(x^3*exp(a*x+b),exp(a*x+b)*x^3/a-3/a*integral(x^2*exp(a*x+b),x))",0],Eval_integral=function(){var doNothing,i,i1,n,o,ref,ref1;for(i=0,n=0,p1=cdr(p1),push(car(p1)),Eval(),p1=cdr(p1),push(car(p1)),Eval(),(p2=pop())===symbol(NIL)?(guess(),push(symbol(NIL))):isNumericAtom(p2)?(guess(),push(p2)):(push(p2),p1=cdr(p1),push(car(p1)),Eval()),p5=pop(),p4=pop(),p3=pop();;){if(isNumericAtom(p5)?(push(p5),n=pop_integer(),isNaN(n)&&stop("nth integral: check n")):n=1,push(p3),n>=0)for(i=o=0,ref=n;0<=ref?o<ref:o>ref;i=0<=ref?++o:--o)push(p4),integral();else for(i=i1=0,ref1=n=-n;0<=ref1?i1<ref1:i1>ref1;i=0<=ref1?++i1:--i1)push(p4),derivative();if(p3=pop(),p5===symbol(NIL))break;if(isNumericAtom(p5)){if(p1=cdr(p1),push(car(p1)),Eval(),(p5=pop())===symbol(NIL))break;isNumericAtom(p5)?doNothing=1:(p4=p5,p1=cdr(p1),push(car(p1)),Eval(),p5=pop())}else p4=p5,p1=cdr(p1),push(car(p1)),Eval(),p5=pop()}return push(p3)},integral=function(){return save(),p2=pop(),p1=pop(),car(p1)===symbol(ADD)?integral_of_sum():car(p1)===symbol(MULTIPLY)?integral_of_product():integral_of_form(),p1=pop(),Find(p1,symbol(INTEGRAL))&&stop("integral: sorry, could not find a solution"),push(p1),simplify(),Eval(),restore()},integral_of_sum=function(){var results;for(p1=cdr(p1),push(car(p1)),push(p2),integral(),p1=cdr(p1),results=[];iscons(p1);)push(car(p1)),push(p2),integral(),add(),results.push(p1=cdr(p1));return results},integral_of_product=function(){return push(p1),push(p2),partition(),p1=pop(),integral_of_form(),multiply()},integral_of_form=function(){var hc,tab;return hc=italu_hashcode(p1,p2).toFixed(6),(tab=hashed_itab[hc])?(push(p1),push(p2),transform(tab,!1),(p3=pop())===symbol(NIL)?(push_symbol(INTEGRAL),push(p1),push(p2),list(3)):push(p3)):(push_symbol(INTEGRAL),push(p1),push(p2),void list(3))},hashcode_values={x:.95532,constexp:1.43762,constant:1.1441659362941434,constbase:1.2036412230421882,sin:1.7330548251830322,arcsin:1.6483368529465805,cos:1.0586721236863401,arccos:1.8405225918106694,tan:1.1224943776292506,arctan:1.1297397925394963,sinh:1.8176164926060079,cosh:1.9404934661708022,tanh:1.6421307715103122,log:1.477443701354924,erf:1.0825269225702916},italu_hashcode=function(u,x){var half;if(issymbol(u))return equal(u,x)?hashcode_values.x:hashcode_values.constant;if(iscons(u))switch(symnum(car(u))){case ADD:return hash_addition(cdr(u),x);case MULTIPLY:return hash_multiplication(cdr(u),x);case POWER:return hash_power(cadr(u),caddr(u),x);case EXP:return hash_power(symbol(E),cadr(u),x);case SQRT:return push_double(.5),half=pop(),hash_power(cadr(u),half,x);default:return hash_function(u,x)}return hashcode_values.constant},hash_function=function(u,x){var arg_hash,base,name;if(!Find(cadr(u),x))return hashcode_values.constant;if(name=car(u),arg_hash=italu_hashcode(cadr(u),x),!(base=hashcode_values[name.printname]))throw new Error("Unsupported function "+name.printname);return Math.pow(base,arg_hash)},hash_addition=function(terms,x){var k,sum,term,term_hash,term_set,v;for(term_set={};iscons(terms);)term=car(terms),terms=cdr(terms),term_hash=0,term_set[(term_hash=Find(term,x)?italu_hashcode(term,x):hashcode_values.constant).toFixed(6)]=!0;for(k in sum=0,term_set)hasProp.call(term_set,k)&&(v=term_set[k],sum+=parseFloat(k,10));return sum},hash_multiplication=function(terms,x){var product,term;for(product=1;iscons(terms);)term=car(terms),terms=cdr(terms),Find(term,x)&&(product*=italu_hashcode(term,x));return product},hash_power=function(base,power,x){var base_hash,exp_hash;if(base_hash=hashcode_values.constant,exp_hash=hashcode_values.constexp,Find(base,x)&&(base_hash=italu_hashcode(base,x)),Find(power,x))exp_hash=italu_hashcode(power,x);else{if(base_hash===hashcode_values.constant)return hashcode_values.constant;isminusone(power)?exp_hash=-1:isoneovertwo(power)?exp_hash=.5:isminusoneovertwo(power)?exp_hash=-.5:equalq(power,2,1)?exp_hash=2:equalq(power,-2,1)&&(exp_hash=-2)}return Math.pow(base_hash,exp_hash)},make_hashed_itab=function(){var f,h,key,len,o,s,tab,u;for(tab={},o=0,len=itab.length;o<len&&(s=itab[o]);o++)scan_meta(s),f=pop(),u=cadr(f),tab[key=(h=italu_hashcode(u,symbol(METAX))).toFixed(6)]||(tab[key]=[]),tab[key].push(s);return console.log("hashed_itab = "+JSON.stringify(tab,null,2)),tab},$.make_hashed_itab=make_hashed_itab,hashed_itab={1.144166:["f(a,a*x)"],"1.046770":["f(1/x,log(x))"],"0.936400":["f(x^a,x^(a+1)/(a+1))"],1.095727:["f(x^(-2),-x^(-1))"],1.023118:["f(x^(-1/2),2*x^(1/2))"],.977405:["f(x^(1/2),2/3*x^(3/2))"],"0.955320":["f(x,x^2/2)"],.912636:["f(x^2,x^3/3)"],1.137302:["f(exp(a*x),1/a*exp(a*x))","f(a^x,a^x/log(a),or(not(number(a)),a>0))"],1.326774:["f(exp(a*x+b),1/a*exp(a*x+b))"],1.080259:["f(x*exp(a*x^2),exp(a*x^2)/(2*a))"],1.260228:["f(x*exp(a*x^2+b),exp(a*x^2+b)/(2*a))"],1.451902:["f(log(a*x),x*log(a*x)-x)"],.486192:["f(1/(a+x^2),1/sqrt(a)*arctan(x/sqrt(a)),or(not(number(a)),a>0))","f(1/(a-x^2),1/sqrt(a)*arctanh(x/sqrt(a)))","f(1/(a+b*x^2),1/sqrt(a*b)*arctan(x*sqrt(a*b)/a),or(not(number(a*b)),a*b>0))","f(1/(a+b*x^2),1/(2*sqrt(-a*b))*log((a+x*sqrt(-a*b))/(a-x*sqrt(-a*b))),or(not(number(a*b)),a*b<0))"],.697274:["f(1/sqrt(a-x^2),arcsin(x/(sqrt(a))))","f(1/sqrt(a+x^2),log(x+sqrt(a+x^2)))","f(1/sqrt(x^2+a),log(x+sqrt(x^2+a)))"],.476307:["f(1/(a+b*x),1/b*log(a+b*x))"],.226868:["f(1/(a+b*x)^2,-1/(b*(a+b*x)))"],2.904531:["f(1/(a+b*x)^3,-1/(2*b)*1/(a+b*x)^2)"],.455026:["f(x/(a+b*x),x/b-a*log(a+b*x)/b/b)"],.216732:["f(x/(a+b*x)^2,1/b^2*(log(a+b*x)+a/(a+b*x)))"],.434695:["f(x^2/(a+b*x),1/b^2*(1/2*(a+b*x)^2-2*a*(a+b*x)+a^2*log(a+b*x)))"],.207048:["f(x^2/(a+b*x)^2,1/b^3*(a+b*x-2*a*log(a+b*x)-a^2/(a+b*x)))"],2.650781:["f(x^2/(a+b*x)^3,1/b^3*(log(a+b*x)+2*a/(a+b*x)-1/2*a^2/(a+b*x)^2))"],.498584:["f(1/x*1/(a+b*x),-1/a*log((a+b*x)/x))"],.237479:["f(1/x*1/(a+b*x)^2,1/a*1/(a+b*x)-1/a^2*log((a+b*x)/x))"],3.040375:["f(1/x*1/(a+b*x)^3,1/a^3*(1/2*((2*a+b*x)/(a+b*x))^2+log(x/(a+b*x))))"],.521902:["f(1/x^2*1/(a+b*x),-1/(a*x)+b/a^2*log((a+b*x)/x))"],.446014:["f(1/x^3*1/(a+b*x),(2*b*x-a)/(2*a^2*x^2)+b^2/a^3*log(x/(a+b*x)))"],.248586:["f(1/x^2*1/(a+b*x)^2,-(a+2*b*x)/(a^2*x*(a+b*x))+2*b/a^3*log((a+b*x)/x))"],.464469:["f(x/(a+b*x^2),1/2*1/b*log(a+b*x^2))"],.443716:["f(x^2/(a+b*x^2),x/b-a/b*integral(1/(a+b*x^2),x))"],.236382:["f(1/(a+b*x^2)^2,x/(2*a*(a+b*x^2))+1/2*1/a*integral(1/(a+b*x^2),x))"],.508931:["f(1/x*1/(a+b*x^2),1/2*1/a*log(x^2/(a+b*x^2)))"],.532733:["f(1/x^2*1/(a+b*x^2),-1/(a*x)-b/a*integral(1/(a+b*x^2),x))"],.480638:["f(1/(a+b*x^3),1/3*1/a*(a/b)^(1/3)*(1/2*log(((a/b)^(1/3)+x)^3/(a+b*x^3))+sqrt(3)*arctan((2*x-(a/b)^(1/3))*(a/b)^(-1/3)/sqrt(3))))"],.438648:["f(x^2/(a+b*x^3),1/3*1/b*log(a+b*x^3))"],.459164:["f(x/(a+b*x^4),1/2*sqrt(b/a)/b*arctan(x^2*sqrt(b/a)),or(not(number(a*b)),a*b>0))","f(x/(a+b*x^4),1/4*sqrt(-b/a)/b*log((x^2-sqrt(-a/b))/(x^2+sqrt(-a/b))),or(not(number(a*b)),a*b<0))"],"0.450070":["f(x^3/(a+b*x^4),1/4*1/b*log(a+b*x^4))"],"1.448960":["f(sqrt(a+b*x),2/3*1/b*sqrt((a+b*x)^3))"],1.384221:["f(x*sqrt(a+b*x),-2*(2*a-3*b*x)*sqrt((a+b*x)^3)/15/b^2)"],1.322374:["f(x^2*sqrt(a+b*x),2*(8*a^2-12*a*b*x+15*b^2*x^2)*sqrt((a+b*x)^3)/105/b^3)"],1.516728:["f(sqrt(a+b*x)/x,2*sqrt(a+b*x)+a*integral(1/x*1/sqrt(a+b*x),x))"],1.587665:["f(sqrt(a+b*x)/x^2,-sqrt(a+b*x)/x+b/2*integral(1/x*1/sqrt(a+b*x),x))"],"0.690150":["f(1/sqrt(a+b*x),2*sqrt(a+b*x)/b)"],.659314:["f(x/sqrt(a+b*x),-2/3*(2*a-b*x)*sqrt(a+b*x)/b^2)"],.629856:["f(x^2/sqrt(a+b*x),2/15*(8*a^2-4*a*b*x+3*b^2*x^2)*sqrt(a+b*x)/b^3)"],.722428:["f(1/x*1/sqrt(a+b*x),1/sqrt(a)*log((sqrt(a+b*x)-sqrt(a))/(sqrt(a+b*x)+sqrt(a))),or(not(number(a)),a>0))","f(1/x*1/sqrt(a+b*x),2/sqrt(-a)*arctan(sqrt(-(a+b*x)/a)),or(not(number(a)),a<0))"],.756216:["f(1/x^2*1/sqrt(a+b*x),-sqrt(a+b*x)/a/x-1/2*b/a*integral(1/x*1/sqrt(a+b*x),x))"],1.434156:["f(sqrt(x^2+a),1/2*(x*sqrt(x^2+a)+a*log(x+sqrt(x^2+a))))","f(sqrt(a-x^2),1/2*(x*sqrt(a-x^2)+a*arcsin(x/sqrt(abs(a)))))","f(sqrt(a*x^2+b),x*sqrt(a*x^2+b)/2+b*log(x*sqrt(a)+sqrt(a*x^2+b))/2/sqrt(a),and(number(a),a>0))","f(sqrt(a*x^2+b),x*sqrt(a*x^2+b)/2+b*arcsin(x*sqrt(-a/b))/2/sqrt(-a),and(number(a),a<0))"],.729886:["f(1/x*1/sqrt(x^2+a),arcsec(x/sqrt(-a))/sqrt(-a),or(not(number(a)),a<0))","f(1/x*1/sqrt(x^2+a),-1/sqrt(a)*log((sqrt(a)+sqrt(x^2+a))/x),or(not(number(a)),a>0))","f(1/x*1/sqrt(a-x^2),-1/sqrt(a)*log((sqrt(a)+sqrt(a-x^2))/x),or(not(number(a)),a>0))"],"1.501230":["f(sqrt(x^2+a)/x,sqrt(x^2+a)-sqrt(a)*log((sqrt(a)+sqrt(x^2+a))/x),or(not(number(a)),a>0))","f(sqrt(x^2+a)/x,sqrt(x^2+a)-sqrt(-a)*arcsec(x/sqrt(-a)),or(not(number(a)),a<0))","f(sqrt(a-x^2)/x,sqrt(a-x^2)-sqrt(a)*log((sqrt(a)+sqrt(a-x^2))/x),or(not(number(a)),a>0))"],"0.666120":["f(x/sqrt(x^2+a),sqrt(x^2+a))","f(x/sqrt(a-x^2),-sqrt(a-x^2))"],1.370077:["f(x*sqrt(x^2+a),1/3*sqrt((x^2+a)^3))","f(x*sqrt(a-x^2),-1/3*sqrt((a-x^2)^3))"],1.730087:["f(sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),1/4*(x*sqrt((x^2+a^(1/3))^3)+3/2*a^(1/3)*x*sqrt(x^2+a^(1/3))+3/2*a^(2/3)*log(x+sqrt(x^2+a^(1/3)))))","f(sqrt(-a+x^6-3*a^(1/3)*x^4+3*a^(2/3)*x^2),1/4*(x*sqrt((x^2-a^(1/3))^3)-3/2*a^(1/3)*x*sqrt(x^2-a^(1/3))+3/2*a^(2/3)*log(x+sqrt(x^2-a^(1/3)))))"],.578006:["f(1/sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),x/a^(1/3)/sqrt(x^2+a^(1/3)))"],"0.552180":["f(x/sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),-1/sqrt(x^2+a^(1/3)))"],1.652787:["f(x*sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),1/5*sqrt((x^2+a^(1/3))^5))"],1.308862:["f(x^2*sqrt(x^2+a),1/4*x*sqrt((x^2+a)^3)-1/8*a*x*sqrt(x^2+a)-1/8*a^2*log(x+sqrt(x^2+a)))","f(x^2*sqrt(a-x^2),-x/4*sqrt((a-x^2)^3)+1/8*a*(x*sqrt(a-x^2)+a*arcsin(x/sqrt(a))),or(not(number(a)),a>0))"],1.342944:["f(x^3*sqrt(x^2+a),(1/5*x^2-2/15*a)*sqrt((x^2+a)^3),and(number(a),a>0))","f(x^3*sqrt(x^2+a),sqrt((x^2+a)^5)/5-a*sqrt((x^2+a)^3)/3,and(number(a),a<0))","f(x^3*sqrt(a-x^2),(-1/5*x^2-2/15*a)*sqrt((a-x^2)^3),or(not(number(a)),a>0))","f(sqrt(a-x^2)/x^3,-1/2*sqrt(a-x^2)/x^2+1/2*log((sqrt(a)+sqrt(a-x^2))/x)/sqrt(a),or(not(number(a)),a>0))","f(sqrt(a-x^2)/x^4,-1/3*sqrt((a-x^2)^3)/a/x^3,or(not(number(a)),a>0))"],.636358:["f(x^2/sqrt(x^2+a),1/2*x*sqrt(x^2+a)-1/2*a*log(x+sqrt(x^2+a)))","f(x^2/sqrt(a-x^2),-x/2*sqrt(a-x^2)+a/2*arcsin(x/sqrt(a)),or(not(number(a)),a>0))"],.652928:["f(x^3/sqrt(x^2+a),1/3*sqrt((x^2+a)^3)-a*sqrt(x^2+a))","f(1/x^3*1/sqrt(x^2+a),-1/2*sqrt(x^2+a)/a/x^2+1/2*log((sqrt(a)+sqrt(x^2+a))/x)/a^(3/2),or(not(number(a)),a>0))","f(1/x^3*1/sqrt(x^2-a),1/2*sqrt(x^2-a)/a/x^2+1/2*1/(a^(3/2))*arcsec(x/(a^(1/2))),or(not(number(a)),a>0))"],.764022:["f(1/x^2*1/sqrt(x^2+a),-sqrt(x^2+a)/a/x)","f(1/x^2*1/sqrt(a-x^2),-sqrt(a-x^2)/a/x,or(not(number(a)),a>0))"],"1.578940":["f(x^2*sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),1/6*x*sqrt((x^2+a^(1/3))^5)-1/24*a^(1/3)*x*sqrt((x^2+a^(1/3))^3)-1/16*a^(2/3)*x*sqrt(x^2+a^(1/3))-1/16*a*log(x+sqrt(x^2+a^(1/3))),or(not(number(a)),a>0))","f(x^2*sqrt(-a-3*a^(1/3)*x^4+3*a^(2/3)*x^2+x^6),1/6*x*sqrt((x^2-a^(1/3))^5)+1/24*a^(1/3)*x*sqrt((x^2-a^(1/3))^3)-1/16*a^(2/3)*x*sqrt(x^2-a^(1/3))+1/16*a*log(x+sqrt(x^2-a^(1/3))),or(not(number(a)),a>0))"],1.620055:["f(x^3*sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),1/7*sqrt((x^2+a^(1/3))^7)-1/5*a^(1/3)*sqrt((x^2+a^(1/3))^5),or(not(number(a)),a>0))","f(x^3*sqrt(-a-3*a^(1/3)*x^4+3*a^(2/3)*x^2+x^6),1/7*sqrt((x^2-a^(1/3))^7)+1/5*a^(1/3)*sqrt((x^2-a^(1/3))^5),or(not(number(a)),a>0))"],.332117:["f(1/(x-a)/sqrt(x^2-a^2),-sqrt(x^2-a^2)/a/(x-a))","f(1/(x+a)/sqrt(x^2-a^2),sqrt(x^2-a^2)/a/(x+a))"],1.571443:["f(sqrt(a-x^2)/x^2,-sqrt(a-x^2)/x-arcsin(x/sqrt(a)),or(not(number(a)),a>0))"],1.690994:["f(sin(a*x),-cos(a*x)/a)"],1.055979:["f(cos(a*x),sin(a*x)/a)"],1.116714:["f(tan(a*x),-log(cos(a*x))/a)"],.895484:["f(1/tan(a*x),log(sin(a*x))/a)"],.946989:["f(1/cos(a*x),log(tan(pi/4+a*x/2))/a)"],.591368:["f(1/sin(a*x),log(tan(a*x/2))/a)"],2.859462:["f(sin(a*x)^2,x/2-sin(2*a*x)/(4*a))"],"2.128050":["f(sin(a*x)^3,-cos(a*x)*(sin(a*x)^2+2)/(3*a))","f(sin(a*x)^4,3/8*x-sin(2*a*x)/(4*a)+sin(4*a*x)/(32*a))"],1.115091:["f(cos(a*x)^2,x/2+sin(2*a*x)/(4*a))"],1.081452:["f(cos(a*x)^3,sin(a*x)*(cos(a*x)^2+2)/(3*a))","f(cos(a*x)^4,3/8*x+sin(2*a*x)/(4*a)+sin(4*a*x)/(32*a))"],.349716:["f(1/sin(a*x)^2,-1/(a*tan(a*x)))"],.896788:["f(1/cos(a*x)^2,tan(a*x)/a)"],1.785654:["f(sin(a*x)*cos(a*x),sin(a*x)^2/(2*a))"],"3.188560":["f(sin(a*x)^2*cos(a*x)^2,-sin(4*a*x)/(32*a)+x/8)"],1.516463:["f(sin(a*x)/cos(a*x)^2,1/(a*cos(a*x)))"],2.707879:["f(sin(a*x)^2/cos(a*x),(log(tan(pi/4+a*x/2))-sin(a*x))/a)"],.369293:["f(cos(a*x)/sin(a*x)^2,-1/(a*sin(a*x)))"],.560019:["f(1/(sin(a*x)*cos(a*x)),log(tan(a*x))/a)"],.530332:["f(1/(sin(a*x)*cos(a*x)^2),(1/cos(a*x)+log(tan(a*x/2)))/a)"],.331177:["f(1/(sin(a*x)^2*cos(a*x)),(log(tan(pi/4+a*x/2))-1/sin(a*x))/a)"],.313621:["f(1/(sin(a*x)^2*cos(a*x)^2),-2/(a*tan(2*a*x)))"],3.172365:["f(sin(a+b*x),-cos(a+b*x)/b)"],1.127162:["f(cos(a+b*x),sin(a+b*x)/b)"],.352714:["f(1/(b+b*sin(a*x)),-tan(pi/4-a*x/2)/a/b)","f(1/(b-b*sin(a*x)),tan(pi/4+a*x/2)/a/b)","f(1/(a+b*sin(x)),1/sqrt(b^2-a^2)*log((a*tan(x/2)+b-sqrt(b^2-a^2))/(a*tan(x/2)+b+sqrt(b^2-a^2))),b^2-a^2)"],.454515:["f(1/(b+b*cos(a*x)),tan(a*x/2)/a/b)","f(1/(b-b*cos(a*x)),-1/tan(a*x/2)/a/b)","f(1/(a+b*cos(x)),1/sqrt(b^2-a^2)*log((sqrt(b^2-a^2)*tan(x/2)+a+b)/(sqrt(b^2-a^2)*tan(x/2)-a-b)),b^2-a^2)"],1.615441:["f(x*sin(a*x),sin(a*x)/a^2-x*cos(a*x)/a)"],1.543263:["f(x^2*sin(a*x),2*x*sin(a*x)/a^2-(a^2*x^2-2)*cos(a*x)/a^3)"],1.008798:["f(x*cos(a*x),cos(a*x)/a^2+x*sin(a*x)/a)"],.963724:["f(x^2*cos(a*x),2*x*cos(a*x)/a^2+(a^2*x^2-2)*sin(a*x)/a^3)"],1.611938:["f(arcsin(a*x),x*arcsin(a*x)+sqrt(1-a^2*x^2)/a)"],1.791033:["f(arccos(a*x),x*arccos(a*x)-sqrt(1-a^2*x^2)/a)"],1.123599:["f(arctan(a*x),x*arctan(a*x)-1/2*log(1+a^2*x^2)/a)"],1.387031:["f(x*log(a*x),x^2*log(a*x)/2-x^2/4)"],1.325058:["f(x^2*log(a*x),x^3*log(a*x)/3-1/9*x^3)"],2.108018:["f(log(x)^2,x*log(x)^2-2*x*log(x)+2*x)"],.403214:["f(1/x*1/(a+log(x)),log(a+log(x)))"],2.269268:["f(log(a*x+b),(a*x+b)*log(a*x+b)/a-x)"],2.486498:["f(log(a*x+b)/x^2,a/b*log(x)-(a*x+b)*log(a*x+b)/b/x)"],1.769733:["f(sinh(x),cosh(x))"],1.883858:["f(cosh(x),sinh(x))"],"1.606140":["f(tanh(x),log(cosh(x)))"],1.690661:["f(x*sinh(x),x*cosh(x)-sinh(x))"],1.799688:["f(x*cosh(x),x*sinh(x)-cosh(x))"],3.131954:["f(sinh(x)^2,sinh(2*x)/4-x/2)"],2.579685:["f(tanh(x)^2,x-tanh(x))"],3.548923:["f(cosh(x)^2,sinh(2*x)/4+x/2)"],1.058866:["f(x^3*exp(a*x^2),exp(a*x^2)*(x^2/a-1/(a^2))/2)"],"1.235270":["f(x^3*exp(a*x^2+b),exp(a*x^2)*exp(b)*(x^2/a-1/(a^2))/2)"],1.130783:["f(exp(a*x^2),-i*sqrt(pi)*erf(i*sqrt(a)*x)/sqrt(a)/2)"],1.078698:["f(erf(a*x),x*erf(a*x)+exp(-a^2*x^2)/a/sqrt(pi))"],"2.573650":["f(x^2*(1-x^2)^(3/2),(x*sqrt(1-x^2)*(-8*x^4+14*x^2-3)+3*arcsin(x))/48)","f(x^2*(1-x^2)^(5/2),(x*sqrt(1-x^2)*(48*x^6-136*x^4+118*x^2-15)+15*arcsin(x))/384)"],2.640666:["f(x^4*(1-x^2)^(3/2),(-x*sqrt(1-x^2)*(16*x^6-24*x^4+2*x^2+3)+3*arcsin(x))/128)"],1.086487:["f(x*exp(a*x),exp(a*x)*(a*x-1)/(a^2))"],1.267493:["f(x*exp(a*x+b),exp(a*x+b)*(a*x-1)/(a^2))"],1.037943:["f(x^2*exp(a*x),exp(a*x)*(a^2*x^2-2*a*x+2)/(a^3))"],1.210862:["f(x^2*exp(a*x+b),exp(a*x+b)*(a^2*x^2-2*a*x+2)/(a^3))"],"1.064970":["f(x^3*exp(a*x),exp(a*x)*x^3/a-3/a*integral(x^2*exp(a*x),x))"],1.242392:["f(x^3*exp(a*x+b),exp(a*x+b)*x^3/a-3/a*integral(x^2*exp(a*x+b),x))"]},INV_check_arg=function(){return istensor(p1)?2!==p1.tensor.ndim?0:p1.tensor.dim[0]!==p1.tensor.dim[1]?0:1:0},inv=function(){var accumulator,eachEntry,i,n,o,ref;if(i=0,n=0,save(),p1=pop(),isinv(p1))return push(car(cdr(p1))),void restore();if(isidentitymatrix(p1))return push(p1),void restore();if(!expanding||!isinnerordot(p1))return 0===INV_check_arg()?(push_symbol(INV),push(p1),list(2),void restore()):(isNumericAtomOrTensor(p1)?yyinvg():(push(p1),adj(),push(p1),det(),p2=pop(),isZeroAtomOrTensor(p2)&&stop("inverse of singular matrix"),push(p2),divide()),restore());for(p1=cdr(p1),accumulator=[];iscons(p1);)accumulator.push(car(p1)),p1=cdr(p1);for(eachEntry=o=ref=accumulator.length-1;ref<=0?o<=0:o>=0;eachEntry=ref<=0?++o:--o)push(accumulator[eachEntry]),inv(),eachEntry!==accumulator.length-1&&inner();restore()},invg=function(){return save(),p1=pop(),0===INV_check_arg()?(push_symbol(INVG),push(p1),list(2),void restore()):(yyinvg(),restore())},yyinvg=function(){var h,i,i1,j,j1,l1,n,o,ref,ref1,ref2,ref3;for(h=0,i=0,j=0,n=0,n=p1.tensor.dim[0],h=tos,i=o=0,ref=n;0<=ref?o<ref:o>ref;i=0<=ref?++o:--o)for(j=i1=0,ref1=n;0<=ref1?i1<ref1:i1>ref1;j=0<=ref1?++i1:--i1)push(i===j?one:zero);for(i=j1=0,ref2=n*n;0<=ref2?j1<ref2:j1>ref2;i=0<=ref2?++j1:--j1)push(p1.tensor.elem[i]);for(INV_decomp(n),(p1=alloc_tensor(n*n)).tensor.ndim=2,p1.tensor.dim[0]=n,p1.tensor.dim[1]=n,i=l1=0,ref3=n*n;0<=ref3?l1<ref3:l1>ref3;i=0<=ref3?++l1:--l1)p1.tensor.elem[i]=stack[h+i];return moveTos(tos-2*n*n),push(p1)},INV_decomp=function(n){var a,d,i,i1,j,j1,l1,o,ref,ref1,ref2,ref3,ref4,results,u;for(a=0,d=0,i=0,j=0,u=0,u=(a=tos-n*n)-n*n,results=[],d=o=0,ref=n;0<=ref?o<ref:o>ref;d=0<=ref?++o:--o){if(equal(stack[a+n*d+d],zero)){for(i=i1=ref1=d+1,ref2=n;(ref1<=ref2?i1<ref2:i1>ref2)&&equal(stack[a+n*i+d],zero);i=ref1<=ref2?++i1:--i1);for(i===n&&stop("inverse of singular matrix"),j=j1=0,ref3=n;0<=ref3?j1<ref3:j1>ref3;j=0<=ref3?++j1:--j1)p2=stack[a+n*d+j],stack[a+n*d+j]=stack[a+n*i+j],stack[a+n*i+j]=p2,p2=stack[u+n*d+j],stack[u+n*d+j]=stack[u+n*i+j],stack[u+n*i+j]=p2}for(p2=stack[a+n*d+d],j=l1=0,ref4=n;0<=ref4?l1<ref4:l1>ref4;j=0<=ref4?++l1:--l1)j>d&&(push(stack[a+n*d+j]),push(p2),divide(),stack[a+n*d+j]=pop()),push(stack[u+n*d+j]),push(p2),divide(),stack[u+n*d+j]=pop();results.push(function(){var m1,ref5,results1;for(results1=[],i=m1=0,ref5=n;0<=ref5?m1<ref5:m1>ref5;i=0<=ref5?++m1:--m1)i!==d&&(p2=stack[a+n*i+d],results1.push(function(){var n1,ref6,results2;for(results2=[],j=n1=0,ref6=n;0<=ref6?n1<ref6:n1>ref6;j=0<=ref6?++n1:--n1)j>d&&(push(stack[a+n*i+j]),push(stack[a+n*d+j]),push(p2),multiply(),subtract(),stack[a+n*i+j]=pop()),push(stack[u+n*i+j]),push(stack[u+n*d+j]),push(p2),multiply(),subtract(),results2.push(stack[u+n*i+j]=pop());return results2}()));return results1}())}return results},DEBUG_IS=!1,isZeroAtom=function(p){switch(p.k){case NUM:if(MZERO(p.q.a))return 1;break;case DOUBLE:if(0===p.d)return 1}return 0},isZeroTensor=function(p){var i,o,ref;if(p.k!==TENSOR)return 0;for(i=o=0,ref=p.tensor.nelem;0<=ref?o<ref:o>ref;i=0<=ref?++o:--o)if(!isZeroAtomOrTensor(p.tensor.elem[i]))return 0;return 1},isZeroAtomOrTensor=function(p){return isZeroAtom(p)||isZeroTensor(p)},isZeroLikeOrNonZeroLikeOrUndetermined=function(valueOrPredicate){var evalledArgument;if(push(valueOrPredicate),Eval_predicate(),evalledArgument=pop(),isZeroAtomOrTensor(evalledArgument))return 0;if(isNumericAtomOrTensor(evalledArgument))return 1;if(push(evalledArgument),zzfloat(),evalledArgument=pop(),isZeroAtomOrTensor(evalledArgument))return 0;if(isNumericAtomOrTensor(evalledArgument))return 1;if(Find(evalledArgument,imaginaryunit)){if(push(evalledArgument),absValFloat(),Eval_predicate(),evalledArgument=pop(),isZeroAtomOrTensor(evalledArgument))return 0;if(isNumericAtomOrTensor(evalledArgument))return 1}return null},isnegativenumber=function(p){switch(p.k){case NUM:if(-1===MSIGN(p.q.a))return 1;break;case DOUBLE:if(p.d<0)return 1}return 0},ispositivenumber=function(p){switch(p.k){case NUM:if(1===MSIGN(p.q.a))return 1;break;case DOUBLE:if(p.d>0)return 1}return 0},isplustwo=function(p){switch(p.k){case NUM:if(MEQUAL(p.q.a,2)&&MEQUAL(p.q.b,1))return 1;break;case DOUBLE:if(2===p.d)return 1}return 0},isplusone=function(p){switch(p.k){case NUM:if(MEQUAL(p.q.a,1)&&MEQUAL(p.q.b,1))return 1;break;case DOUBLE:if(1===p.d)return 1}return 0},isminusone=function(p){switch(p.k){case NUM:if(MEQUAL(p.q.a,-1)&&MEQUAL(p.q.b,1))return 1;break;case DOUBLE:if(-1===p.d)return 1}return 0},isone=function(p){return isplusone(p)||isminusone(p)},isinteger=function(p){return p.k===NUM&&MEQUAL(p.q.b,1)?1:0},isintegerorintegerfloat=function(p){return p.k===DOUBLE?p.d===Math.round(p.d)?1:0:isinteger(p)},isnonnegativeinteger=function(p){return isrational(p)&&MEQUAL(p.q.b,1)&&1===MSIGN(p.q.a)?1:0},isposint=function(p){return isinteger(p)&&1===MSIGN(p.q.a)?1:0},isunivarpolyfactoredorexpandedform=function(p,x){return null==x&&(push(p),guess(),x=pop(),pop()),ispolyfactoredorexpandedform(p,x)&&Find(p,symbol(SYMBOL_X))+Find(p,symbol(SYMBOL_Y))+Find(p,symbol(SYMBOL_Z))===1?x:0},ispolyfactoredorexpandedform=function(p,x){return ispolyfactoredorexpandedform_factor(p,x)},ispolyfactoredorexpandedform_factor=function(p,x){if(car(p)===symbol(MULTIPLY)){for(p=cdr(p);iscons(p);){if(DEBUG&&console.log("ispolyfactoredorexpandedform_factor testing "+car(p)),!ispolyfactoredorexpandedform_power(car(p),x))return DEBUG&&console.log("... tested negative:"+car(p)),0;p=cdr(p)}return 1}return ispolyfactoredorexpandedform_power(p,x)},ispolyfactoredorexpandedform_power=function(p,x){return car(p)===symbol(POWER)?(DEBUG&&console.log("ispolyfactoredorexpandedform_power (isposint(caddr(p)) "+(isposint(caddr(p)),DEBUG?console.log("ispolyfactoredorexpandedform_power ispolyexpandedform_expr(cadr(p), x)) "+ispolyexpandedform_expr(cadr(p),x)):void 0)),isposint(caddr(p))&&ispolyexpandedform_expr(cadr(p),x)):(DEBUG&&console.log("ispolyfactoredorexpandedform_power not a power, testing if this is exp form: "+p),ispolyexpandedform_expr(p,x))},ispolyexpandedform=function(p,x){return Find(p,x)?ispolyexpandedform_expr(p,x):0},ispolyexpandedform_expr=function(p,x){if(car(p)===symbol(ADD)){for(p=cdr(p);iscons(p);){if(!ispolyexpandedform_term(car(p),x))return 0;p=cdr(p)}return 1}return ispolyexpandedform_term(p,x)},ispolyexpandedform_term=function(p,x){if(car(p)===symbol(MULTIPLY)){for(p=cdr(p);iscons(p);){if(!ispolyexpandedform_factor(car(p),x))return 0;p=cdr(p)}return 1}return ispolyexpandedform_factor(p,x)},ispolyexpandedform_factor=function(p,x){return equal(p,x)?1:car(p)===symbol(POWER)&&equal(cadr(p),x)?isposint(caddr(p))?1:0:Find(p,x)?0:1},isnegativeterm=function(p){return isnegativenumber(p)?1:car(p)===symbol(MULTIPLY)&&isnegativenumber(cadr(p))?1:0},hasNegativeRationalExponent=function(p){return car(p)===symbol(POWER)&&isrational(car(cdr(cdr(p))))&&isnegativenumber(car(cdr(p)))?(DEBUG_IS&&console.log("hasNegativeRationalExponent: "+p.toString()+" has imaginary component"),1):(DEBUG_IS&&console.log("hasNegativeRationalExponent: "+p.toString()+" has NO imaginary component"),0)},isimaginarynumberdouble=function(p){return car(p)===symbol(MULTIPLY)&&3===length(p)&&isdouble(cadr(p))&&hasNegativeRationalExponent(caddr(p))||equal(p,imaginaryunit)?1:0},isimaginarynumber=function(p){return car(p)===symbol(MULTIPLY)&&3===length(p)&&isNumericAtom(cadr(p))&&equal(caddr(p),imaginaryunit)||equal(p,imaginaryunit)||hasNegativeRationalExponent(caddr(p))?(DEBUG_IS&&console.log("isimaginarynumber: "+p.toString()+" is imaginary number"),1):(DEBUG_IS&&console.log("isimaginarynumber: "+p.toString()+" isn't an imaginary number"),0)},iscomplexnumberdouble=function(p){return car(p)===symbol(ADD)&&3===length(p)&&isdouble(cadr(p))&&isimaginarynumberdouble(caddr(p))||isimaginarynumberdouble(p)?1:0},iscomplexnumber=function(p){return car(p)===symbol(ADD)&&3===length(p)&&isNumericAtom(cadr(p))&&isimaginarynumber(caddr(p))||isimaginarynumber(p)?(DEBUG&&console.log("iscomplexnumber: "+p.toString()+" is imaginary number"),1):(DEBUG&&console.log("iscomplexnumber: "+p.toString()+" is imaginary number"),0)},iseveninteger=function(p){return isinteger(p)&&p.q.a.isEven()?1:0},isnegative=function(p){return car(p)===symbol(ADD)&&isnegativeterm(cadr(p))?1:isnegativeterm(p)?1:0},issymbolic=function(p){if(issymbol(p))return 1;for(;iscons(p);){if(issymbolic(car(p)))return 1;p=cdr(p)}return 0},isintegerfactor=function(p){return isinteger(p)||car(p)===symbol(POWER)&&isinteger(cadr(p))&&isinteger(caddr(p))?1:0},isNumberOneOverSomething=function(p){return isfraction(p)&&MEQUAL(p.q.a.abs(),1)?1:0},isoneover=function(p){return car(p)===symbol(POWER)&&isminusone(caddr(p))?1:0},isfraction=function(p){return p.k!==NUM||MEQUAL(p.q.b,1)?0:1},equaln=function(p,n){switch(p.k){case NUM:if(MEQUAL(p.q.a,n)&&MEQUAL(p.q.b,1))return 1;break;case DOUBLE:if(p.d===n)return 1}return 0},equalq=function(p,a,b){switch(p.k){case NUM:if(MEQUAL(p.q.a,a)&&MEQUAL(p.q.b,b))return 1;break;case DOUBLE:if(p.d===a/b)return 1}return 0},isoneovertwo=function(p){return equalq(p,1,2)?1:0},isminusoneovertwo=function(p){return equalq(p,-1,2)?1:0},isoneoversqrttwo=function(p){return car(p)===symbol(POWER)&&equaln(cadr(p),2)&&equalq(caddr(p),-1,2)?1:0},isminusoneoversqrttwo=function(p){return car(p)===symbol(MULTIPLY)&&equaln(cadr(p),-1)&&isoneoversqrttwo(caddr(p))&&3===length(p)?1:0},isfloating=function(p){if(p.k===DOUBLE||p===symbol(FLOATF))return 1;for(;iscons(p);){if(isfloating(car(p)))return 1;p=cdr(p)}return 0},isimaginaryunit=function(p){return equal(p,imaginaryunit)?1:0},isquarterturn=function(p){var minussign,n;if(n=0,minussign=0,car(p)!==symbol(MULTIPLY))return 0;if(equal(cadr(p),imaginaryunit))return caddr(p)!==symbol(PI)?0:3!==length(p)?0:2;if(!isNumericAtom(cadr(p)))return 0;if(!equal(caddr(p),imaginaryunit))return 0;if(cadddr(p)!==symbol(PI))return 0;if(4!==length(p))return 0;if(push(cadr(p)),push_integer(2),multiply(),n=pop_integer(),isNaN(n))return 0;switch(n<1&&(minussign=1,n=-n),n%4){case 0:n=1;break;case 1:n=minussign?4:3;break;case 2:n=2;break;case 3:n=minussign?3:4}return n},isnpi=function(p){var doNothing,n;return n=0,p===symbol(PI)?2:car(p)===symbol(MULTIPLY)&&isNumericAtom(cadr(p))&&caddr(p)===symbol(PI)&&3===length(p)?(doNothing=0,push(cadr(p)),push_integer(2),multiply(),n=pop_integer(),isNaN(n)?0:n=n<0?4- -n%4:1+(n-1)%4):0},$.isZeroAtomOrTensor=isZeroAtomOrTensor,$.isnegativenumber=isnegativenumber,$.isplusone=isplusone,$.isminusone=isminusone,$.isinteger=isinteger,$.isnonnegativeinteger=isnonnegativeinteger,$.isposint=isposint,$.isnegativeterm=isnegativeterm,$.isimaginarynumber=isimaginarynumber,$.iscomplexnumber=iscomplexnumber,$.iseveninteger=iseveninteger,$.isnegative=isnegative,$.issymbolic=issymbolic,$.isintegerfactor=isintegerfactor,$.isoneover=isoneover,$.isfraction=isfraction,$.isoneoversqrttwo=isoneoversqrttwo,$.isminusoneoversqrttwo=isminusoneoversqrttwo,$.isfloating=isfloating,$.isimaginaryunit=isimaginaryunit,$.isquarterturn=isquarterturn,$.isnpi=isnpi,Eval_isprime=function(){return push(cadr(p1)),Eval(),p1=pop(),isnonnegativeinteger(p1)&&mprime(p1.q.a)?push_integer(1):push_integer(0)},Eval_laguerre=function(){return push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),push(cadddr(p1)),Eval(),(p2=pop())===symbol(NIL)?push_integer(0):push(p2),laguerre()},laguerre=function(){var n;return n=0,save(),p3=pop(),p2=pop(),p1=pop(),push(p2),(n=pop_integer())<0||isNaN(n)?(push_symbol(LAGUERRE),push(p1),push(p2),push(p3),list(4),void restore()):(issymbol(p1)?laguerre2(n):(p4=p1,p1=symbol(SECRETX),laguerre2(n),p1=p4,push(symbol(SECRETX)),push(p1),subst(),Eval()),restore())},laguerre2=function(n){var i,o,ref,results;for(i=0,push_integer(1),push_integer(0),p6=pop(),results=[],i=o=0,ref=n;0<=ref?o<ref:o>ref;i=0<=ref?++o:--o)p5=p6,p6=pop(),push_integer(2*i+1),push(p1),subtract(),push(p3),add(),push(p6),multiply(),push_integer(i),push(p3),add(),push(p5),multiply(),subtract(),push_integer(i+1),results.push(divide());return results},Eval_lcm=function(){var results;for(p1=cdr(p1),push(car(p1)),Eval(),p1=cdr(p1),results=[];iscons(p1);)push(car(p1)),Eval(),lcm(),results.push(p1=cdr(p1));return results},lcm=function(){var prev_expanding;return prev_expanding=expanding,save(),yylcm(),restore(),expanding=prev_expanding},yylcm=function(){return expanding=1,p2=pop(),p1=pop(),push(p1),push(p2),gcd(),push(p1),divide(),push(p2),divide(),inverse()},Eval_leading=function(){return push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),(p1=pop())===symbol(NIL)?guess():push(p1),leading()},leading=function(){return save(),p2=pop(),p1=pop(),push(p1),push(p2),degree(),p3=pop(),push(p1),push(p2),push(p3),power(),divide(),push(p2),filter(),restore()},Eval_legendre=function(){return push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),push(cadddr(p1)),Eval(),(p2=pop())===symbol(NIL)?push_integer(0):push(p2),legendre()},legendre=function(){return save(),__legendre(),restore()},__legendre=function(){var m,n;return m=0,n=0,p3=pop(),p2=pop(),p1=pop(),push(p2),n=pop_integer(),push(p3),m=pop_integer(),n<0||isNaN(n)||m<0||isNaN(m)?(push_symbol(LEGENDRE),push(p1),push(p2),push(p3),void list(4)):(issymbol(p1)?__legendre2(n,m):(p4=p1,p1=symbol(SECRETX),__legendre2(n,m),p1=p4,push(symbol(SECRETX)),push(p1),subst(),Eval()),__legendre3(m))},__legendre2=function(n,m){var i,i1,o,ref,ref1,results;for(i=0,push_integer(1),push_integer(0),p6=pop(),i=o=0,ref=n;0<=ref?o<ref:o>ref;i=0<=ref?++o:--o)p5=p6,p6=pop(),push_integer(2*i+1),push(p1),multiply(),push(p6),multiply(),push_integer(i),push(p5),multiply(),subtract(),push_integer(i+1),divide();for(results=[],i=i1=0,ref1=m;0<=ref1?i1<ref1:i1>ref1;i=0<=ref1?++i1:--i1)push(p1),results.push(derivative());return results},__legendre3=function(m){if(0!==m)return car(p1)===symbol(COS)?(push(cadr(p1)),sine(),square()):car(p1)===symbol(SIN)?(push(cadr(p1)),cosine(),square()):(push_integer(1),push(p1),square(),subtract()),push_integer(m),push_rational(1,2),multiply(),power(),multiply(),m%2?negate():void 0},list=function(n){var listIterator,o,ref,results;for(listIterator=0,push(symbol(NIL)),results=[],listIterator=o=0,ref=n;0<=ref?o<ref:o>ref;listIterator=0<=ref?++o:--o)results.push(cons());return results},Eval_log=function(){return push(cadr(p1)),Eval(),logarithm()},logarithm=function(){return save(),yylog(),restore()},yylog=function(){var d;if(d=0,(p1=pop())!==symbol(E))if(equaln(p1,1))push_integer(0);else{if(isnegativenumber(p1))return push(p1),negate(),logarithm(),push(imaginaryunit),evaluatingAsFloats?push_double(Math.PI):push_symbol(PI),multiply(),void add();if(isdouble(p1))return d=Math.log(p1.d),void push_double(d);if(isfraction(p1))return push(p1),numerator(),logarithm(),push(p1),denominator(),logarithm(),void subtract();if(car(p1)===symbol(POWER))return push(caddr(p1)),push(cadr(p1)),logarithm(),void multiply();if(car(p1)!==symbol(MULTIPLY))return push_symbol(LOG),push(p1),list(2);for(push_integer(0),p1=cdr(p1);iscons(p1);)push(car(p1)),logarithm(),add(),p1=cdr(p1)}else push_integer(1)},Eval_lookup=function(){return p1=cadr(p1),iscons(p1)||cadr(p1).k!==SYM||(p1=get_binding(p1)),push(p1)},madd=function(a,b){return a.add(b)},msub=function(a,b){return a.subtract(b)},addf=function(a,b){return a.add(b)},subf=function(a,b){return a.subtract(b)},ucmp=function(a,b){return a.compareAbs(b)},mgcd=function(u,v){return bigInt.gcd(u,v)},new_string=function(s){return save(),(p1=new U).k=STR,p1.str=s,push(p1),restore()},out_of_memory=function(){return stop("out of memory")},push_zero_matrix=function(i,j){return push(alloc_tensor(i*j)),stack[tos-1].tensor.ndim=2,stack[tos-1].tensor.dim[0]=i,stack[tos-1].tensor.dim[1]=j},push_identity_matrix=function(n){var i,o,ref;for(push_zero_matrix(n,n),i=0,i=o=0,ref=n;0<=ref?o<ref:o>ref;i=0<=ref?++o:--o)stack[tos-1].tensor.elem[i*n+i]=one;return check_tensor_dimensions(stack[tos-1])},push_cars=function(p){var results;for(results=[];iscons(p);)push(car(p)),results.push(p=cdr(p));return results},peek=function(){return save(),p1=pop(),push(p1),restore()},equal=function(p1,p2){return 0===cmp_expr(p1,p2)?1:0},lessp=function(p1,p2){return cmp_expr(p1,p2)<0?1:0},sign=function(n){return n<0?-1:n>0?1:0},cmp_expr=function(p1,p2){var n;if(n=0,p1===p2)return 0;if(p1===symbol(NIL))return-1;if(p2===symbol(NIL))return 1;if(isNumericAtom(p1)&&isNumericAtom(p2))return sign(compare_numbers(p1,p2));if(isNumericAtom(p1))return-1;if(isNumericAtom(p2))return 1;if(isstr(p1)&&isstr(p2))return sign(strcmp(p1.str,p2.str));if(isstr(p1))return-1;if(isstr(p2))return 1;if(issymbol(p1)&&issymbol(p2))return sign(strcmp(get_printname(p1),get_printname(p2)));if(issymbol(p1))return-1;if(issymbol(p2))return 1;if(istensor(p1)&&istensor(p2))return compare_tensors(p1,p2);if(istensor(p1))return-1;if(istensor(p2))return 1;for(;iscons(p1)&&iscons(p2);){if(0!==(n=cmp_expr(car(p1),car(p2))))return n;p1=cdr(p1),p2=cdr(p2)}return iscons(p2)?-1:iscons(p1)?1:0},length=function(p){var n;for(n=0;iscons(p);)p=cdr(p),n++;return n},unique=function(p){return save(),p1=symbol(NIL),p2=symbol(NIL),unique_f(p),p2!==symbol(NIL)&&(p1=symbol(NIL)),p=p1,restore(),p},unique_f=function(p){if(isstr(p))p1===symbol(NIL)?p1=p:p!==p1&&(p2=p);else for(;iscons(p);){if(unique_f(car(p)),p2!==symbol(NIL))return;p=cdr(p)}},ssqrt=function(){return push_rational(1,2),power()},yyexpand=function(){var prev_expanding;return prev_expanding=expanding,expanding=1,Eval(),expanding=prev_expanding},exponential=function(){return push_symbol(E),swap(),power()},square=function(){return push_integer(2),power()},sort_stack=function(n){var h,subsetOfStack;return h=tos-n,(subsetOfStack=stack.slice(h,h+n)).sort(cmp_expr),stack=stack.slice(0,h).concat(subsetOfStack).concat(stack.slice(h+n))},$.equal=equal,$.length=length,mmul=function(a,b){return a.multiply(b)},mdiv=function(a,b){return a.divide(b)},mmod=function(a,b){return a.mod(b)},mdivrem=function(a,b){var toReturn;return[(toReturn=a.divmod(b)).quotient,toReturn.remainder]},Eval_mod=function(){return push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),mod()},mod=function(){var n;return n=0,save(),p2=pop(),p1=pop(),isZeroAtomOrTensor(p2)&&stop("mod function: divide by zero"),isNumericAtom(p1)&&isNumericAtom(p2)?(isdouble(p1)&&(push(p1),n=pop_integer(),isNaN(n)&&stop("mod function: cannot convert float value to integer"),push_integer(n),p1=pop()),isdouble(p2)&&(push(p2),n=pop_integer(),isNaN(n)&&stop("mod function: cannot convert float value to integer"),push_integer(n),p2=pop()),isinteger(p1)&&isinteger(p2)||stop("mod function: integer arguments expected"),(p3=new U).k=NUM,p3.q.a=mmod(p1.q.a,p2.q.a),p3.q.b=mint(1),push(p3),restore()):(push_symbol(MOD),push(p1),push(p2),list(3),void restore())},mpow=function(a,n){return a.pow(n)},mprime=function(n){return n.isProbablePrime()},mroot=function(n,index){var i,j,k,o,ref,x,y;for(n=n.abs(),i=0,j=0,k=0,0===index&&stop("root index is zero"),k=0;n.shiftRight(k)>0;)k++;if(0===k)return mint(0);for(k=Math.floor((k-1)/index),j=Math.floor(k/32+1),x=bigInt(j),i=o=0,ref=j;0<=ref?o<ref:o>ref;i=0<=ref?++o:--o)x=x.and(bigInt(1).shiftLeft(i).not());for(;k>=0;){switch(x=x.or(bigInt(1).shiftLeft(k)),y=mpow(x,index),mcmp(y,n)){case 0:return x;case 1:x=x.and(bigInt(1).shiftLeft(k).not())}k--}return 0},Eval_multiply=function(){var results;for(push(cadr(p1)),Eval(),p1=cddr(p1),results=[];iscons(p1);)push(car(p1)),Eval(),multiply(),results.push(p1=cdr(p1));return results},multiply=function(){return esc_flag&&stop("escape key stop"),isNumericAtom(stack[tos-2])&&isNumericAtom(stack[tos-1])?multiply_numbers():(save(),yymultiply(),restore())},yymultiply=function(){var h,i,n,o,ref,ref1;if(h=0,i=0,n=0,p2=pop(),p1=pop(),h=tos,isZeroAtom(p1)||isZeroAtom(p2))evaluatingAsFloats?push_double(0):push(zero);else if(expanding&&isadd(p1))for(p1=cdr(p1),evaluatingAsFloats?push_double(0):push(zero);iscons(p1);)push(car(p1)),push(p2),multiply(),add(),p1=cdr(p1);else if(expanding&&isadd(p2))for(p2=cdr(p2),evaluatingAsFloats?push_double(0):push(zero);iscons(p2);)push(p1),push(car(p2)),multiply(),add(),p2=cdr(p2);else{if(!istensor(p1)&&istensor(p2))return push(p1),push(p2),void scalar_times_tensor();if(istensor(p1)&&!istensor(p2))return push(p1),push(p2),void tensor_times_scalar();for(car(p1)===symbol(MULTIPLY)?p1=cdr(p1):(push(p1),list(1),p1=pop()),car(p2)===symbol(MULTIPLY)?p2=cdr(p2):(push(p2),list(1),p2=pop()),isNumericAtom(car(p1))&&isNumericAtom(car(p2))?(push(car(p1)),push(car(p2)),multiply_numbers(),p1=cdr(p1),p2=cdr(p2)):isNumericAtom(car(p1))?(push(car(p1)),p1=cdr(p1)):isNumericAtom(car(p2))?(push(car(p2)),p2=cdr(p2)):evaluatingAsFloats?push_double(1):push(one),parse_p1(),parse_p2();iscons(p1)&&iscons(p2);)if(caar(p1)!==symbol(OPERATOR)||caar(p2)!==symbol(OPERATOR))switch(cmp_expr(p3,p4)){case-1:push(car(p1)),p1=cdr(p1),parse_p1();break;case 1:push(car(p2)),p2=cdr(p2),parse_p2();break;case 0:combine_factors(h),p1=cdr(p1),p2=cdr(p2),parse_p1(),parse_p2();break;default:stop("internal error 2")}else push_symbol(OPERATOR),push(cdar(p1)),push(cdar(p2)),append(),cons(),p1=cdr(p1),p2=cdr(p2),parse_p1(),parse_p2();for(;iscons(p1);)push(car(p1)),p1=cdr(p1);for(;iscons(p2);)push(car(p2)),p2=cdr(p2);if(__normalize_radical_factors(h),expanding)for(i=o=ref=h,ref1=tos;ref<=ref1?o<ref1:o>ref1;i=ref<=ref1?++o:--o)if(isadd(stack[i]))return void multiply_all(tos-h);if(1!==(n=tos-h)){if(!isrational(stack[h])||!equaln(stack[h],1))return list(n),p7=pop(),push_symbol(MULTIPLY),push(p7),cons();2===n?(p7=pop(),pop(),push(p7)):(stack[h]=symbol(MULTIPLY),list(n))}}},parse_p1=function(){if(p3=car(p1),p5=evaluatingAsFloats?one_as_double:one,car(p3)===symbol(POWER))return p5=caddr(p3),p3=cadr(p3)},parse_p2=function(){if(p4=car(p2),p6=evaluatingAsFloats?one_as_double:one,car(p4)===symbol(POWER))return p6=caddr(p4),p4=cadr(p4)},combine_factors=function(h){return push(p4),push(p5),push(p6),add(),power(),p7=pop(),isNumericAtom(p7)?(push(stack[h]),push(p7),multiply_numbers(),stack[h]=pop()):car(p7)===symbol(MULTIPLY)&&isNumericAtom(cadr(p7))&&cdddr(p7)===symbol(NIL)?(push(stack[h]),push(cadr(p7)),multiply_numbers(),stack[h]=pop(),push(caddr(p7))):push(p7)},gp=[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,1,-6,-7,-8,-3,-4,-5,13,14,15,-16,9,10,11,-12],[0,0,6,-1,-11,10,-2,-15,14,12,-5,4,-9,16,-8,7,-13],[0,0,7,11,-1,-9,15,-2,-13,5,12,-3,-10,8,16,-6,-14],[0,0,8,-10,9,-1,-14,13,-2,-4,3,12,-11,-7,6,16,-15],[0,0,3,2,15,-14,1,11,-10,16,-8,7,13,12,-5,4,9],[0,0,4,-15,2,13,-11,1,9,8,16,-6,14,5,12,-3,10],[0,0,5,14,-13,2,10,-9,1,-7,6,16,15,-4,3,12,11],[0,0,13,12,-5,4,16,-8,7,-1,-11,10,-3,-2,-15,14,-6],[0,0,14,5,12,-3,8,16,-6,11,-1,-9,-4,15,-2,-13,-7],[0,0,15,-4,3,12,-7,6,16,-10,9,-1,-5,-14,13,-2,-8],[0,0,16,-9,-10,-11,-13,-14,-15,-3,-4,-5,1,-6,-7,-8,2],[0,0,9,-16,8,-7,-12,5,-4,-2,-15,14,6,-1,-11,10,3],[0,0,10,-8,-16,6,-5,-12,3,15,-2,-13,7,11,-1,-9,4],[0,0,11,7,-6,-16,4,-3,-12,-14,13,-2,8,-10,9,-1,5],[0,0,12,13,14,15,9,10,11,-6,-7,-8,-2,-3,-4,-5,-1]],combine_gammas=function(h){var n;if((n=gp[Math.floor(p1.gamma)][Math.floor(p2.gamma)])<0&&(n=-n,push(stack[h]),negate(),stack[h]=pop()),n>1)return push(_gamma[n])},multiply_noexpand=function(){var prev_expanding;return prev_expanding=expanding,expanding=0,multiply(),expanding=prev_expanding},multiply_all=function(n){var h,i,o,ref;if(i=0,1!==n){if(0!==n){for(push(stack[h=tos-n]),i=o=1,ref=n;1<=ref?o<ref:o>ref;i=1<=ref?++o:--o)push(stack[h+i]),multiply();return stack[h]=pop(),moveTos(h+1)}push(evaluatingAsFloats?one_as_double:one)}},multiply_all_noexpand=function(n){var prev_expanding;return prev_expanding=expanding,expanding=0,multiply_all(n),expanding=prev_expanding},divide=function(){return isNumericAtom(stack[tos-2])&&isNumericAtom(stack[tos-1])?divide_numbers():(inverse(),multiply())},inverse=function(){return isNumericAtom(stack[tos-1])?invert_number():(push_integer(-1),power())},reciprocate=function(){return inverse()},negate=function(){return isNumericAtom(stack[tos-1])?negate_number():(evaluatingAsFloats?push_double(-1):push_integer(-1),multiply())},negate_expand=function(){var prev_expanding;return prev_expanding=expanding,expanding=1,negate(),expanding=prev_expanding},negate_noexpand=function(){var prev_expanding;return prev_expanding=expanding,expanding=0,negate(),expanding=prev_expanding},__normalize_radical_factors=function(h){var i,i1,j1,o,ref,ref1,ref2,ref3,ref4,ref5;if(i=0,!(isplusone(stack[h])||isminusone(stack[h])||isdouble(stack[h]))){for(i=o=ref=h+1,ref1=tos;(ref<=ref1?o<ref1:o>ref1)&&!__is_radical_number(stack[i]);i=ref<=ref1?++o:--o);if(i!==tos){for(save(),push(stack[h]),mp_numerator(),p1=pop(),i=i1=ref2=h+1,ref3=tos;(ref2<=ref3?i1<ref3:i1>ref3)&&(!isplusone(p1)&&!isminusone(p1));i=ref2<=ref3?++i1:--i1)__is_radical_number(stack[i])&&(p3=cadr(stack[i]),p4=caddr(stack[i]),isnegativenumber(p4)&&(push(p1),push(p3),divide(),p5=pop(),isinteger(p5)&&(p1=p5,push_symbol(POWER),push(p3),push(evaluatingAsFloats?one_as_double:one),push(p4),add(),list(3),stack[i]=pop())));for(push(stack[h]),mp_denominator(),p2=pop(),i=j1=ref4=h+1,ref5=tos;(ref4<=ref5?j1<ref5:j1>ref5)&&!isplusone(p2);i=ref4<=ref5?++j1:--j1)if(__is_radical_number(stack[i])&&(p3=cadr(stack[i]),p4=caddr(stack[i]),!isnegativenumber(p4)&&(push(p2),push(p3),divide(),p5=pop(),isinteger(p5)))){if(p2=p5,push_symbol(POWER),push(p3),push(p4),push(one),subtract(),dontCreateNewRadicalsInDenominatorWhenEvalingMultiplication&&isinteger(p3)&&!isinteger(stack[tos-1])&&isnegativenumber(stack[tos-1])){pop(),pop(),pop(),push(p1),push(p3),divide(),p1=pop();break}list(3),stack[i]=pop()}return push(p1),push(p2),divide(),stack[h]=pop(),restore()}}},__is_radical_number=function(p){return car(p)===symbol(POWER)&&isNumericAtom(cadr(p))&&isNumericAtom(caddr(p))&&!isminusone(cadr(p))?1:0},NROOTS_YMAX=101,NROOTS_DELTA=1e-6,NROOTS_EPSILON=1e-9,NROOTS_ABS=function(z){return Math.sqrt(z.r*z.r+z.i*z.i)},theRandom=0,NROOTS_RANDOM=function(){return 4*Math.random()-2},numericRootOfPolynomial=function(){function numericRootOfPolynomial(){}return numericRootOfPolynomial.prototype.r=0,numericRootOfPolynomial.prototype.i=0,numericRootOfPolynomial}(),nroots_a=new numericRootOfPolynomial,nroots_b=new numericRootOfPolynomial,nroots_x=new numericRootOfPolynomial,nroots_y=new numericRootOfPolynomial,nroots_fa=new numericRootOfPolynomial,nroots_fb=new numericRootOfPolynomial,nroots_dx=new numericRootOfPolynomial,nroots_df=new numericRootOfPolynomial,nroots_c=[],initNRoots=o=0,ref=NROOTS_YMAX;0<=ref?o<ref:o>ref;initNRoots=0<=ref?++o:--o)nroots_c[initNRoots]=new numericRootOfPolynomial;for(Eval_nroots=function(){var h,i,i1,j1,k,l1,n,ref1,ref2,ref3;for(h=0,i=0,k=0,n=0,push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),(p2=pop())===symbol(NIL)?guess():push(p2),p2=pop(),p1=pop(),ispolyexpandedform(p1,p2)||stop("nroots: polynomial?"),h=tos,push(p1),push(p2),(n=coeff())>NROOTS_YMAX&&stop("nroots: degree?"),i=i1=0,ref1=n;0<=ref1?i1<ref1:i1>ref1;i=0<=ref1?++i1:--i1)push(stack[h+i]),real(),yyfloat(),Eval(),p1=pop(),push(stack[h+i]),imag(),yyfloat(),Eval(),p2=pop(),isdouble(p1)&&isdouble(p2)||stop("nroots: coefficients?"),nroots_c[i].r=p1.d,nroots_c[i].i=p2.d;for(moveTos(h),monic(n),k=j1=ref2=n;j1>1;k=j1+=-1)findroot(k),Math.abs(nroots_a.r)<NROOTS_DELTA&&(nroots_a.r=0),Math.abs(nroots_a.i)<NROOTS_DELTA&&(nroots_a.i=0),push_double(nroots_a.r),push_double(nroots_a.i),push(imaginaryunit),multiply(),add(),NROOTS_divpoly(k);if((n=tos-h)>1){for(sort_stack(n),(p1=alloc_tensor(n)).tensor.ndim=1,p1.tensor.dim[0]=n,i=l1=0,ref3=n;0<=ref3?l1<ref3:l1>ref3;i=0<=ref3?++l1:--l1)p1.tensor.elem[i]=stack[h+i];return moveTos(h),push(p1)}},monic=function(n){var i1,k,ref1,t;for(k=0,t=0,nroots_y.r=nroots_c[n-1].r,nroots_y.i=nroots_c[n-1].i,t=nroots_y.r*nroots_y.r+nroots_y.i*nroots_y.i,k=i1=0,ref1=n-1;0<=ref1?i1<ref1:i1>ref1;k=0<=ref1?++i1:--i1)nroots_c[k].r=(nroots_c[k].r*nroots_y.r+nroots_c[k].i*nroots_y.i)/t,nroots_c[k].i=(nroots_c[k].i*nroots_y.r-nroots_c[k].r*nroots_y.i)/t;return nroots_c[n-1].r=1,nroots_c[n-1].i=0},findroot=function(n){var i1,j,j1,k,nrabs,t;if(j=0,k=0,t=0,NROOTS_ABS(nroots_c[0])<NROOTS_DELTA)return nroots_a.r=0,void(nroots_a.i=0);for(j=i1=0;i1<100;j=++i1)for(nroots_a.r=NROOTS_RANDOM(),nroots_a.i=NROOTS_RANDOM(),compute_fa(n),nroots_b.r=nroots_a.r,nroots_b.i=nroots_a.i,nroots_fb.r=nroots_fa.r,nroots_fb.i=nroots_fa.i,nroots_a.r=NROOTS_RANDOM(),nroots_a.i=NROOTS_RANDOM(),k=j1=0;j1<1e3;k=++j1){if(compute_fa(n),nrabs=NROOTS_ABS(nroots_fa),DEBUG&&console.log("nrabs: "+nrabs),nrabs<NROOTS_EPSILON)return;if(NROOTS_ABS(nroots_fa)<NROOTS_ABS(nroots_fb)&&(nroots_x.r=nroots_a.r,nroots_x.i=nroots_a.i,nroots_a.r=nroots_b.r,nroots_a.i=nroots_b.i,nroots_b.r=nroots_x.r,nroots_b.i=nroots_x.i,nroots_x.r=nroots_fa.r,nroots_x.i=nroots_fa.i,nroots_fa.r=nroots_fb.r,nroots_fa.i=nroots_fb.i,nroots_fb.r=nroots_x.r,nroots_fb.i=nroots_x.i),nroots_dx.r=nroots_b.r-nroots_a.r,nroots_dx.i=nroots_b.i-nroots_a.i,nroots_df.r=nroots_fb.r-nroots_fa.r,nroots_df.i=nroots_fb.i-nroots_fa.i,0===(t=nroots_df.r*nroots_df.r+nroots_df.i*nroots_df.i))break;nroots_y.r=(nroots_dx.r*nroots_df.r+nroots_dx.i*nroots_df.i)/t,nroots_y.i=(nroots_dx.i*nroots_df.r-nroots_dx.r*nroots_df.i)/t,nroots_a.r=nroots_b.r-(nroots_y.r*nroots_fb.r-nroots_y.i*nroots_fb.i),nroots_a.i=nroots_b.i-(nroots_y.r*nroots_fb.i+nroots_y.i*nroots_fb.r)}return stop("nroots: convergence error")},compute_fa=function(n){var i1,k,ref1,results,t;for(k=0,t=0,nroots_x.r=nroots_a.r,nroots_x.i=nroots_a.i,nroots_fa.r=nroots_c[0].r+nroots_c[1].r*nroots_x.r-nroots_c[1].i*nroots_x.i,nroots_fa.i=nroots_c[0].i+nroots_c[1].r*nroots_x.i+nroots_c[1].i*nroots_x.r,results=[],k=i1=2,ref1=n;2<=ref1?i1<ref1:i1>ref1;k=2<=ref1?++i1:--i1)t=nroots_a.r*nroots_x.r-nroots_a.i*nroots_x.i,nroots_x.i=nroots_a.r*nroots_x.i+nroots_a.i*nroots_x.r,nroots_x.r=t,nroots_fa.r+=nroots_c[k].r*nroots_x.r-nroots_c[k].i*nroots_x.i,results.push(nroots_fa.i+=nroots_c[k].r*nroots_x.i+nroots_c[k].i*nroots_x.r);return results},NROOTS_divpoly=function(n){var i1,j1,k,ref1,ref2,results;for(k=0,k=i1=ref1=n-1;ref1<=0?i1<0:i1>0;k=ref1<=0?++i1:--i1)nroots_c[k-1].r+=nroots_c[k].r*nroots_a.r-nroots_c[k].i*nroots_a.i,nroots_c[k-1].i+=nroots_c[k].i*nroots_a.r+nroots_c[k].r*nroots_a.i;for(NROOTS_ABS(nroots_c[0])>NROOTS_DELTA&&stop("nroots: residual error"),results=[],k=j1=0,ref2=n-1;0<=ref2?j1<ref2:j1>ref2;k=0<=ref2?++j1:--j1)nroots_c[k].r=nroots_c[k+1].r,results.push(nroots_c[k].i=nroots_c[k+1].i);return results},Eval_numerator=function(){return push(cadr(p1)),Eval(),numerator()},numerator=function(){var h,theArgument;if(h=0,theArgument=pop(),car(theArgument)===symbol(ADD)&&(push(theArgument),rationalize(),theArgument=pop()),car(theArgument)!==symbol(MULTIPLY)||isplusone(car(cdr(theArgument))))return isrational(theArgument)?(push(theArgument),mp_numerator()):car(theArgument)===symbol(POWER)&&isnegativeterm(caddr(theArgument))?push(one):push(theArgument);for(h=tos,theArgument=cdr(theArgument);iscons(theArgument);)push(car(theArgument)),numerator(),theArgument=cdr(theArgument);return multiply_all(tos-h)},Eval_outer=function(){var results;for(p1=cdr(p1),push(car(p1)),Eval(),p1=cdr(p1),results=[];iscons(p1);)push(car(p1)),Eval(),outer(),results.push(p1=cdr(p1));return results},outer=function(){return save(),p2=pop(),p1=pop(),istensor(p1)&&istensor(p2)?yyouter():(push(p1),push(p2),istensor(p1)?tensor_times_scalar():istensor(p2)?scalar_times_tensor():multiply()),restore()},yyouter=function(){var i,i1,j,j1,k,l1,m1,ndim,nelem,ref1,ref2,ref3,ref4;for(i=0,j=0,k=0,ndim=0,nelem=0,(ndim=p1.tensor.ndim+p2.tensor.ndim)>MAXDIM&&stop("outer: rank of result exceeds maximum"),nelem=p1.tensor.nelem*p2.tensor.nelem,(p3=alloc_tensor(nelem)).tensor.ndim=ndim,i=i1=0,ref1=p1.tensor.ndim;0<=ref1?i1<ref1:i1>ref1;i=0<=ref1?++i1:--i1)p3.tensor.dim[i]=p1.tensor.dim[i];for(j=i,i=j1=0,ref2=p2.tensor.ndim;0<=ref2?j1<ref2:j1>ref2;i=0<=ref2?++j1:--j1)p3.tensor.dim[j+i]=p2.tensor.dim[i];for(k=0,i=l1=0,ref3=p1.tensor.nelem;0<=ref3?l1<ref3:l1>ref3;i=0<=ref3?++l1:--l1)for(j=m1=0,ref4=p2.tensor.nelem;0<=ref4?m1<ref4:m1>ref4;j=0<=ref4?++m1:--m1)push(p1.tensor.elem[i]),push(p2.tensor.elem[j]),multiply(),p3.tensor.elem[k++]=pop();return push(p3)},partition=function(){for(save(),p2=pop(),p1=pop(),push_integer(1),p3=pop(),p4=p3,p1=cdr(p1);iscons(p1);)Find(car(p1),p2)?(push(p4),push(car(p1)),multiply(),p4=pop()):(push(p3),push(car(p1)),multiply(),p3=pop()),p1=cdr(p1);return push(p3),push(p4),restore()},Eval_silentpattern=function(){return Eval_pattern(),pop(),push_symbol(NIL)},Eval_pattern=function(){var firstArgument,patternPosition,secondArgument,stringKey,thirdArgument;return iscons(cdr(p1))||stop("pattern needs at least a template and a transformed version"),firstArgument=car(cdr(p1)),(secondArgument=car(cdr(cdr(p1))))===symbol(NIL)&&stop("pattern needs at least a template and a transformed version"),thirdArgument=iscons(cdr(cdr(p1)))?car(cdr(cdr(cdr(p1)))):symbol(NIL),equal(firstArgument,secondArgument)&&stop("recursive pattern"),stringKey="template: "+print_list(firstArgument),stringKey+=" tests: "+print_list(thirdArgument),DEBUG&&console.log("pattern stringkey: "+stringKey),-1===(patternPosition=userSimplificationsInStringForm.indexOf(stringKey))?(userSimplificationsInStringForm.push(stringKey),userSimplificationsInListForm.push(cdr(p1))):(DEBUG&&console.log("pattern already exists, replacing. "+cdr(p1)),userSimplificationsInStringForm[patternPosition]=stringKey,userSimplificationsInListForm[patternPosition]=cdr(p1)),push_symbol(PATTERN),push(cdr(p1)),list(2)},do_clearPatterns=function(){return userSimplificationsInListForm=[],userSimplificationsInStringForm=[]},Eval_clearpatterns=function(){return do_clearPatterns(),push_symbol(NIL)},Eval_patternsinfo=function(){var patternsinfoToBePrinted;return""!==(patternsinfoToBePrinted=patternsinfo())?new_string(patternsinfoToBePrinted):push_symbol(NIL)},patternsinfo=function(){var i,i1,len,patternsinfoToBePrinted;for(patternsinfoToBePrinted="",i1=0,len=userSimplificationsInListForm.length;i1<len;i1++)i=userSimplificationsInListForm[i1],patternsinfoToBePrinted+=userSimplificationsInListForm+"\n";return patternsinfoToBePrinted},Eval_polar=function(){return push(cadr(p1)),Eval(),polar()},polar=function(){return evaluatingPolar++,save(),p1=pop(),push(p1),abs(),push(imaginaryunit),push(p1),arg(),multiply(),exponential(),multiply(),evaluatingPolar--,restore()},n_factor_number=0,factor_number=function(){var h;return h=0,save(),p1=pop(),equaln(p1,0)||equaln(p1,1)||equaln(p1,-1)?(push(p1),void restore()):(n_factor_number=p1.q.a,h=tos,factor_a(),tos-h>1&&(list(tos-h),push_symbol(MULTIPLY),swap(),cons()),restore())},factor_a=function(){var i1,k;for(k=0,n_factor_number.isNegative()&&(n_factor_number=setSignTo(n_factor_number,1),push_integer(-1)),k=i1=0;i1<1e4;k=++i1)if(try_kth_prime(k),0===n_factor_number.compare(1))return;return factor_b()},try_kth_prime=function(k){var count,d,q,r,ref1;for(count=0,d=mint(primetab[k]),count=0;;){if(0===n_factor_number.compare(1))return void(count&&push_factor(d,count));if(q=(ref1=mdivrem(n_factor_number,d))[0],!(r=ref1[1]).isZero())break;count++,n_factor_number=q}if(count&&push_factor(d,count),-1===mcmp(q,d))return push_factor(n_factor_number,1),n_factor_number=mint(1)},factor_b=function(){var bigint_one,g,k,l,t,x,xprime;for(k=0,l=0,bigint_one=mint(1),x=mint(5),xprime=mint(2),k=1,l=1;;){if(mprime(n_factor_number))return push_factor(n_factor_number,1),0;for(;;){if(esc_flag&&stop("esc"),t=msub(xprime,x),t=setSignTo(t,1),g=mgcd(t,n_factor_number),!MEQUAL(g,1)){if(push_factor(g,1),0===mcmp(g,n_factor_number))return-1;t=mdiv(n_factor_number,g),x=t=mmod(x,n_factor_number=t),xprime=t=mmod(xprime,n_factor_number);break}0==--k&&(xprime=x,k=l*=2),t=mmul(x,x),x=madd(t,bigint_one),x=t=mmod(x,n_factor_number)}}},push_factor=function(d,count){if((p1=new U).k=NUM,p1.q.a=d,p1.q.b=mint(1),push(p1),count>1)return push_symbol(POWER),swap(),(p1=new U).k=NUM,p1.q.a=mint(count),p1.q.b=mint(1),push(p1),list(3)},DEBUG_POWER=!1,Eval_power=function(){return push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),power()},power=function(){return save(),yypower(),restore()},yypower=function(){var b_isEven_and_c_isItsInverse,hopefullySimplified,inputBase,inputExp,isThisOne,is_a_moreThanZero,n;if(n=0,p2=pop(),p1=pop(),inputExp=p2,inputBase=p1,DEBUG_POWER&&console.log("POWER: "+p1+" ^ "+p2),equal(p1,one)||isZeroAtomOrTensor(p2))return evaluatingAsFloats?push_double(1):push(one),void(DEBUG_POWER&&console.log("   power of "+inputBase+" ^ "+inputExp+": "+stack[tos-1]));if(equal(p2,one))return push(p1),void(DEBUG_POWER&&console.log("   power of "+inputBase+" ^ "+inputExp+": "+stack[tos-1]));if(isminusone(p1)&&isminusone(p2))return evaluatingAsFloats?push_double(1):push(one),negate(),void(DEBUG_POWER&&console.log("   power of "+inputBase+" ^ "+inputExp+": "+stack[tos-1]));if(isminusone(p1)&&isoneovertwo(p2))return push(imaginaryunit),void(DEBUG_POWER&&console.log("   power of "+inputBase+" ^ "+inputExp+": "+stack[tos-1]));if(isminusone(p1)&&isminusoneovertwo(p2))return push(imaginaryunit),negate(),void(DEBUG_POWER&&console.log("   power of "+inputBase+" ^ "+inputExp+": "+stack[tos-1]));if(isminusone(p1)&&!isdouble(p1)&&isrational(p2)&&!isinteger(p2)&&ispositivenumber(p2)&&!evaluatingAsFloats)return DEBUG_POWER&&console.log("   power: -1 ^ rational"),DEBUG_POWER&&console.log(" trick: p2.q.a , p2.q.b "+p2.q.a+" , "+p2.q.b),p2.q.a<p2.q.b?(push_symbol(POWER),push(p1),push(p2),list(3)):(push_symbol(MULTIPLY),push(p1),push_symbol(POWER),push(p1),push_rational(p2.q.a.mod(p2.q.b),p2.q.b),list(3),list(3),DEBUG_POWER&&console.log(" trick applied : "+stack[tos-1])),rect(),void(DEBUG_POWER&&console.log("   power of "+inputBase+" ^ "+inputExp+": "+stack[tos-1]));if(isrational(p1)&&isrational(p2))return DEBUG_POWER&&console.log("   power: isrational(p1) && isrational(p2)"),push(p1),push(p2),qpow(),void(DEBUG_POWER&&console.log("   power of "+inputBase+" ^ "+inputExp+": "+stack[tos-1]));if(isNumericAtom(p1)&&isNumericAtom(p2))return DEBUG_POWER&&console.log("   power: both base and exponent are either rational or double "),DEBUG_POWER&&console.log("POWER - isNumericAtom(p1) && isNumericAtom(p2)"),push(p1),push(p2),dpow(),void(DEBUG_POWER&&console.log("   power of "+inputBase+" ^ "+inputExp+": "+stack[tos-1]));if(istensor(p1))return DEBUG_POWER&&console.log("   power: istensor(p1) "),power_tensor(),void(DEBUG_POWER&&console.log("   power of "+inputBase+" ^ "+inputExp+": "+stack[tos-1]));if(car(p1)===symbol(ABS)&&iseveninteger(p2)&&!isZeroAtomOrTensor(get_binding(symbol(ASSUME_REAL_VARIABLES))))return DEBUG_POWER&&console.log("   power: even power of absolute of real value "),push(cadr(p1)),push(p2),power(),void(DEBUG_POWER&&console.log("   power of "+inputBase+" ^ "+inputExp+": "+stack[tos-1]));if(p1===symbol(E)&&car(p2)===symbol(LOG))return push(cadr(p2)),void(DEBUG_POWER&&console.log("   power of "+inputBase+" ^ "+inputExp+": "+stack[tos-1]));if(p1===symbol(E)&&isdouble(p2))return DEBUG_POWER&&console.log("   power: p1 == symbol(E) && isdouble(p2) "),push_double(Math.exp(p2.d)),void(DEBUG_POWER&&console.log("   power of "+inputBase+" ^ "+inputExp+": "+stack[tos-1]));if(p1===symbol(E)&&0!==Find(p2,imaginaryunit)&&0!==Find(p2,symbol(PI))&&!evaluatingPolar&&(push_symbol(POWER),push(p1),push(p2),list(3),DEBUG_POWER&&console.log("   power: turning complex exponential to rect: "+stack[tos-1]),rect(),hopefullySimplified=pop(),0===Find(hopefullySimplified,symbol(PI))))return DEBUG_POWER&&console.log("   power: turned complex exponential to rect: "+hopefullySimplified),void push(hopefullySimplified);if(car(p1)===symbol(MULTIPLY)&&isinteger(p2)){for(DEBUG_POWER&&console.log("   power: (a * b) ^ c  ->  (a ^ c) * (b ^ c) "),p1=cdr(p1),push(car(p1)),push(p2),power(),p1=cdr(p1);iscons(p1);)push(car(p1)),push(p2),power(),multiply(),p1=cdr(p1);DEBUG_POWER&&console.log("   power of "+inputBase+" ^ "+inputExp+": "+stack[tos-1])}else{if(is_a_moreThanZero=!1,isNumericAtom(cadr(p1))&&(is_a_moreThanZero=sign(compare_numbers(cadr(p1),zero))),car(p1)===symbol(POWER)&&(isinteger(p2)||is_a_moreThanZero))return push(cadr(p1)),push(caddr(p1)),push(p2),multiply(),power(),void(DEBUG_POWER&&console.log("   power of "+inputBase+" ^ "+inputExp+": "+stack[tos-1]));if(b_isEven_and_c_isItsInverse=!1,iseveninteger(caddr(p1))&&(push(caddr(p1)),push(p2),multiply(),isThisOne=pop(),isone(isThisOne)&&(b_isEven_and_c_isItsInverse=!0)),car(p1)===symbol(POWER)&&b_isEven_and_c_isItsInverse)return DEBUG_POWER&&console.log("   power: car(p1) == symbol(POWER) && b_isEven_and_c_isItsInverse "),push(cadr(p1)),abs(),void(DEBUG_POWER&&console.log("   power of "+inputBase+" ^ "+inputExp+": "+stack[tos-1]));if(expanding&&isadd(p1)&&isNumericAtom(p2)&&(push(p2),(n=pop_integer())>1&&!isNaN(n)))return DEBUG_POWER&&console.log("   power: expanding && isadd(p1) && isNumericAtom(p2) "),power_sum(n),void(DEBUG_POWER&&console.log("   power of "+inputBase+" ^ "+inputExp+": "+stack[tos-1]));if(1===trigmode&&car(p1)===symbol(SIN)&&iseveninteger(p2))return DEBUG_POWER&&console.log("   power: trigmode == 1 && car(p1) == symbol(SIN) && iseveninteger(p2) "),push_integer(1),push(cadr(p1)),cosine(),push_integer(2),power(),subtract(),push(p2),push_rational(1,2),multiply(),power(),void(DEBUG_POWER&&console.log("   power of "+inputBase+" ^ "+inputExp+": "+stack[tos-1]));if(2===trigmode&&car(p1)===symbol(COS)&&iseveninteger(p2))return DEBUG_POWER&&console.log("   power: trigmode == 2 && car(p1) == symbol(COS) && iseveninteger(p2) "),push_integer(1),push(cadr(p1)),sine(),push_integer(2),power(),subtract(),push(p2),push_rational(1,2),multiply(),power(),void(DEBUG_POWER&&console.log("   power of "+inputBase+" ^ "+inputExp+": "+stack[tos-1]));if(iscomplexnumber(p1)){if(DEBUG_POWER&&console.log(" power - handling the case (a + ib) ^ n"),isinteger(p2))return push(p1),conjugate(),p3=pop(),push(p3),push(p3),push(p1),multiply(),divide(),isone(p2)||(push(p2),negate(),power()),void(DEBUG_POWER&&console.log("   power of "+inputBase+" ^ "+inputExp+": "+stack[tos-1]));if(isNumericAtom(p2))return push(p1),abs(),push(p2),power(),push_integer(-1),push(p1),arg(),push(p2),multiply(),evaluatingAsFloats||iscomplexnumberdouble(p1)&&isdouble(p2)?push_double(Math.PI):push(symbol(PI)),divide(),power(),multiply(),avoidCalculatingPowersIntoArctans&&Find(stack[tos-1],symbol(ARCTAN))&&(pop(),push_symbol(POWER),push(p1),push(p2),list(3)),void(DEBUG_POWER&&console.log("   power of "+inputBase+" ^ "+inputExp+": "+stack[tos-1]))}if(!simplify_polar())return DEBUG_POWER&&console.log("   power: nothing can be done "),push_symbol(POWER),push(p1),push(p2),list(3),DEBUG_POWER?console.log("   power of "+inputBase+" ^ "+inputExp+": "+stack[tos-1]):void 0;DEBUG_POWER&&console.log("   power: using simplify_polar")}},power_sum=function(n){var a,i,i1,j,j1,k,l1,ref1,ref2,ref3;for(a=[],i=0,j=0,k=0,k=length(p1)-1,push_frame(k*(n+1)),p1=cdr(p1),i=i1=0,ref1=k;0<=ref1?i1<ref1:i1>ref1;i=0<=ref1?++i1:--i1){for(j=j1=0,ref2=n;0<=ref2?j1<=ref2:j1>=ref2;j=0<=ref2?++j1:--j1)push(car(p1)),push_integer(j),power(),stack[frame+i*(n+1)+j]=pop();p1=cdr(p1)}for(push_integer(n),factorial(),p1=pop(),i=l1=0,ref3=k;0<=ref3?l1<ref3:l1>ref3;i=0<=ref3?++l1:--l1)a[i]=0;return push(zero),multinomial_sum(k,n,a,0,n),pop_frame(k*(n+1))},multinomial_sum=function(k,n,a,i,m){var i1,j,j1,l1,ref1,ref2,ref3;if(j=0,!(i<k-1)){for(a[i]=m,push(p1),j=j1=0,ref2=k;0<=ref2?j1<ref2:j1>ref2;j=0<=ref2?++j1:--j1)push_integer(a[j]),factorial(),divide();for(j=l1=0,ref3=k;0<=ref3?l1<ref3:l1>ref3;j=0<=ref3?++l1:--l1)push(stack[frame+j*(n+1)+a[j]]),multiply();return add()}for(j=i1=0,ref1=m;0<=ref1?i1<=ref1:i1>=ref1;j=0<=ref1?++i1:--i1)a[i]=j,multinomial_sum(k,n,a,i+1,m-j)},simplify_polar=function(){var doNothing,n;switch(n=0,n=isquarterturn(p2)){case 0:doNothing=1;break;case 1:return push_integer(1),1;case 2:return push_integer(-1),1;case 3:return push(imaginaryunit),1;case 4:return push(imaginaryunit),negate(),1}if(car(p2)===symbol(ADD)){for(p3=cdr(p2);iscons(p3)&&!(n=isquarterturn(car(p3)));)p3=cdr(p3);switch(n){case 0:return 0;case 1:push_integer(1);break;case 2:push_integer(-1);break;case 3:push(imaginaryunit);break;case 4:push(imaginaryunit),negate()}return push(p2),push(car(p3)),subtract(),exponential(),multiply(),1}return 0},Eval_prime=function(){return push(cadr(p1)),Eval(),prime()},prime=function(){var n;return n=0,((n=pop_integer())<1||n>MAXPRIMETAB)&&stop("prime: Argument out of range."),n=primetab[n-1],push_integer(n)},power_str="^",codeGen=!1,Eval_print=function(){return stringsEmittedByUserPrintouts+=_print(cdr(p1),printMode),push(symbol(NIL))},Eval_print2dascii=function(){return stringsEmittedByUserPrintouts+=_print(cdr(p1),PRINTMODE_2DASCII),push(symbol(NIL))},Eval_printcomputer=function(){return stringsEmittedByUserPrintouts+=_print(cdr(p1),PRINTMODE_COMPUTER),push(symbol(NIL))},Eval_printlatex=function(){return stringsEmittedByUserPrintouts+=_print(cdr(p1),PRINTMODE_LATEX),push(symbol(NIL))},Eval_printhuman=function(){var original_test_flag;return original_test_flag=test_flag,test_flag=0,stringsEmittedByUserPrintouts+=_print(cdr(p1),PRINTMODE_HUMAN),test_flag=original_test_flag,push(symbol(NIL))},Eval_printlist=function(){var beenPrinted;return beenPrinted=_print(cdr(p1),PRINTMODE_LIST),stringsEmittedByUserPrintouts+=beenPrinted,push(symbol(NIL))},_print=function(p,passedPrintMode){var accumulator,origPrintMode;for(accumulator="";iscons(p);)push(car(p)),Eval(),p2=pop(),origPrintMode=printMode,passedPrintMode===PRINTMODE_COMPUTER?(printMode=PRINTMODE_COMPUTER,accumulator=printline(p2),rememberPrint(accumulator,LAST_FULL_PRINT)):passedPrintMode===PRINTMODE_HUMAN?(printMode=PRINTMODE_HUMAN,accumulator=printline(p2),rememberPrint(accumulator,LAST_PLAIN_PRINT)):passedPrintMode===PRINTMODE_2DASCII?(printMode=PRINTMODE_2DASCII,accumulator=print2dascii(p2),rememberPrint(accumulator,LAST_2DASCII_PRINT)):passedPrintMode===PRINTMODE_LATEX?(printMode=PRINTMODE_LATEX,accumulator=printline(p2),rememberPrint(accumulator,LAST_LATEX_PRINT)):passedPrintMode===PRINTMODE_LIST&&(printMode=PRINTMODE_LIST,accumulator=print_list(p2),rememberPrint(accumulator,LAST_LIST_PRINT)),printMode=origPrintMode,p=cdr(p);return DEBUG&&console.log("emttedString from display: "+stringsEmittedByUserPrintouts),accumulator},rememberPrint=function(theString,theTypeOfPrint){var parsedString;return scan('"'+theString+'"'),parsedString=pop(),set_binding(symbol(theTypeOfPrint),parsedString)},print_str=function(s){return DEBUG&&console.log("emttedString from print_str: "+stringsEmittedByUserPrintouts),s},print_char=function(c){return c},collectLatexStringFromReturnValue=function(p){var origPrintMode,originalCodeGen,returnedString;return origPrintMode=printMode,printMode=PRINTMODE_LATEX,originalCodeGen=codeGen,codeGen=!1,returnedString=(returnedString=print_expr(p)).replace(/_/g,"\\_"),printMode=origPrintMode,codeGen=originalCodeGen,DEBUG&&console.log("emttedString from collectLatexStringFromReturnValue: "+stringsEmittedByUserPrintouts),returnedString},printline=function(p){var accumulator;return accumulator="",accumulator+=print_expr(p)},print_base_of_denom=function(p1){var accumulator;return accumulator="",isfraction(p1)||car(p1)===symbol(ADD)||car(p1)===symbol(MULTIPLY)||car(p1)===symbol(POWER)||lessp(p1,zero)?(accumulator+=print_char("("),accumulator+=print_expr(p1),accumulator+=print_char(")")):accumulator+=print_expr(p1),accumulator},print_expo_of_denom=function(p2){var accumulator;return accumulator="",isfraction(p2)||car(p2)===symbol(ADD)||car(p2)===symbol(MULTIPLY)||car(p2)===symbol(POWER)?(accumulator+=print_char("("),accumulator+=print_expr(p2),accumulator+=print_char(")")):accumulator+=print_expr(p2),accumulator},print_denom=function(p,d){var accumulator;return accumulator="",save(),p1=cadr(p),p2=caddr(p),isminusone(p2)?(accumulator+=print_base_of_denom(p1),restore(),accumulator):(1===d&&(accumulator+=print_char("(")),push(p2),negate(),p2=pop(),accumulator+=print_power(p1,p2),1===d&&(accumulator+=print_char(")")),restore(),accumulator)},print_a_over_b=function(p){var accumulator,d,doNothing,n;for(accumulator="",flag=0,n=0,d=0,save(),n=0,d=0,p1=cdr(p),p2=car(p1),isrational(p2)?(push(p2),mp_numerator(),absval(),p3=pop(),push(p2),mp_denominator(),p4=pop(),isplusone(p3)||n++,isplusone(p4)||d++,p1=cdr(p1)):(p3=one,p4=one);iscons(p1);)p2=car(p1),is_denominator(p2)?d++:n++,p1=cdr(p1);if(printMode===PRINTMODE_LATEX&&(accumulator+=print_str("\\frac{")),0===n)accumulator+=print_char("1");else for(flag=0,p1=cdr(p),isrational(car(p1))&&(p1=cdr(p1)),isplusone(p3)||(accumulator+=print_factor(p3),flag=1);iscons(p1);)p2=car(p1),is_denominator(p2)?doNothing=1:(flag&&(accumulator+=print_multiply_sign()),accumulator+=print_factor(p2),flag=1),p1=cdr(p1);for(accumulator+=print_str(printMode===PRINTMODE_LATEX?"}{":printMode!==PRINTMODE_HUMAN||test_flag?"/":" / "),d>1&&printMode!==PRINTMODE_LATEX&&(accumulator+=print_char("(")),flag=0,p1=cdr(p),isrational(car(p1))&&(p1=cdr(p1)),isplusone(p4)||(accumulator+=print_factor(p4),flag=1);iscons(p1);)p2=car(p1),is_denominator(p2)&&(flag&&(accumulator+=print_multiply_sign()),accumulator+=print_denom(p2,d),flag=1),p1=cdr(p1);return d>1&&printMode!==PRINTMODE_LATEX&&(accumulator+=print_char(")")),printMode===PRINTMODE_LATEX&&(accumulator+=print_str("}")),restore(),accumulator},print_expr=function(p){var accumulator;if(accumulator="",isadd(p))for(p=cdr(p),"-"===sign_of_term(car(p))&&(accumulator+=print_str("-")),accumulator+=print_term(car(p)),p=cdr(p);iscons(p);)"+"===sign_of_term(car(p))?accumulator+=print_str(printMode!==PRINTMODE_HUMAN||test_flag?"+":" + "):accumulator+=print_str(printMode!==PRINTMODE_HUMAN||test_flag?"-":" - "),accumulator+=print_term(car(p)),p=cdr(p);else"-"===sign_of_term(p)&&(accumulator+=print_str("-")),accumulator+=print_term(p);return accumulator},sign_of_term=function(p){var accumulator;return accumulator="",car(p)===symbol(MULTIPLY)&&isNumericAtom(cadr(p))&&lessp(cadr(p),zero)?accumulator+="-":isNumericAtom(p)&&lessp(p,zero)?accumulator+="-":accumulator+="+",accumulator},print_term=function(p){var accumulator,denom,numberOneOverSomething,origAccumulator,previousFactorWasANumber;if(accumulator="",car(p)===symbol(MULTIPLY)&&any_denominators(p))return accumulator+=print_a_over_b(p);if(car(p)===symbol(MULTIPLY)){for(p=cdr(p),isminusone(car(p))&&(p=cdr(p)),previousFactorWasANumber=!1,isNumericAtom(car(p))&&(previousFactorWasANumber=!0),numberOneOverSomething=!1,printMode===PRINTMODE_LATEX&&iscons(cdr(p))&&isNumberOneOverSomething(car(p))&&(numberOneOverSomething=!0,denom=car(p).q.b.toString()),numberOneOverSomething?(origAccumulator=accumulator,accumulator=""):accumulator+=print_factor(car(p)),p=cdr(p);iscons(p);)printMode===PRINTMODE_LATEX&&previousFactorWasANumber&&caar(p)===symbol(POWER)&&isNumericAtom(car(cdr(car(p))))&&(isfraction(car(cdr(cdr(car(p)))))||(accumulator+=" \\cdot ")),accumulator+=print_multiply_sign(),accumulator+=print_factor(car(p)),previousFactorWasANumber=!1,isNumericAtom(car(p))&&(previousFactorWasANumber=!0),p=cdr(p);numberOneOverSomething&&(accumulator=origAccumulator+"\\frac{"+accumulator+"}{"+denom+"}")}else accumulator+=print_factor(p);return accumulator},print_subexpr=function(p){var accumulator;return accumulator="",accumulator+=print_char("("),accumulator+=print_expr(p),accumulator+=print_char(")")},print_factorial_function=function(p){var accumulator;return accumulator="",p=cadr(p),isfraction(p)||car(p)===symbol(ADD)||car(p)===symbol(MULTIPLY)||car(p)===symbol(POWER)||car(p)===symbol(FACTORIAL)?accumulator+=print_subexpr(p):accumulator+=print_expr(p),accumulator+=print_char("!")},print_ABS_latex=function(p){var accumulator;return accumulator="",accumulator+=print_str("\\left |"),accumulator+=print_expr(cadr(p)),accumulator+=print_str(" \\right |")},print_BINOMIAL_latex=function(p){var accumulator;return accumulator="",accumulator+=print_str("\\binom{"),accumulator+=print_expr(cadr(p)),accumulator+=print_str("}{"),accumulator+=print_expr(caddr(p)),accumulator+=print_str("} ")},print_DOT_latex=function(p){var accumulator;return accumulator="",accumulator+=print_expr(cadr(p)),accumulator+=print_str(" \\cdot "),accumulator+=print_expr(caddr(p))},print_DOT_codegen=function(p){var accumulator;return accumulator="dot(",accumulator+=print_expr(cadr(p)),accumulator+=", ",accumulator+=print_expr(caddr(p)),accumulator+=")"},print_SIN_codegen=function(p){var accumulator;return accumulator="Math.sin(",accumulator+=print_expr(cadr(p)),accumulator+=")"},print_COS_codegen=function(p){var accumulator;return accumulator="Math.cos(",accumulator+=print_expr(cadr(p)),accumulator+=")"},print_TAN_codegen=function(p){var accumulator;return accumulator="Math.tan(",accumulator+=print_expr(cadr(p)),accumulator+=")"},print_ARCSIN_codegen=function(p){var accumulator;return accumulator="Math.asin(",accumulator+=print_expr(cadr(p)),accumulator+=")"},print_ARCCOS_codegen=function(p){var accumulator;return accumulator="Math.acos(",accumulator+=print_expr(cadr(p)),accumulator+=")"},print_ARCTAN_codegen=function(p){var accumulator;return accumulator="Math.atan(",accumulator+=print_expr(cadr(p)),accumulator+=")"},print_SQRT_latex=function(p){var accumulator;return accumulator="",accumulator+=print_str("\\sqrt{"),accumulator+=print_expr(cadr(p)),accumulator+=print_str("} ")},print_TRANSPOSE_latex=function(p){var accumulator;return accumulator="",accumulator+=print_str("{"),iscons(cadr(p))&&(accumulator+=print_str("(")),accumulator+=print_expr(cadr(p)),iscons(cadr(p))&&(accumulator+=print_str(")")),accumulator+=print_str("}"),accumulator+=print_str("^T")},print_TRANSPOSE_codegen=function(p){var accumulator;return accumulator="",accumulator+=print_str("transpose("),accumulator+=print_expr(cadr(p)),accumulator+=print_str(")")},print_UNIT_codegen=function(p){var accumulator;return accumulator="",accumulator+=print_str("identity("),accumulator+=print_expr(cadr(p)),accumulator+=print_str(")")},print_INV_latex=function(p){var accumulator;return accumulator="",accumulator+=print_str("{"),iscons(cadr(p))&&(accumulator+=print_str("(")),accumulator+=print_expr(cadr(p)),iscons(cadr(p))&&(accumulator+=print_str(")")),accumulator+=print_str("}"),accumulator+=print_str("^{-1}")},print_INV_codegen=function(p){var accumulator;return accumulator="",accumulator+=print_str("inv("),accumulator+=print_expr(cadr(p)),accumulator+=print_str(")")},print_DEFINT_latex=function(p){var accumulator,functionBody,i,i1,numberOfIntegrals,originalIntegral,ref1,theIntegral,theVariable;for(accumulator="",functionBody=car(cdr(p)),originalIntegral=p=cdr(p),numberOfIntegrals=0;iscons(cdr(cdr(p)));)numberOfIntegrals++,theIntegral=cdr(cdr(p)),accumulator+=print_str("\\int^{"),accumulator+=print_expr(car(cdr(theIntegral))),accumulator+=print_str("}_{"),accumulator+=print_expr(car(theIntegral)),accumulator+=print_str("} \\! "),p=cdr(theIntegral);for(accumulator+=print_expr(functionBody),accumulator+=print_str(" \\,"),p=originalIntegral,i=i1=1,ref1=numberOfIntegrals;1<=ref1?i1<=ref1:i1>=ref1;i=1<=ref1?++i1:--i1)theVariable=cdr(p),accumulator+=print_str(" \\mathrm{d} "),accumulator+=print_expr(car(theVariable)),i<numberOfIntegrals&&(accumulator+=print_str(" \\, ")),p=cdr(cdr(theVariable));return accumulator},print_tensor=function(p){var accumulator;return accumulator="",accumulator+=print_tensor_inner(p,0,0)[1]},print_tensor_inner=function(p,j,k){var accumulator,i,i1,j1,ref1,ref2,ref3,retString;if(accumulator="",accumulator+=print_str("["),j<p.tensor.ndim-1)for(i=i1=0,ref1=p.tensor.dim[j];0<=ref1?i1<ref1:i1>ref1;i=0<=ref1?++i1:--i1)k=(ref2=print_tensor_inner(p,j+1,k))[0],accumulator+=retString=ref2[1],i!==p.tensor.dim[j]-1&&(accumulator+=print_str(","));else for(i=j1=0,ref3=p.tensor.dim[j];0<=ref3?j1<ref3:j1>ref3;i=0<=ref3?++j1:--j1)accumulator+=print_expr(p.tensor.elem[k]),i!==p.tensor.dim[j]-1&&(accumulator+=print_str(",")),k++;return[k,accumulator+=print_str("]")]},print_tensor_latex=function(p){var accumulator;return accumulator="",p.tensor.ndim<=2&&(accumulator+=print_tensor_inner_latex(!0,p,0,0)[1]),accumulator},print_tensor_inner_latex=function(firstLevel,p,j,k){var accumulator,i,i1,j1,ref1,ref2,ref3,retString;if(accumulator="",firstLevel&&(accumulator+="\\begin{bmatrix} "),j<p.tensor.ndim-1)for(i=i1=0,ref1=p.tensor.dim[j];0<=ref1?i1<ref1:i1>ref1;i=0<=ref1?++i1:--i1)k=(ref2=print_tensor_inner_latex(0,p,j+1,k))[0],accumulator+=retString=ref2[1],i!==p.tensor.dim[j]-1&&(accumulator+=print_str(" \\\\ "));else for(i=j1=0,ref3=p.tensor.dim[j];0<=ref3?j1<ref3:j1>ref3;i=0<=ref3?++j1:--j1)accumulator+=print_expr(p.tensor.elem[k]),i!==p.tensor.dim[j]-1&&(accumulator+=print_str(" & ")),k++;return firstLevel&&(accumulator+=" \\end{bmatrix}"),[k,accumulator]},print_SUM_latex=function(p){var accumulator;return accumulator="\\sum_{",accumulator+=print_expr(caddr(p)),accumulator+="=",accumulator+=print_expr(cadddr(p)),accumulator+="}^{",accumulator+=print_expr(caddddr(p)),accumulator+="}{",accumulator+=print_expr(cadr(p)),accumulator+="}"},print_SUM_codegen=function(p){var accumulator,body,lowerlimit,upperlimit,variable;return body=cadr(p),variable=caddr(p),lowerlimit=cadddr(p),upperlimit=caddddr(p),accumulator="(function(){ var "+variable+";  var holderSum = 0;  var lowerlimit = "+print_expr(lowerlimit)+";  var upperlimit = "+print_expr(upperlimit)+";  for ("+variable+" = lowerlimit; "+variable+" < upperlimit; "+variable+"++) {    holderSum += "+print_expr(body)+"; }  return holderSum;})()"},print_TEST_latex=function(p){var accumulator;for(accumulator="\\left\\{ \\begin{array}{ll}",p=cdr(p);iscons(p);){if(cdr(p)===symbol(NIL)){accumulator+="{",accumulator+=print_expr(car(p)),accumulator+="} & otherwise ",accumulator+=" \\\\\\\\";break}accumulator+="{",accumulator+=print_expr(cadr(p)),accumulator+="} & if & ",accumulator+=print_expr(car(p)),accumulator+=" \\\\\\\\",p=cddr(p)}return(accumulator=accumulator.substring(0,accumulator.length-4))+"\\end{array} \\right."},print_TEST_codegen=function(p){var accumulator,howManyIfs;for(accumulator="(function(){",p=cdr(p),howManyIfs=0;iscons(p);){if(cdr(p)===symbol(NIL)){accumulator+="else {",accumulator+="return ("+print_expr(car(p))+");",accumulator+="}";break}howManyIfs&&(accumulator+=" else "),accumulator+="if ("+print_expr(car(p))+"){",accumulator+="return ("+print_expr(cadr(p))+");",accumulator+="}",howManyIfs++,p=cddr(p)}return accumulator+="})()"},print_TESTLT_latex=function(p){var accumulator;return accumulator="{",accumulator+=print_expr(cadr(p)),accumulator+="}",accumulator+=" < ",accumulator+="{",(accumulator+=print_expr(caddr(p)))+"}"},print_TESTLE_latex=function(p){var accumulator;return accumulator="{",accumulator+=print_expr(cadr(p)),accumulator+="}",accumulator+=" \\leq ",accumulator+="{",(accumulator+=print_expr(caddr(p)))+"}"},print_TESTGT_latex=function(p){var accumulator;return accumulator="{",accumulator+=print_expr(cadr(p)),accumulator+="}",accumulator+=" > ",accumulator+="{",(accumulator+=print_expr(caddr(p)))+"}"},print_TESTGE_latex=function(p){var accumulator;return accumulator="{",accumulator+=print_expr(cadr(p)),accumulator+="}",accumulator+=" \\geq ",accumulator+="{",(accumulator+=print_expr(caddr(p)))+"}"},print_TESTEQ_latex=function(p){var accumulator;return accumulator="{",accumulator+=print_expr(cadr(p)),accumulator+="}",accumulator+=" = ",accumulator+="{",(accumulator+=print_expr(caddr(p)))+"}"},print_FOR_codegen=function(p){var accumulator,body,lowerlimit,upperlimit,variable;return body=cadr(p),variable=caddr(p),lowerlimit=cadddr(p),upperlimit=caddddr(p),accumulator="(function(){ var "+variable+";  var lowerlimit = "+print_expr(lowerlimit)+";  var upperlimit = "+print_expr(upperlimit)+";  for ("+variable+" = lowerlimit; "+variable+" < upperlimit; "+variable+"++) {    "+print_expr(body)+" } })()"},print_DO_codegen=function(p){var accumulator;for(accumulator="",p=cdr(p);iscons(p);)accumulator+=print_expr(car(p)),p=cdr(p);return accumulator},print_SETQ_codegen=function(p){var accumulator;return accumulator="",accumulator+=print_expr(cadr(p)),accumulator+=" = ",accumulator+=print_expr(caddr(p)),accumulator+="; "},print_PRODUCT_latex=function(p){var accumulator;return accumulator="\\prod_{",accumulator+=print_expr(caddr(p)),accumulator+="=",accumulator+=print_expr(cadddr(p)),accumulator+="}^{",accumulator+=print_expr(caddddr(p)),accumulator+="}{",accumulator+=print_expr(cadr(p)),accumulator+="}"},print_PRODUCT_codegen=function(p){var accumulator,body,lowerlimit,upperlimit,variable;return body=cadr(p),variable=caddr(p),lowerlimit=cadddr(p),upperlimit=caddddr(p),accumulator="(function(){ var "+variable+";  var holderProduct = 1;  var lowerlimit = "+print_expr(lowerlimit)+";  var upperlimit = "+print_expr(upperlimit)+";  for ("+variable+" = lowerlimit; "+variable+" < upperlimit; "+variable+"++) {    holderProduct *= "+print_expr(body)+"; }  return holderProduct;})()"},print_base=function(p){var accumulator;return accumulator="",isadd(cadr(p))||caadr(p)===symbol(MULTIPLY)||caadr(p)===symbol(POWER)||isnegativenumber(cadr(p))?(accumulator+=print_str("("),accumulator+=print_expr(cadr(p)),accumulator+=print_str(")")):isNumericAtom(cadr(p))&&(lessp(cadr(p),zero)||isfraction(cadr(p)))?(accumulator+=print_str("("),accumulator+=print_factor(cadr(p)),accumulator+=print_str(")")):accumulator+=print_factor(cadr(p)),accumulator},print_exponent=function(p){var accumulator;return accumulator="",iscons(caddr(p))||isfraction(caddr(p))||isNumericAtom(caddr(p))&&lessp(caddr(p),zero)?(accumulator+=print_str("("),accumulator+=print_expr(caddr(p)),accumulator+=print_str(")")):accumulator+=print_factor(caddr(p)),accumulator},print_power=function(base,exponent){var accumulator,denomExponent,newExponent,numExponent;if(accumulator="",DEBUG&&console.log("power base: "+base+"  exponent: "+exponent),isoneovertwo(exponent))if(equaln(base,2)){if(codeGen)return accumulator+=print_str("Math.SQRT2")}else{if(printMode===PRINTMODE_LATEX)return accumulator+=print_str("\\sqrt{"),accumulator+=print_expr(base),accumulator+=print_str("}");if(codeGen)return accumulator+=print_str("Math.sqrt("),accumulator+=print_expr(base),accumulator+=print_str(")")}if(equaln(get_binding(symbol(PRINT_LEAVE_E_ALONE)),1)&&base===symbol(E))return codeGen?(accumulator+=print_str("Math.exp("),accumulator+=print_expo_of_denom(exponent),accumulator+=print_str(")")):(printMode===PRINTMODE_LATEX?(accumulator+=print_str("e^{"),accumulator+=print_expr(exponent),accumulator+=print_str("}")):(accumulator+=print_str("exp("),accumulator+=print_expr(exponent),accumulator+=print_str(")")),accumulator);if(codeGen)return accumulator+=print_str("Math.pow("),accumulator+=print_base_of_denom(base),accumulator+=print_str(", "),accumulator+=print_expo_of_denom(exponent),accumulator+=print_str(")");if(equaln(get_binding(symbol(PRINT_LEAVE_X_ALONE)),0)||"x"!==base.printname){if(base!==symbol(E)){if(isminusone(exponent))return accumulator+=print_str(printMode===PRINTMODE_LATEX?"\\frac{1}{":printMode!==PRINTMODE_HUMAN||test_flag?"1/":"1 / "),iscons(base)&&printMode!==PRINTMODE_LATEX?(accumulator+=print_str("("),accumulator+=print_expr(base),accumulator+=print_str(")")):accumulator+=print_expr(base),printMode===PRINTMODE_LATEX&&(accumulator+=print_str("}")),accumulator;if(isnegativeterm(exponent))return accumulator+=print_str(printMode===PRINTMODE_LATEX?"\\frac{1}{":printMode!==PRINTMODE_HUMAN||test_flag?"1/":"1 / "),push(exponent),push_integer(-1),multiply(),newExponent=pop(),iscons(base)&&printMode!==PRINTMODE_LATEX?(accumulator+=print_str("("),accumulator+=print_power(base,newExponent),accumulator+=print_str(")")):accumulator+=print_power(base,newExponent),printMode===PRINTMODE_LATEX&&(accumulator+=print_str("}")),accumulator}if(isfraction(exponent)&&printMode===PRINTMODE_LATEX)return accumulator+=print_str("\\sqrt"),push(exponent),denominator(),denomExponent=pop(),isplustwo(denomExponent)||(accumulator+=print_str("["),accumulator+=print_expr(denomExponent),accumulator+=print_str("]")),accumulator+=print_str("{"),push(exponent),numerator(),numExponent=pop(),accumulator+=print_power(base,exponent=numExponent),accumulator+=print_str("}")}return printMode===PRINTMODE_LATEX&&isplusone(exponent)?accumulator+=print_expr(base):(isadd(base)||isnegativenumber(base)?(accumulator+=print_str("("),accumulator+=print_expr(base),accumulator+=print_str(")")):car(base)===symbol(MULTIPLY)||car(base)===symbol(POWER)?(printMode!==PRINTMODE_LATEX&&(accumulator+=print_str("(")),accumulator+=print_factor(base,!0),printMode!==PRINTMODE_LATEX&&(accumulator+=print_str(")"))):isNumericAtom(base)&&(lessp(base,zero)||isfraction(base))?(accumulator+=print_str("("),accumulator+=print_factor(base),accumulator+=print_str(")")):accumulator+=print_factor(base),accumulator+=print_str(printMode!==PRINTMODE_HUMAN||test_flag?"^":power_str),printMode===PRINTMODE_LATEX?print_expr(exponent).length>1?(accumulator+=print_str("{"),accumulator+=print_expr(exponent),accumulator+=print_str("}")):accumulator+=print_expr(exponent):iscons(exponent)||isfraction(exponent)||isNumericAtom(exponent)&&lessp(exponent,zero)?(accumulator+=print_str("("),accumulator+=print_expr(exponent),accumulator+=print_str(")")):accumulator+=print_factor(exponent)),accumulator},print_index_function=function(p){var accumulator;if(accumulator="",p=cdr(p),caar(p)===symbol(ADD)||caar(p)===symbol(MULTIPLY)||caar(p)===symbol(POWER)||caar(p)===symbol(FACTORIAL)?accumulator+=print_subexpr(car(p)):accumulator+=print_expr(car(p)),accumulator+=print_str("["),p=cdr(p),iscons(p))for(accumulator+=print_expr(car(p)),p=cdr(p);iscons(p);)accumulator+=print_str(","),accumulator+=print_expr(car(p)),p=cdr(p);return accumulator+=print_str("]")},print_factor=function(p,omitParens){var accumulator,base,exponent,fbody,parameters,returned;if(accumulator="",isNumericAtom(p))return accumulator+=print_number(p,!1);if(isstr(p))return accumulator+=print_str('"'),accumulator+=print_str(p.str),accumulator+=print_str('"');if(istensor(p))return accumulator+=printMode===PRINTMODE_LATEX?print_tensor_latex(p):print_tensor(p);if(car(p)===symbol(MULTIPLY))return omitParens||"-"!==sign_of_term(p)&&printMode===PRINTMODE_LATEX||(accumulator+=print_str(printMode===PRINTMODE_LATEX?" \\left (":"(")),accumulator+=print_expr(p),omitParens||"-"!==sign_of_term(p)&&printMode===PRINTMODE_LATEX||(accumulator+=print_str(printMode===PRINTMODE_LATEX?" \\right ) ":")")),accumulator;if(isadd(p))return omitParens||(accumulator+=print_str("(")),accumulator+=print_expr(p),omitParens||(accumulator+=print_str(")")),accumulator;if(car(p)===symbol(POWER))return base=cadr(p),exponent=caddr(p),accumulator+=print_power(base,exponent);if(car(p)===symbol(FUNCTION))return fbody=cadr(p),codeGen||(parameters=caddr(p),accumulator+=print_str("function "),DEBUG&&console.log("emittedString from print_factor "+stringsEmittedByUserPrintouts),accumulator+=returned=print_list(parameters),accumulator+=print_str(" -> ")),accumulator+=print_expr(fbody);if(car(p)===symbol(PATTERN))return accumulator+=print_expr(caadr(p)),accumulator+=print_str(printMode===PRINTMODE_LATEX?" \\rightarrow ":printMode!==PRINTMODE_HUMAN||test_flag?"->":" -> "),accumulator+=print_expr(car(cdr(cadr(p))));if(car(p)===symbol(INDEX)&&issymbol(cadr(p)))return accumulator+=print_index_function(p);if(car(p)===symbol(FACTORIAL))return accumulator+=print_factorial_function(p);if(car(p)===symbol(ABS)&&printMode===PRINTMODE_LATEX)return accumulator+=print_ABS_latex(p);if(car(p)===symbol(SQRT)&&printMode===PRINTMODE_LATEX)return accumulator+=print_SQRT_latex(p);if(car(p)===symbol(TRANSPOSE)){if(printMode===PRINTMODE_LATEX)return accumulator+=print_TRANSPOSE_latex(p);if(codeGen)return accumulator+=print_TRANSPOSE_codegen(p)}else if(car(p)===symbol(UNIT)){if(codeGen)return accumulator+=print_UNIT_codegen(p)}else if(car(p)===symbol(INV)){if(printMode===PRINTMODE_LATEX)return accumulator+=print_INV_latex(p);if(codeGen)return accumulator+=print_INV_codegen(p)}else{if(car(p)===symbol(BINOMIAL)&&printMode===PRINTMODE_LATEX)return accumulator+=print_BINOMIAL_latex(p);if(car(p)===symbol(DEFINT)&&printMode===PRINTMODE_LATEX)return accumulator+=print_DEFINT_latex(p);if(isinnerordot(p)){if(printMode===PRINTMODE_LATEX)return accumulator+=print_DOT_latex(p);if(codeGen)return accumulator+=print_DOT_codegen(p)}else if(car(p)===symbol(SIN)){if(codeGen)return accumulator+=print_SIN_codegen(p)}else if(car(p)===symbol(COS)){if(codeGen)return accumulator+=print_COS_codegen(p)}else if(car(p)===symbol(TAN)){if(codeGen)return accumulator+=print_TAN_codegen(p)}else if(car(p)===symbol(ARCSIN)){if(codeGen)return accumulator+=print_ARCSIN_codegen(p)}else if(car(p)===symbol(ARCCOS)){if(codeGen)return accumulator+=print_ARCCOS_codegen(p)}else if(car(p)===symbol(ARCTAN)){if(codeGen)return accumulator+=print_ARCTAN_codegen(p)}else if(car(p)===symbol(SUM)){if(printMode===PRINTMODE_LATEX)return accumulator+=print_SUM_latex(p);if(codeGen)return accumulator+=print_SUM_codegen(p)}else if(car(p)===symbol(PRODUCT)){if(printMode===PRINTMODE_LATEX)return accumulator+=print_PRODUCT_latex(p);if(codeGen)return accumulator+=print_PRODUCT_codegen(p)}else if(car(p)===symbol(FOR)){if(codeGen)return accumulator+=print_FOR_codegen(p)}else if(car(p)===symbol(DO)){if(codeGen)return accumulator+=print_DO_codegen(p)}else if(car(p)===symbol(TEST)){if(codeGen)return accumulator+=print_TEST_codegen(p);if(printMode===PRINTMODE_LATEX)return accumulator+=print_TEST_latex(p)}else if(car(p)===symbol(TESTLT)){if(codeGen)return accumulator+="(("+print_expr(cadr(p))+") < ("+print_expr(caddr(p))+"))";if(printMode===PRINTMODE_LATEX)return accumulator+=print_TESTLT_latex(p)}else if(car(p)===symbol(TESTLE)){if(codeGen)return accumulator+="(("+print_expr(cadr(p))+") <= ("+print_expr(caddr(p))+"))";if(printMode===PRINTMODE_LATEX)return accumulator+=print_TESTLE_latex(p)}else if(car(p)===symbol(TESTGT)){if(codeGen)return accumulator+="(("+print_expr(cadr(p))+") > ("+print_expr(caddr(p))+"))";if(printMode===PRINTMODE_LATEX)return accumulator+=print_TESTGT_latex(p)}else if(car(p)===symbol(TESTGE)){if(codeGen)return accumulator+="(("+print_expr(cadr(p))+") >= ("+print_expr(caddr(p))+"))";if(printMode===PRINTMODE_LATEX)return accumulator+=print_TESTGE_latex(p)}else if(car(p)===symbol(TESTEQ)){if(codeGen)return accumulator+="(("+print_expr(cadr(p))+") === ("+print_expr(caddr(p))+"))";if(printMode===PRINTMODE_LATEX)return accumulator+=print_TESTEQ_latex(p)}else if(car(p)===symbol(FLOOR)){if(codeGen)return accumulator+="Math.floor("+print_expr(cadr(p))+")";if(printMode===PRINTMODE_LATEX)return accumulator+=" \\lfloor {"+print_expr(cadr(p))+"} \\rfloor "}else if(car(p)===symbol(CEILING)){if(codeGen)return accumulator+="Math.ceiling("+print_expr(cadr(p))+")";if(printMode===PRINTMODE_LATEX)return accumulator+=" \\lceil {"+print_expr(cadr(p))+"} \\rceil "}else if(car(p)===symbol(ROUND)){if(codeGen)return accumulator+="Math.round("+print_expr(cadr(p))+")"}else if(car(p)===symbol(SETQ))return codeGen?accumulator+=print_SETQ_codegen(p):(accumulator+=print_expr(cadr(p)),accumulator+=print_str("="),accumulator+=print_expr(caddr(p)))}if(iscons(p)){if(accumulator+=print_factor(car(p)),p=cdr(p),omitParens||(accumulator+=print_str("(")),iscons(p))for(accumulator+=print_expr(car(p)),p=cdr(p);iscons(p);)accumulator+=print_str(","),accumulator+=print_expr(car(p)),p=cdr(p);return omitParens||(accumulator+=print_str(")")),accumulator}return p===symbol(DERIVATIVE)?accumulator+=print_char("d"):p===symbol(E)?accumulator+=print_str(codeGen?"Math.E":"e"):p===symbol(PI)?accumulator+=print_str(printMode===PRINTMODE_LATEX?"\\pi":"pi"):accumulator+=print_str(get_printname(p)),accumulator},print_list=function(p){var accumulator;switch(accumulator="",p.k){case CONS:for(accumulator+="(",accumulator+=print_list(car(p)),p===cdr(p)&&p!==symbol(NIL)&&console.log("oh no recursive!"),p=cdr(p);iscons(p);)accumulator+=" ",accumulator+=print_list(car(p)),(p=cdr(p))===cdr(p)&&p!==symbol(NIL)&&console.log("oh no recursive!");p!==symbol(NIL)&&(accumulator+=" . ",accumulator+=print_list(p)),accumulator+=")";break;case STR:accumulator+=p.str;break;case NUM:case DOUBLE:accumulator+=print_number(p,!0);break;case SYM:accumulator+=get_printname(p);break;default:accumulator+="<tensor>"}return accumulator},print_multiply_sign=function(){var accumulator;if(accumulator="",printMode===PRINTMODE_LATEX){if(printMode!==PRINTMODE_HUMAN||test_flag)return accumulator;accumulator+=print_str(" ")}return accumulator+=print_str(printMode!==PRINTMODE_HUMAN||test_flag||codeGen?"*":" ")},is_denominator=function(p){return car(p)===symbol(POWER)&&cadr(p)!==symbol(E)&&isnegativeterm(caddr(p))?1:0},any_denominators=function(p){var q;for(p=cdr(p);iscons(p);){if(q=car(p),is_denominator(q))return 1;p=cdr(p)}return 0},YMAX=1e4,glyph=function(){function glyph(){}return glyph.prototype.c=0,glyph.prototype.x=0,glyph.prototype.y=0,glyph}(),chartab=[],charTabIndex=i1=0,ref1=YMAX;0<=ref1?i1<ref1:i1>ref1;charTabIndex=0<=ref1?++i1:--i1)chartab[charTabIndex]=new glyph;for(yindex=0,level=0,emit_x=0,expr_level=0,display_flag=0,printchar_nowrap=function(character){var accumulator;return accumulator="",accumulator+=character},printchar=function(character){return printchar_nowrap(character)},print2dascii=function(p){var beenPrinted,h,ref2,w,y;return h=0,w=0,y=0,save(),yindex=0,level=0,emit_x=0,emit_top_expr(p),h=(ref2=get_size(0,yindex))[0],w=ref2[1],y=ref2[2],w>100?(printline(p),void restore()):(beenPrinted=print_glyphs(),restore(),beenPrinted)},emit_top_expr=function(p){return car(p)===symbol(SETQ)?(emit_expr(cadr(p)),__emit_str(" = "),void emit_expr(caddr(p))):istensor(p)?emit_tensor(p):emit_expr(p)},will_be_displayed_as_fraction=function(p){if(level>0)return 0;if(isfraction(p))return 1;if(car(p)!==symbol(MULTIPLY))return 0;if(isfraction(cadr(p)))return 1;for(;iscons(p);){if(isdenominator(car(p)))return 1;p=cdr(p)}return 0},emit_expr=function(p){if(expr_level++,car(p)===symbol(ADD))for(p=cdr(p),__is_negative(car(p))&&(__emit_char("-"),will_be_displayed_as_fraction(car(p))&&__emit_char(" ")),emit_term(car(p)),p=cdr(p);iscons(p);)__is_negative(car(p))?(__emit_char(" "),__emit_char("-"),__emit_char(" ")):(__emit_char(" "),__emit_char("+"),__emit_char(" ")),emit_term(car(p)),p=cdr(p);else __is_negative(p)&&(__emit_char("-"),will_be_displayed_as_fraction(p)&&__emit_char(" ")),emit_term(p);return expr_level--},emit_unsigned_expr=function(p){var results;if(car(p)===symbol(ADD)){for(p=cdr(p),emit_term(car(p)),p=cdr(p),results=[];iscons(p);)__is_negative(car(p))?(__emit_char(" "),__emit_char("-"),__emit_char(" ")):(__emit_char(" "),__emit_char("+"),__emit_char(" ")),emit_term(car(p)),results.push(p=cdr(p));return results}return emit_term(p)},__is_negative=function(p){return isnegativenumber(p)?1:car(p)===symbol(MULTIPLY)&&isnegativenumber(cadr(p))?1:0},emit_term=function(p){var n;return car(p)===symbol(MULTIPLY)?(n=count_denominators(p))&&0===level?emit_fraction(p,n):emit_multiply(p,n):emit_factor(p)},isdenominator=function(p){return car(p)===symbol(POWER)&&cadr(p)!==symbol(E)&&__is_negative(caddr(p))?1:0},count_denominators=function(p){var count,q;for(count=0,p=cdr(p);iscons(p);)q=car(p),isdenominator(q)&&count++,p=cdr(p);return count},emit_multiply=function(p,n){var results;if(0===n){for(p=cdr(p),(isplusone(car(p))||isminusone(car(p)))&&(p=cdr(p)),emit_factor(car(p)),p=cdr(p),results=[];iscons(p);)__emit_char(" "),emit_factor(car(p)),results.push(p=cdr(p));return results}return emit_numerators(p),__emit_char("/"),n>1||isfraction(cadr(p))?(__emit_char("("),emit_denominators(p),__emit_char(")")):emit_denominators(p)},emit_fraction=function(p,d){var count,doNothing,k1,k2,n,x;for(count=0,k1=0,k2=0,n=0,x=0,save(),p3=one,p4=one,isrational(cadr(p))&&(push(cadr(p)),mp_numerator(),absval(),p3=pop(),push(cadr(p)),mp_denominator(),p4=pop()),isdouble(cadr(p))&&(push(cadr(p)),absval(),p3=pop()),n=isplusone(p3)?0:1,p1=cdr(p),isNumericAtom(car(p1))&&(p1=cdr(p1));iscons(p1);)p2=car(p1),isdenominator(p2)?doNothing=1:n++,p1=cdr(p1);for(x=emit_x,k1=yindex,count=0,isplusone(p3)||(emit_number(p3,0),count++),p1=cdr(p),isNumericAtom(car(p1))&&(p1=cdr(p1));iscons(p1);)p2=car(p1),isdenominator(p2)?doNothing=1:(count>0&&__emit_char(" "),1===n?emit_expr(p2):emit_factor(p2),count++),p1=cdr(p1);for(0===count&&__emit_char("1"),k2=yindex,count=0,isplusone(p4)||(emit_number(p4,0),count++,d++),p1=cdr(p),isrational(car(p1))&&(p1=cdr(p1));iscons(p1);)p2=car(p1),isdenominator(p2)&&(count>0&&__emit_char(" "),emit_denominator(p2,d),count++),p1=cdr(p1);return fixup_fraction(x,k1,k2),restore()},emit_numerators=function(p){var doNothing,n;for(save(),n=0,p1=one,p=cdr(p),isrational(car(p))?(push(car(p)),mp_numerator(),absval(),p1=pop(),p=cdr(p)):isdouble(car(p))&&(push(car(p)),absval(),p1=pop(),p=cdr(p)),n=0,isplusone(p1)||(emit_number(p1,0),n++);iscons(p);)isdenominator(car(p))?doNothing=1:(n>0&&__emit_char(" "),emit_factor(car(p)),n++),p=cdr(p);return 0===n&&__emit_char("1"),restore()},emit_denominators=function(p){var n;for(save(),n=0,p=cdr(p),isfraction(car(p))&&(push(car(p)),mp_denominator(),p1=pop(),emit_number(p1,0),n++,p=cdr(p));iscons(p);)isdenominator(car(p))&&(n>0&&__emit_char(" "),emit_denominator(car(p),0),n++),p=cdr(p);return restore()},emit_factor=function(p){istensor(p)?emit_flat_tensor(p):isdouble(p)?emit_number(p,0):car(p)!==symbol(ADD)&&car(p)!==symbol(MULTIPLY)?car(p)!==symbol(POWER)?iscons(p)?emit_function(p):isNumericAtom(p)?0===level?emit_numerical_fraction(p):emit_number(p,0):issymbol(p)?emit_symbol(p):isstr(p)&&emit_string(p):emit_power(p):emit_subexpr(p)},emit_numerical_fraction=function(p){var k1,k2,x;return k1=0,k2=0,x=0,save(),push(p),mp_numerator(),absval(),p3=pop(),push(p),mp_denominator(),p4=pop(),isplusone(p4)?(emit_number(p3,0),void restore()):(x=emit_x,k1=yindex,emit_number(p3,0),k2=yindex,emit_number(p4,0),fixup_fraction(x,k1,k2),restore())},isfactor=function(p){return iscons(p)&&car(p)!==symbol(ADD)&&car(p)!==symbol(MULTIPLY)&&car(p)!==symbol(POWER)?1:issymbol(p)?1:isfraction(p)?0:isnegativenumber(p)?0:isNumericAtom(p)?1:0},emit_power=function(p){var k1,k2,x;return k1=0,k2=0,x=0,cadr(p)===symbol(E)?(__emit_str("exp("),emit_expr(caddr(p)),void __emit_char(")")):level>0?void(isminusone(caddr(p))?(__emit_char("1"),__emit_char("/"),isfactor(cadr(p))?emit_factor(cadr(p)):emit_subexpr(cadr(p))):(isfactor(cadr(p))?emit_factor(cadr(p)):emit_subexpr(cadr(p)),__emit_char("^"),isfactor(caddr(p))?emit_factor(caddr(p)):emit_subexpr(caddr(p)))):__is_negative(caddr(p))?(x=emit_x,k1=yindex,__emit_char("1"),k2=yindex,emit_denominator(p,1),void fixup_fraction(x,k1,k2)):(k1=yindex,isfactor(cadr(p))?emit_factor(cadr(p)):emit_subexpr(cadr(p)),k2=yindex,level++,emit_expr(caddr(p)),level--,fixup_power(k1,k2))},emit_denominator=function(p,n){var k1,k2;if(k1=0,k2=0,!isminusone(caddr(p)))return k1=yindex,isfactor(cadr(p))?emit_factor(cadr(p)):emit_subexpr(cadr(p)),k2=yindex,level++,emit_unsigned_expr(caddr(p)),level--,fixup_power(k1,k2);1===n?emit_expr(cadr(p)):emit_factor(cadr(p))},emit_function=function(p){if(car(p)===symbol(INDEX)&&issymbol(cadr(p)))emit_index_function(p);else{if(car(p)!==symbol(FACTORIAL)){if(car(p)===symbol(DERIVATIVE)?__emit_char("d"):emit_symbol(car(p)),__emit_char("("),p=cdr(p),iscons(p))for(emit_expr(car(p)),p=cdr(p);iscons(p);)__emit_char(","),emit_expr(car(p)),p=cdr(p);return __emit_char(")")}emit_factorial_function(p)}},emit_index_function=function(p){if(p=cdr(p),caar(p)===symbol(ADD)||caar(p)===symbol(MULTIPLY)||caar(p)===symbol(POWER)||caar(p)===symbol(FACTORIAL)?emit_subexpr(car(p)):emit_expr(car(p)),__emit_char("["),p=cdr(p),iscons(p))for(emit_expr(car(p)),p=cdr(p);iscons(p);)__emit_char(","),emit_expr(car(p)),p=cdr(p);return __emit_char("]")},emit_factorial_function=function(p){return p=cadr(p),isfraction(p)||car(p)===symbol(ADD)||car(p)===symbol(MULTIPLY)||car(p)===symbol(POWER)||car(p)===symbol(FACTORIAL)?emit_subexpr(p):emit_expr(p),__emit_char("!")},emit_subexpr=function(p){return __emit_char("("),emit_expr(p),__emit_char(")")},emit_symbol=function(p){var i,j1,pPrintName,ref2,results;if(i=0,p!==symbol(E)){for(results=[],i=j1=0,ref2=(pPrintName=get_printname(p)).length;0<=ref2?j1<ref2:j1>ref2;i=0<=ref2?++j1:--j1)results.push(__emit_char(pPrintName[i]));return results}__emit_str("exp(1)")},emit_string=function(p){var i,j1,pString,ref2;for(i=0,pString=p.str,__emit_char('"'),i=j1=0,ref2=pString.length;0<=ref2?j1<ref2:j1>ref2;i=0<=ref2?++j1:--j1)__emit_char(pString[i]);return __emit_char('"')},fixup_fraction=function(x,k1,k2){var dx,dy,h1,h2,i,j1,ref2,ref3,ref4,results,w,w1,w2,y,y1,y2;for(dx=0,dy=0,i=0,w=0,y=0,h1=0,w1=0,y1=0,h2=0,w2=0,y2=0,h1=(ref2=get_size(k1,k2))[0],w1=ref2[1],y1=ref2[2],h2=(ref3=get_size(k2,yindex))[0],w2=ref3[1],y2=ref3[2],dx=w2>w1?(w2-w1)/2:0,dx++,move(k1,k2,dx,dy=-(y=y1+h1-1)-1),dx=w2>w1?-w1:(w1-w2)/2-w1,dx++,move(k2,yindex,dx,dy=1-y2),w=w2>w1?w2:w1,emit_x=x,results=[],i=j1=0,ref4=w+=2;0<=ref4?j1<ref4:j1>ref4;i=0<=ref4?++j1:--j1)results.push(__emit_char("-"));return results},fixup_power=function(k1,k2){var dy,h1,h2,ref2,ref3,w1,w2,y1,y2;return dy=0,h1=0,w1=0,y1=0,h2=0,w2=0,y2=0,h1=(ref2=get_size(k1,k2))[0],w1=ref2[1],y1=ref2[2],h2=(ref3=get_size(k2,yindex))[0],w2=ref3[1],dy=-(y2=ref3[2])-h2+1,move(k2,yindex,0,dy+=y1-1)},move=function(j,k,dx,dy){var i,j1,ref2,ref3,results;for(i=0,results=[],i=j1=ref2=j,ref3=k;ref2<=ref3?j1<ref3:j1>ref3;i=ref2<=ref3?++j1:--j1)chartab[i].x+=dx,results.push(chartab[i].y+=dy);return results},get_size=function(j,k){var h,i,j1,max_x,max_y,min_x,min_y,ref2,ref3,w,y;for(i=0,min_x=chartab[j].x,max_x=chartab[j].x,min_y=chartab[j].y,max_y=chartab[j].y,i=j1=ref2=j+1,ref3=k;ref2<=ref3?j1<ref3:j1>ref3;i=ref2<=ref3?++j1:--j1)chartab[i].x<min_x&&(min_x=chartab[i].x),chartab[i].x>max_x&&(max_x=chartab[i].x),chartab[i].y<min_y&&(min_y=chartab[i].y),chartab[i].y>max_y&&(max_y=chartab[i].y);return[h=max_y-min_y+1,w=max_x-min_x+1,y=min_y]},displaychar=function(c){return __emit_char(c)},__emit_char=function(c){if(yindex!==YMAX)return chartab[yindex],chartab[yindex].c=c,chartab[yindex].x=emit_x,chartab[yindex].y=0,yindex++,emit_x++},__emit_str=function(s){var i,j1,ref2,results;for(i=0,results=[],i=j1=0,ref2=s.length;0<=ref2?j1<ref2:j1>ref2;i=0<=ref2?++j1:--j1)results.push(__emit_char(s[i]));return results},emit_number=function(p,emit_sign){var i,j1,l1,m1,ref2,ref3,ref4,results,results1,tmpString;switch(tmpString="",i=0,p.k){case NUM:for("-"===(tmpString=p.q.a.toString())[0]&&0===emit_sign&&(tmpString=tmpString.substring(1)),i=j1=0,ref2=tmpString.length;0<=ref2?j1<ref2:j1>ref2;i=0<=ref2?++j1:--j1)__emit_char(tmpString[i]);if("1"===(tmpString=p.q.b.toString()))break;for(__emit_char("/"),results=[],i=l1=0,ref3=tmpString.length;0<=ref3?l1<ref3:l1>ref3;i=0<=ref3?++l1:--l1)results.push(__emit_char(tmpString[i]));return results;case DOUBLE:for("-"===(tmpString=doubleToReasonableString(p.d))[0]&&0===emit_sign&&(tmpString=tmpString.substring(1)),results1=[],i=m1=0,ref4=tmpString.length;0<=ref4?m1<ref4:m1>ref4;i=0<=ref4?++m1:--m1)results1.push(__emit_char(tmpString[i]));return results1}},cmpGlyphs=function(a,b){return a.y<b.y?-1:a.y>b.y?1:a.x<b.x?-1:a.x>b.x?1:0},print_glyphs=function(){var accumulator,i,j1,ref2,subsetOfStack,x,y;for(i=0,accumulator="",(subsetOfStack=chartab.slice(0,yindex)).sort(cmpGlyphs),x=0,y=(chartab=[].concat(subsetOfStack).concat(chartab.slice(yindex)))[0].y,i=j1=0,ref2=yindex;0<=ref2?j1<ref2:j1>ref2;i=0<=ref2?++j1:--j1){for(;chartab[i].y>y;)accumulator+=printchar("\n"),x=0,y++;for(;chartab[i].x>x;)accumulator+=printchar_nowrap(" "),x++;accumulator+=printchar_nowrap(chartab[i].c),x++}return accumulator},buffer="",getdisplaystr=function(){return yindex=0,level=0,emit_x=0,emit_expr(pop()),fill_buf(),buffer},fill_buf=function(){var i,j1,ref2,sIndex,subsetOfStack,tmpBuffer,x,y;for(tmpBuffer=buffer,sIndex=0,i=0,(subsetOfStack=chartab.slice(0,yindex)).sort(cmpGlyphs),x=0,y=(chartab=[].concat(subsetOfStack).concat(chartab.slice(yindex)))[0].y,i=j1=0,ref2=yindex;0<=ref2?j1<ref2:j1>ref2;i=0<=ref2?++j1:--j1){for(;chartab[i].y>y;)tmpBuffer[sIndex++]="\n",x=0,y++;for(;chartab[i].x>x;)tmpBuffer[sIndex++]=" ",x++;tmpBuffer[sIndex++]=chartab[i].c,x++}return tmpBuffer[sIndex++]="\n"},N=100,oneElement=function(){function oneElement(){}return oneElement.prototype.x=0,oneElement.prototype.y=0,oneElement.prototype.h=0,oneElement.prototype.w=0,oneElement.prototype.index=0,oneElement.prototype.count=0,oneElement}(),elem=[],elelmIndex=j1=0;j1<1e4;elelmIndex=++j1)elem[elelmIndex]=new oneElement;SPACE_BETWEEN_COLUMNS=3,SPACE_BETWEEN_ROWS=1,emit_tensor=function(p){var col,dx,dy,eh,ew,h,i,l1,m1,n,n1,ncol,nrow,o1,ref2,ref3,ref4,ref5,ref6,row,w,x,y;if(i=0,n=0,nrow=0,ncol=0,x=0,y=0,h=0,w=0,dx=0,dy=0,eh=0,ew=0,row=0,col=0,p.tensor.ndim>2)emit_flat_tensor(p);else{if(!((n=(nrow=p.tensor.dim[0])*(ncol=2===p.tensor.ndim?p.tensor.dim[1]:1))>N)){for(x=emit_x,i=l1=0,ref2=n;0<=ref2?l1<ref2:l1>ref2;i=0<=ref2?++l1:--l1)elem[i].index=yindex,elem[i].x=emit_x,emit_expr(p.tensor.elem[i]),elem[i].count=yindex-elem[i].index,ref3=get_size(elem[i].index,yindex),elem[i].h=ref3[0],elem[i].w=ref3[1],elem[i].y=ref3[2];for(eh=0,ew=0,i=m1=0,ref4=n;0<=ref4?m1<ref4:m1>ref4;i=0<=ref4?++m1:--m1)elem[i].h>eh&&(eh=elem[i].h),elem[i].w>ew&&(ew=elem[i].w);for(w=ncol*ew+(ncol-1)*SPACE_BETWEEN_COLUMNS,y=-(h=nrow*eh+(nrow-1)*SPACE_BETWEEN_ROWS)/2,row=n1=0,ref5=nrow;0<=ref5?n1<ref5:n1>ref5;row=0<=ref5?++n1:--n1)for(col=o1=0,ref6=ncol;0<=ref6?o1<ref6:o1>ref6;col=0<=ref6?++o1:--o1)dx=x-elem[i=row*ncol+col].x,dy=y-elem[i].y,move(elem[i].index,elem[i].index+elem[i].count,dx,dy),dx=0,col>0&&(dx=col*(ew+SPACE_BETWEEN_COLUMNS)),dy=0,row>0&&(dy=row*(eh+SPACE_BETWEEN_ROWS)),dx+=(ew-elem[i].w)/2,dy+=(eh-elem[i].h)/2,move(elem[i].index,elem[i].index+elem[i].count,dx,dy);return emit_x=x+w}emit_flat_tensor(p)}},emit_flat_tensor=function(p){return emit_tensor_inner(p,0,0)},emit_tensor_inner=function(p,j,k){var i,l1,ref2;for(i=0,__emit_char("("),i=l1=0,ref2=p.tensor.dim[j];0<=ref2?l1<ref2:l1>ref2;i=0<=ref2?++l1:--l1)j+1===p.tensor.ndim?(emit_expr(p.tensor.elem[k]),k+=1):k=emit_tensor_inner(p,j+1,k),i+1<p.tensor.dim[j]&&__emit_char(",");return __emit_char(")"),k},Eval_product=function(){var body,i,indexVariable,j,k,l1,oldIndexVariableValue,ref2,ref3;if(i=0,j=0,k=0,body=cadr(p1),indexVariable=caddr(p1),issymbol(indexVariable)||stop("sum: 2nd arg?"),push(cadddr(p1)),Eval(),j=pop_integer(),isNaN(j))push(p1);else{if(push(caddddr(p1)),Eval(),k=pop_integer(),!isNaN(k)){for(oldIndexVariableValue=get_binding(indexVariable),push_integer(1),i=l1=ref2=j,ref3=k;ref2<=ref3?l1<=ref3:l1>=ref3;i=ref2<=ref3?++l1:--l1)push_integer(i),p5=pop(),set_binding(indexVariable,p5),push(body),Eval(),DEBUG&&(console.log("product - factor 1: "+stack[tos-1].toString()),console.log("product - factor 2: "+stack[tos-2].toString())),multiply(),DEBUG&&console.log("product - result: "+stack[tos-1].toString());return set_binding(indexVariable,oldIndexVariableValue)}push(p1)}},qadd=function(){var gcdBetweenNumeratorAndDenominator,qadd_ab,qadd_ba,qadd_denominator,qadd_frac1,qadd_frac2,qadd_numerator,resultSum;if(qadd_frac2=pop(),qadd_frac1=pop(),qadd_ab=mmul(qadd_frac1.q.a,qadd_frac2.q.b),qadd_ba=mmul(qadd_frac1.q.b,qadd_frac2.q.a),qadd_numerator=madd(qadd_ab,qadd_ba),!MZERO(qadd_numerator))return qadd_denominator=mmul(qadd_frac1.q.b,qadd_frac2.q.b),gcdBetweenNumeratorAndDenominator=mgcd(qadd_numerator,qadd_denominator),gcdBetweenNumeratorAndDenominator=makeSignSameAs(gcdBetweenNumeratorAndDenominator,qadd_denominator),(resultSum=new U).k=NUM,resultSum.q.a=mdiv(qadd_numerator,gcdBetweenNumeratorAndDenominator),resultSum.q.b=mdiv(qadd_denominator,gcdBetweenNumeratorAndDenominator),push(resultSum);push(zero)},qdiv=function(){var aa,bb,c;return save(),p2=pop(),p1=pop(),MZERO(p2.q.a)&&stop("divide by zero"),MZERO(p1.q.a)?(push(zero),void restore()):(aa=mmul(p1.q.a,p2.q.b),bb=mmul(p1.q.b,p2.q.a),c=mgcd(aa,bb),c=makeSignSameAs(c,bb),(p1=new U).k=NUM,p1.q.a=mdiv(aa,c),p1.q.b=mdiv(bb,c),push(p1),restore())},qmul=function(){var aa,bb,c;return save(),p2=pop(),p1=pop(),MZERO(p1.q.a)||MZERO(p2.q.a)?(push(zero),void restore()):(aa=mmul(p1.q.a,p2.q.a),bb=mmul(p1.q.b,p2.q.b),c=mgcd(aa,bb),c=makeSignSameAs(c,bb),(p1=new U).k=NUM,p1.q.a=mdiv(aa,c),p1.q.b=mdiv(bb,c),push(p1),restore())},qpow=function(){return save(),qpowf(),restore()},qpowf=function(){var a,b,expo,t,x,y;if(expo=0,p2=pop(),p1=pop(),isplusone(p1)||isZeroAtomOrTensor(p2))push_integer(1);else if(isminusone(p1)&&isoneovertwo(p2))push(imaginaryunit);else{if(isZeroAtomOrTensor(p1))return isnegativenumber(p2)&&stop("divide by zero"),void push(zero);if(!isplusone(p2))return isinteger(p2)?(push(p2),expo=pop_integer(),isNaN(expo)?(push_symbol(POWER),push(p1),push(p2),void list(3)):(x=mpow(p1.q.a,Math.abs(expo)),y=mpow(p1.q.b,Math.abs(expo)),expo<0&&(t=x,x=makeSignSameAs(x=y,y=t),y=makePositive(y)),(p3=new U).k=NUM,p3.q.a=x,p3.q.b=y,void push(p3))):isminusone(p1)?(push(p2),void normalize_angle()):isnegativenumber(p1)?(push(p1),negate(),push(p2),qpow(),push_integer(-1),push(p2),qpow(),void multiply()):isinteger(p1)?is_small_integer(p1)?(push(p1),push(p2),void quickfactor()):isSmall(p2.q.a)&&isSmall(p2.q.b)?(a=p2.q.a,b=p2.q.b,0===(x=mroot(p1.q.a,b))?(push_symbol(POWER),push(p1),push(p2),void list(3)):(y=mpow(x,a),(p3=new U).k=NUM,p2.q.a.isNegative()?(p3.q.a=bigInt(1),p3.q.b=y):(p3.q.a=y,p3.q.b=bigInt(1)),push(p3))):(push_symbol(POWER),push(p1),push(p2),void list(3)):(push(p1),mp_numerator(),push(p2),qpow(),push(p1),mp_denominator(),push(p2),negate(),qpow(),void multiply());push(p1)}},normalize_angle=function(){return save(),p1=pop(),isinteger(p1)?(p1.q.a.isOdd()?push_integer(-1):push_integer(1),void restore()):(push(p1),bignum_truncate(),p2=pop(),isnegativenumber(p1)&&(push(p2),push_integer(-1),add(),p2=pop()),push(p1),push(p2),subtract(),p3=pop(),push_symbol(POWER),push_integer(-1),push(p3),list(3),p2.q.a.isOdd()&&negate(),restore())},is_small_integer=function(p){return isSmall(p.q.a)},quickfactor=function(){var h,i,l1,n,ref2,stackIndex;for(i=0,save(),p2=pop(),p1=pop(),h=tos,push(p1),factor_small_number(),stackIndex=h,i=l1=0,ref2=n=tos-h;l1<ref2;i=l1+=2)push(stack[stackIndex+i]),push(stack[stackIndex+i+1]),push(p2),multiply(),quickpower();return multiply_all(tos-h-n),p1=pop(),moveTos(h),push(p1),restore()},quickpower=function(){var expo;return expo=0,save(),p2=pop(),p1=pop(),push(p2),bignum_truncate(),p3=pop(),push(p2),push(p3),subtract(),p4=pop(),isZeroAtomOrTensor(p4)||(push_symbol(POWER),push(p1),push(p4),list(3)),push(p3),expo=pop_integer(),isNaN(expo)?(push_symbol(POWER),push(p1),push(p3),list(3),void restore()):0!==expo?(push(p1),bignum_power_number(expo),restore()):void restore()},Eval_quotient=function(){return push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),push(cadddr(p1)),Eval(),(p1=pop())===symbol(NIL)&&(p1=symbol(SYMBOL_X)),push(p1),divpoly()},divpoly=function(){var dividend,divisor,h,i,l1,m,n,ref2,x;for(h=0,i=0,m=0,n=0,x=0,save(),p3=pop(),p2=pop(),p1=pop(),h=tos,dividend=tos,push(p1),push(p3),m=coeff()-1,divisor=tos,push(p2),push(p3),x=m-(n=coeff()-1),push_integer(0),p5=pop();x>=0;){for(push(stack[dividend+m]),push(stack[divisor+n]),divide(),p4=pop(),i=l1=0,ref2=n;0<=ref2?l1<=ref2:l1>=ref2;i=0<=ref2?++l1:--l1)push(stack[dividend+x+i]),push(stack[divisor+i]),push(p4),multiply(),subtract(),stack[dividend+x+i]=pop();push(p5),push(p4),push(p3),push_integer(x),power(),multiply(),add(),p5=pop(),m--,x--}return moveTos(h),push(p5),restore()},Eval_rationalize=function(){return push(cadr(p1)),Eval(),rationalize()},rationalize=function(){var x;return x=expanding,yyrationalize(),expanding=x},yyrationalize=function(){var commonDenominator,eachTerm,theArgument;if(theArgument=pop(),istensor(theArgument))__rationalize_tensor(theArgument);else{if(expanding=0,car(theArgument)===symbol(ADD)){for(DEBUG&&(printf("rationalize: this is the input expr:\n"),printline(theArgument)),push(one),multiply_denominators(theArgument),commonDenominator=pop(),DEBUG&&(printf("rationalize: this is the common denominator:\n"),printline(commonDenominator)),push(zero),eachTerm=cdr(theArgument);iscons(eachTerm);)push(commonDenominator),push(car(eachTerm)),multiply(),add(),eachTerm=cdr(eachTerm);return DEBUG&&(printf("rationalize: original expr times common denominator:\n"),printline(stack[tos-1])),Condense(),DEBUG&&(printf("rationalize: after factoring:\n"),printline(stack[tos-1])),push(commonDenominator),divide(),DEBUG?(printf("rationalize: after dividing by common denom. (and we're done):\n"),printline(stack[tos-1])):void 0}push(theArgument)}},multiply_denominators=function(p){var results;if(car(p)===symbol(ADD)){for(p=cdr(p),results=[];iscons(p);)multiply_denominators_term(car(p)),results.push(p=cdr(p));return results}return multiply_denominators_term(p)},multiply_denominators_term=function(p){var results;if(car(p)===symbol(MULTIPLY)){for(p=cdr(p),results=[];iscons(p);)multiply_denominators_factor(car(p)),results.push(p=cdr(p));return results}return multiply_denominators_factor(p)},multiply_denominators_factor=function(p){if(car(p)===symbol(POWER))return push(p),p=caddr(p),isnegativenumber(p)?(inverse(),void __lcm()):car(p)===symbol(MULTIPLY)&&isnegativenumber(cadr(p))?(inverse(),void __lcm()):pop()},__rationalize_tensor=function(theTensor){var i,l1,n,ref2;if(i=0,push(theTensor),Eval(),theTensor=pop(),istensor(theTensor)){for(i=l1=0,ref2=n=theTensor.tensor.nelem;0<=ref2?l1<ref2:l1>ref2;i=0<=ref2?++l1:--l1)push(theTensor.tensor.elem[i]),rationalize(),theTensor.tensor.elem[i]=pop();return check_tensor_dimensions(theTensor),push(theTensor)}push(theTensor)},__lcm=function(){return save(),p1=pop(),p2=pop(),push(p1),push(p2),multiply(),push(p1),push(p2),gcd(),divide(),restore()},Eval_real=function(){return push(cadr(p1)),Eval(),real()},real=function(){return save(),rect(),p1=pop(),push(p1),push(p1),conjugate(),add(),push_integer(2),divide(),restore()},DEBUG_RECT=!1,Eval_rect=function(){return push(cadr(p1)),Eval(),rect()},rect=function(){var input;if(save(),input=p1=pop(),DEBUG_RECT&&console.log("RECT of "+input),DEBUG_RECT&&console.log("any clock forms in : "+input+" ? "+findPossibleClockForm(input)),issymbol(p1))DEBUG_RECT&&console.log(" rect: simple symbol: "+input),isZeroAtomOrTensor(get_binding(symbol(ASSUME_REAL_VARIABLES)))?(push_symbol(YYRECT),push(p1),list(2)):push(p1);else if(isZeroAtomOrTensor(get_binding(symbol(ASSUME_REAL_VARIABLES)))||findPossibleExponentialForm(p1)||findPossibleClockForm(p1)||Find(p1,symbol(SIN))&&Find(p1,symbol(COS))&&Find(p1,imaginaryunit))if(car(p1)===symbol(MULTIPLY)&&isimaginaryunit(cadr(p1))&&!isZeroAtomOrTensor(get_binding(symbol(ASSUME_REAL_VARIABLES))))push(p1);else if(car(p1)===symbol(ADD))for(DEBUG_RECT&&console.log(" rect - "+input+" is a sum "),push_integer(0),p1=cdr(p1);iscons(p1);)push(car(p1)),rect(),add(),p1=cdr(p1);else DEBUG_RECT&&console.log(" rect - "+input+" is NOT a sum "),push(p1),abs(),DEBUG_RECT&&console.log(" rect - "+input+" abs: "+stack[tos-1].toString()),push(p1),arg(),DEBUG_RECT&&console.log(" rect - "+input+" arg of "+p1+" : "+stack[tos-1].toString()),p1=pop(),push(p1),cosine(),DEBUG_RECT&&console.log(" rect - "+input+" cosine: "+stack[tos-1].toString()),push(imaginaryunit),push(p1),sine(),DEBUG_RECT&&console.log(" rect - "+input+" sine: "+stack[tos-1].toString()),multiply(),DEBUG_RECT&&console.log(" rect - "+input+" i * sine: "+stack[tos-1].toString()),add(),DEBUG_RECT&&console.log(" rect - "+input+" cos + i * sine: "+stack[tos-1].toString()),multiply();else DEBUG_RECT&&console.log(" rect: simple symbol: "+input),push(p1);if(restore(),DEBUG_RECT)return console.log("rect of "+input+" : "+stack[tos-1])},show_power_debug=!1,performing_roots=!1,Eval_roots=function(){return p2=cadr(p1),car(p2)===symbol(SETQ)||car(p2)===symbol(TESTEQ)?(push(cadr(p2)),Eval(),push(caddr(p2)),Eval(),subtract()):(push(p2),Eval(),p2=pop(),car(p2)===symbol(SETQ)||car(p2)===symbol(TESTEQ)?(push(cadr(p2)),Eval(),push(caddr(p2)),Eval(),subtract()):push(p2)),push(caddr(p1)),Eval(),(p2=pop())===symbol(NIL)?guess():push(p2),p2=pop(),p1=pop(),ispolyexpandedform(p1,p2)||stop("roots: 1st argument is not a polynomial"),push(p1),push(p2),roots()},hasImaginaryCoeff=function(k){var h,i,imaginaryCoefficients,l1,ref2;for(imaginaryCoefficients=!1,h=tos,i=l1=ref2=k;l1>0;i=l1+=-1)if(iscomplexnumber(stack[tos-i])){imaginaryCoefficients=!0;break}return imaginaryCoefficients},isSimpleRoot=function(k){var h,i,isSimpleRootPolynomial,l1,ref2;if(k>2){for(isSimpleRootPolynomial=!0,h=tos,isZeroAtomOrTensor(stack[tos-k])&&(isSimpleRootPolynomial=!1),i=l1=ref2=k-1;l1>1;i=l1+=-1)if(!isZeroAtomOrTensor(stack[tos-i])){isSimpleRootPolynomial=!1;break}}else isSimpleRootPolynomial=!1;return isSimpleRootPolynomial},normalisedCoeff=function(){var divideBy,i,k,l1,m1,miniStack,ref2,ref3;for(k=coeff(),divideBy=stack[tos-1],miniStack=[],i=l1=1,ref2=k;1<=ref2?l1<=ref2:l1>=ref2;i=1<=ref2?++l1:--l1)miniStack.push(pop());for(i=m1=ref3=k-1;ref3<=0?m1<=0:m1>=0;i=ref3<=0?++m1:--m1)push(miniStack[i]),push(divideBy),divide();return k},roots=function(){var h,i,k,l1,lastCoeff,leadingCoeff,n,ref2;if(h=0,i=0,n=0,save(),recursionLevelNestedRadicalsRemoval>1)return pop(),pop(),push(symbol(NIL)),void restore();if(performing_roots=!0,h=tos-2,DEBUG&&console.log("checking if "+stack[tos-1].toString()+" is a case of simple roots"),p2=pop(),p1=pop(),push(p1),push(p2),push(p1),push(p2),k=normalisedCoeff(),isSimpleRoot(k)?(DEBUG&&console.log("yes, "+stack[tos-1].toString()+" is a case of simple roots"),lastCoeff=stack[tos-k],leadingCoeff=stack[tos-1],moveTos(tos-k),pop(),pop(),getSimpleRoots(k,leadingCoeff,lastCoeff)):(moveTos(tos-k),roots2()),0===(n=tos-h)&&stop("roots: the polynomial is not factorable, try nroots"),1===n)return performing_roots=!1,void restore();for(sort_stack(n),(p1=alloc_tensor(n)).tensor.ndim=1,p1.tensor.dim[0]=n,i=l1=0,ref2=n;0<=ref2?l1<ref2:l1>ref2;i=0<=ref2?++l1:--l1)p1.tensor.elem[i]=stack[h+i];return moveTos(h),push(p1),restore(),performing_roots=!1},getSimpleRoots=function(n,leadingCoeff,lastCoeff){var aSol,commonPart,l1,m1,ref2,ref3,rootsOfOne;if(DEBUG&&console.log("getSimpleRoots"),save(),n-=1,push(lastCoeff),push_rational(1,n),power(),push(leadingCoeff),push_rational(1,n),power(),divide(),commonPart=pop(),n%2==0)for(rootsOfOne=l1=1,ref2=n;l1<=ref2;rootsOfOne=l1+=2)push(commonPart),push_integer(-1),push_rational(rootsOfOne,n),power(),multiply(),aSol=pop(),push(aSol),push(aSol),negate();else for(rootsOfOne=m1=1,ref3=n;1<=ref3?m1<=ref3:m1>=ref3;rootsOfOne=1<=ref3?++m1:--m1)push(commonPart),push_integer(-1),push_rational(rootsOfOne,n),power(),multiply(),rootsOfOne%2==0&&negate();return restore()},roots2=function(){var k;if(save(),p2=pop(),p1=pop(),push(p1),push(p2),push(p1),push(p2),k=normalisedCoeff(),hasImaginaryCoeff(k)?(moveTos(tos-k),pop(),pop()):(moveTos(tos-k),factorpoly(),p1=pop()),car(p1)===symbol(MULTIPLY))for(p1=cdr(p1);iscons(p1);)push(car(p1)),push(p2),roots3(),p1=cdr(p1);else push(p1),push(p2),roots3();return restore()},roots3=function(){var n;return save(),p2=pop(),p1=pop(),car(p1)===symbol(POWER)&&ispolyexpandedform(cadr(p1),p2)&&isposint(caddr(p1))?(push(cadr(p1)),push(p2),n=normalisedCoeff(),mini_solve(n)):ispolyexpandedform(p1,p2)&&(push(p1),push(p2),n=normalisedCoeff(),mini_solve(n)),restore()},mini_solve=function(n){var C_CHECKED_AS_NOT_ZERO,Q_CHECKED_AS_NOT_ZERO,R_18_a_b_c_d,R_27_a2_d,R_2_b3,R_3_a,R_3_a_C,R_3_a_c,R_4_DELTA03,R_6_a,R_6_a_C,R_C,R_C_over_3a,R_C_simplified_toCheckIfZero,R_DELTA0,R_DELTA0_simplified_toCheckIfZero,R_DELTA0_toBeCheckedIfZero,R_DELTA1,R_Q,R_Q_simplified_toCheckIfZero,R_S,R_S_simplified_toCheckIfZero,R_a2,R_a2_d,R_a2_d2,R_a3,R_a_b_c,R_a_b_c_d,R_a_c,R_b2,R_b2_c2,R_b3,R_b3_d,R_c2,R_c3,R_d2,R_determinant,R_determinant_simplified_toCheckIfZero,R_e2,R_e3,R_m,R_m27_a2_d2,R_m4_a_c3,R_m4_b3_d,R_m9_a_b_c,R_m_b_over_3a,R_minus_4S2_minus_2p,R_minus_b_over_4a,R_p,R_principalCubicRoot,R_q,R_q_over_S,R_r,S_CHECKED_AS_NOT_ZERO,ThreePPlus2M,TwoQOversqrtPPlus2M,biquadraticSolutions,choiceOfRadicalInQSoSIsNotZero,coeff2,coeff3,coeff4,depressedSolutions,eachSolution,flipSignOFQSoCIsNotZero,flipSignOFRadicalSoQIsNotZero,i_sqrt3,l1,len,len1,len2,m1,n1,one_minus_i_sqrt3,one_plus_i_sqrt3,ref2,ref3,ref4,resolventCubicSolutions,root_solution,sqrtPPlus2M,toBeCheckedIFZero;if(save(),2===n)return p3=pop(),p4=pop(),push(p4),push(p3),divide(),negate(),void restore();if(3===n)return p3=pop(),p4=pop(),p5=pop(),push(p4),push_integer(2),power(),push_integer(4),push(p3),multiply(),push(p5),multiply(),subtract(),push_rational(1,2),power(),p6=pop(),push(p6),push(p4),subtract(),push(p3),push_integer(2),multiply(),divide(),push(p6),push(p4),add(),negate(),push(p3),divide(),push_rational(1,2),multiply(),void restore();if(4===n||5===n){if(p3=pop(),p4=pop(),p5=pop(),p6=pop(),push(p5),push(p5),multiply(),R_c2=pop(),push(R_c2),push(p5),multiply(),R_c3=pop(),push(p4),push(p4),multiply(),R_b2=pop(),push(R_b2),push(p4),multiply(),R_b3=pop(),push(R_b3),push(p6),multiply(),R_b3_d=pop(),push(R_b3_d),push_integer(-4),multiply(),R_m4_b3_d=pop(),push(R_b3),push_integer(2),multiply(),R_2_b3=pop(),push(p3),push(p3),multiply(),R_a2=pop(),push(R_a2),push(p3),multiply(),R_a3=pop(),push_integer(3),push(p3),multiply(),R_3_a=pop(),push(R_a2),push(p6),multiply(),R_a2_d=pop(),push(R_a2_d),push(p6),multiply(),R_a2_d2=pop(),push(R_a2_d),push_integer(27),multiply(),R_27_a2_d=pop(),push(R_a2_d2),push_integer(-27),multiply(),R_m27_a2_d2=pop(),push(R_3_a),push_integer(2),multiply(),R_6_a=pop(),push(p3),push(p5),multiply(),R_a_c=pop(),push(R_a_c),push(p4),multiply(),R_a_b_c=pop(),push(R_a_b_c),push(p6),multiply(),R_a_b_c_d=pop(),push(R_a_c),push_integer(3),multiply(),R_3_a_c=pop(),push_integer(-4),push(p3),push(R_c3),multiply(),multiply(),R_m4_a_c3=pop(),push(R_a_b_c),push_integer(9),multiply(),negate(),R_m9_a_b_c=pop(),push(R_a_b_c_d),push_integer(18),multiply(),R_18_a_b_c_d=pop(),push(R_b2),push(R_3_a_c),subtract(),R_DELTA0=pop(),push(R_b2),push(R_c2),multiply(),R_b2_c2=pop(),push(p4),negate(),push(R_3_a),divide(),R_m_b_over_3a=pop(),4===n){if(DEBUG&&console.log(">>>>>>>>>>>>>>>> actually using cubic formula <<<<<<<<<<<<<<< "),DEBUG&&console.log("cubic: D0: "+R_DELTA0.toString()),push(R_DELTA0),push_integer(3),power(),push_integer(4),multiply(),R_4_DELTA03=pop(),push(R_DELTA0),simplify(),absValFloat(),R_DELTA0_toBeCheckedIfZero=pop(),DEBUG&&console.log("cubic: D0 as float: "+R_DELTA0_toBeCheckedIfZero.toString()),push(R_18_a_b_c_d),push(R_m4_b3_d),push(R_b2_c2),push(R_m4_a_c3),push(R_m27_a2_d2),add(),add(),add(),add(),simplify(),absValFloat(),R_determinant=pop(),DEBUG&&console.log("cubic: DETERMINANT: "+R_determinant.toString()),push(R_2_b3),push(R_m9_a_b_c),push(R_27_a2_d),add(),add(),R_DELTA1=pop(),DEBUG&&console.log("cubic: D1: "+R_DELTA1.toString()),push(R_DELTA1),push_integer(2),power(),push(R_4_DELTA03),subtract(),push_rational(1,2),power(),simplify(),R_Q=pop(),isZeroAtomOrTensor(R_determinant))return isZeroAtomOrTensor(R_DELTA0_toBeCheckedIfZero)?(DEBUG&&console.log(" cubic: DETERMINANT IS ZERO and delta0 is zero"),push(R_m_b_over_3a),void restore()):(DEBUG&&console.log(" cubic: DETERMINANT IS ZERO and delta0 is not zero"),push(p3),push(p6),push_integer(9),multiply(),multiply(),push(p4),push(p5),multiply(),subtract(),push(R_DELTA0),push_integer(2),multiply(),divide(),root_solution=pop(),push(root_solution),push(root_solution),push(R_a_b_c),push_integer(4),multiply(),push(p3),push(p3),push(p6),push_integer(9),multiply(),multiply(),multiply(),negate(),push(R_b3),negate(),add(),add(),push(p3),push(R_DELTA0),multiply(),divide(),void restore());for(C_CHECKED_AS_NOT_ZERO=!1,flipSignOFQSoCIsNotZero=!1;!C_CHECKED_AS_NOT_ZERO;)push(R_Q),flipSignOFQSoCIsNotZero&&negate(),push(R_DELTA1),add(),push_rational(1,2),multiply(),push_rational(1,3),power(),simplify(),R_C=pop(),DEBUG&&console.log("cubic: C: "+R_C.toString()),push(R_C),simplify(),absValFloat(),R_C_simplified_toCheckIfZero=pop(),DEBUG&&console.log("cubic: C as absval and float: "+R_C_simplified_toCheckIfZero.toString()),isZeroAtomOrTensor(R_C_simplified_toCheckIfZero)?(DEBUG&&console.log(" cubic: C IS ZERO flipping the sign"),flipSignOFQSoCIsNotZero=!0):C_CHECKED_AS_NOT_ZERO=!0;return push(R_C),push(R_3_a),multiply(),R_3_a_C=pop(),push(R_3_a_C),push_integer(2),multiply(),R_6_a_C=pop(),push(imaginaryunit),push_integer(3),push_rational(1,2),power(),multiply(),i_sqrt3=pop(),push_integer(1),push(i_sqrt3),add(),one_plus_i_sqrt3=pop(),push_integer(1),push(i_sqrt3),subtract(),one_minus_i_sqrt3=pop(),push(R_C),push(R_3_a),divide(),R_C_over_3a=pop(),push(R_m_b_over_3a),push(R_C_over_3a),negate(),push(R_DELTA0),push(R_3_a_C),divide(),negate(),add(),add(),simplify(),push(R_m_b_over_3a),push(R_C_over_3a),push(one_plus_i_sqrt3),multiply(),push_integer(2),divide(),push(one_minus_i_sqrt3),push(R_DELTA0),multiply(),push(R_6_a_C),divide(),add(),add(),simplify(),push(R_m_b_over_3a),push(R_C_over_3a),push(one_minus_i_sqrt3),multiply(),push_integer(2),divide(),push(one_plus_i_sqrt3),push(R_DELTA0),multiply(),push(R_6_a_C),divide(),add(),add(),simplify(),void restore()}if(5===n){if(DEBUG&&console.log(">>>>>>>>>>>>>>>> actually using quartic formula <<<<<<<<<<<<<<< "),p7=pop(),isZeroAtomOrTensor(p4)&&isZeroAtomOrTensor(p6)&&!isZeroAtomOrTensor(p5)&&!isZeroAtomOrTensor(p7)){for(DEBUG&&console.log("biquadratic case"),push(p3),push(symbol(SECRETX)),push_integer(2),power(),multiply(),push(p5),push(symbol(SECRETX)),multiply(),push(p7),add(),add(),push(symbol(SECRETX)),roots(),l1=0,len=(ref2=(biquadraticSolutions=pop()).tensor.elem).length;l1<len;l1++)eachSolution=ref2[l1],push(eachSolution),push_rational(1,2),power(),simplify(),push(eachSolution),push_rational(1,2),power(),negate(),simplify();return void restore()}if(push(p6),push(p6),multiply(),R_d2=pop(),push(p7),push(p7),multiply(),R_e2=pop(),push(R_e2),push(p7),multiply(),R_e3=pop(),push_integer(256),push(R_a3),push(R_e3),multiply(),multiply(),push_integer(-192),push(R_a2_d),push(R_e2),push(p4),multiply(),multiply(),multiply(),push_integer(-128),push(R_a2),push(R_c2),push(R_e2),multiply(),multiply(),multiply(),push_integer(144),push(R_a2_d2),push(p5),push(p7),multiply(),multiply(),multiply(),push(R_m27_a2_d2),push(R_d2),multiply(),push_integer(144),push(R_a_b_c),push(p4),push(R_e2),multiply(),multiply(),multiply(),push_integer(-6),push(p3),push(R_b2),push(R_d2),push(p7),multiply(),multiply(),multiply(),multiply(),push_integer(-80),push(R_a_b_c_d),push(p5),push(p7),multiply(),multiply(),multiply(),push_integer(18),push(R_a_b_c_d),push(R_d2),multiply(),multiply(),push_integer(16),push(R_a_c),push(R_c3),push(p7),multiply(),multiply(),multiply(),push_integer(-4),push(R_a_c),push(R_c2),push(R_d2),multiply(),multiply(),multiply(),push_integer(-27),push(R_b3),push(p4),push(R_e2),multiply(),multiply(),multiply(),push_integer(18),push(R_b3_d),push(p5),push(p7),multiply(),multiply(),multiply(),push(R_m4_b3_d),push(R_d2),multiply(),push_integer(-4),push(R_b2_c2),push(p5),push(p7),multiply(),multiply(),multiply(),push(R_b2_c2),push(R_d2),multiply(),add(),add(),add(),add(),add(),add(),add(),add(),add(),add(),add(),add(),add(),add(),add(),R_determinant=pop(),DEBUG&&console.log("R_determinant: "+R_determinant.toString()),push(R_c2),push_integer(-3),push(p4),push(p6),multiply(),multiply(),push_integer(12),push(p3),push(p7),multiply(),multiply(),add(),add(),R_DELTA0=pop(),DEBUG&&console.log("R_DELTA0: "+R_DELTA0.toString()),push_integer(2),push(R_c3),multiply(),push_integer(-9),push(p4),push(p5),push(p6),multiply(),multiply(),multiply(),push_integer(27),push(R_b2),push(p7),multiply(),multiply(),push_integer(27),push(p3),push(R_d2),multiply(),multiply(),push_integer(-72),push(R_a_c),push(p7),multiply(),multiply(),add(),add(),add(),add(),R_DELTA1=pop(),DEBUG&&console.log("R_DELTA1: "+R_DELTA1.toString()),push_integer(8),push(R_a_c),multiply(),push_integer(-3),push(R_b2),multiply(),add(),push_integer(8),push(R_a2),multiply(),divide(),R_p=pop(),DEBUG&&console.log("p: "+R_p.toString()),push(R_b3),push_integer(-4),push(R_a_b_c),multiply(),push_integer(8),push(R_a2_d),multiply(),add(),add(),push_integer(8),push(R_a3),multiply(),divide(),R_q=pop(),DEBUG&&console.log("q: "+R_q.toString()),DEBUG&&console.log("tos 1 "+tos),isZeroAtomOrTensor(p4)){for(R_p=p5,R_q=p6,R_r=p7,push_rational(5,2),push(R_p),multiply(),coeff2=pop(),push_integer(2),push(R_p),push_integer(2),power(),multiply(),push(R_r),subtract(),coeff3=pop(),push(R_p),push_integer(3),power(),push_integer(2),divide(),push_rational(-1,2),push(R_p),push(R_r),multiply(),multiply(),push_rational(-1,8),push(R_q),push_integer(2),power(),multiply(),add(),add(),coeff4=pop(),push(symbol(SECRETX)),push_integer(3),power(),push(coeff2),push(symbol(SECRETX)),push_integer(2),power(),multiply(),push(coeff3),push(symbol(SECRETX)),multiply(),push(coeff4),add(),add(),add(),DEBUG&&console.log("resolventCubic: "+stack[tos-1].toString()),push(symbol(SECRETX)),roots(),resolventCubicSolutions=pop(),DEBUG&&console.log("resolventCubicSolutions: "+resolventCubicSolutions),R_m=null,n1=0,len2=(ref4=resolventCubicSolutions.tensor.elem).length;n1<len2;n1++)if(eachSolution=ref4[n1],DEBUG&&console.log("examining solution: "+eachSolution),push(eachSolution),push_integer(2),multiply(),push(R_p),add(),absValFloat(),toBeCheckedIFZero=pop(),DEBUG&&console.log("abs value is: "+eachSolution),!isZeroAtomOrTensor(toBeCheckedIFZero)){R_m=eachSolution;break}return DEBUG&&console.log("chosen solution: "+R_m),push(R_m),push_integer(2),multiply(),push(R_p),add(),push_rational(1,2),power(),simplify(),sqrtPPlus2M=pop(),push(R_q),push_integer(2),multiply(),push(sqrtPPlus2M),divide(),simplify(),TwoQOversqrtPPlus2M=pop(),push(R_p),push_integer(3),multiply(),push(R_m),push_integer(2),multiply(),add(),ThreePPlus2M=pop(),push(sqrtPPlus2M),push(ThreePPlus2M),push(TwoQOversqrtPPlus2M),add(),negate(),push_rational(1,2),power(),simplify(),add(),push_integer(2),divide(),push(sqrtPPlus2M),push(ThreePPlus2M),push(TwoQOversqrtPPlus2M),add(),negate(),push_rational(1,2),power(),simplify(),subtract(),push_integer(2),divide(),push(sqrtPPlus2M),negate(),push(ThreePPlus2M),push(TwoQOversqrtPPlus2M),subtract(),negate(),push_rational(1,2),power(),simplify(),add(),push_integer(2),divide(),push(sqrtPPlus2M),negate(),push(ThreePPlus2M),push(TwoQOversqrtPPlus2M),subtract(),negate(),push_rational(1,2),power(),simplify(),subtract(),push_integer(2),divide(),void restore()}for(DEBUG&&console.log("tos 2 "+tos),push_integer(8),push(p5),push(p3),multiply(),multiply(),push_integer(-3),push(p4),push_integer(2),power(),multiply(),add(),push_integer(8),push(p3),push_integer(2),power(),multiply(),divide(),R_p=pop(),DEBUG&&console.log("p for depressed quartic: "+R_p.toString()),push(p4),push_integer(3),power(),push_integer(-4),push(p3),push(p4),push(p5),multiply(),multiply(),multiply(),push_integer(8),push(p6),push(p3),push_integer(2),power(),multiply(),multiply(),add(),add(),push_integer(8),push(p3),push_integer(3),power(),multiply(),divide(),R_q=pop(),DEBUG&&console.log("q for depressed quartic: "+R_q.toString()),push(p4),push_integer(4),power(),push_integer(-3),multiply(),push_integer(256),push(R_a3),push(p7),multiply(),multiply(),push_integer(-64),push(R_a2_d),push(p4),multiply(),multiply(),push_integer(16),push(R_b2),push(p3),push(p5),multiply(),multiply(),multiply(),add(),add(),add(),push_integer(256),push(p3),push_integer(4),power(),multiply(),divide(),R_r=pop(),DEBUG&&console.log("r for depressed quartic: "+R_r.toString()),DEBUG&&console.log("tos 4 "+tos),push(symbol(SECRETX)),push_integer(4),power(),DEBUG&&console.log("4 * x^4: "+stack[tos-1].toString()),push(R_p),push(symbol(SECRETX)),push_integer(2),power(),multiply(),DEBUG&&console.log("R_p * x^2: "+stack[tos-1].toString()),push(R_q),push(symbol(SECRETX)),multiply(),DEBUG&&console.log("R_q * x: "+stack[tos-1].toString()),push(R_r),DEBUG&&console.log("R_r: "+stack[tos-1].toString()),add(),add(),add(),simplify(),DEBUG&&console.log("solving depressed quartic: "+stack[tos-1].toString()),push(symbol(SECRETX)),roots(),depressedSolutions=pop(),DEBUG&&console.log("depressedSolutions: "+depressedSolutions),m1=0,len1=(ref3=depressedSolutions.tensor.elem).length;m1<len1;m1++)eachSolution=ref3[m1],push(eachSolution),push(p4),push_integer(4),push(p3),multiply(),divide(),subtract(),simplify(),DEBUG&&console.log("solution from depressed: "+stack[tos-1].toString());return void restore()}}return moveTos(tos-n),restore()},Eval_round=function(){return push(cadr(p1)),Eval(),yround()},yround=function(){return save(),yyround(),restore()},yyround=function(){var d;return d=0,p1=pop(),isNumericAtom(p1)?isdouble(p1)?(d=Math.round(p1.d),void push_double(d)):isinteger(p1)?void push(p1):(push(p1),yyfloat(),p1=pop(),push_integer(Math.round(p1.d))):(push_symbol(ROUND),push(p1),void list(2))},T_INTEGER=1001,T_DOUBLE=1002,T_SYMBOL=1003,T_FUNCTION=1004,T_NEWLINE=1006,T_STRING=1007,T_GTEQ=1008,T_LTEQ=1009,T_EQ=1010,T_NEQ=1011,T_QUOTASSIGN=1012,token="",newline_flag=0,meta_mode=0,input_str=0,scan_str=0,token_str=0,token_buf=0,lastFoundSymbol=null,symbolsRightOfAssignment=null,symbolsLeftOfAssignment=null,isSymbolLeftOfAssignment=null,scanningParameters=null,functionInvokationsScanningStack=null,skipRootVariableToBeSolved=!1,assignmentFound=null,scanned="",scan=function(s){return DEBUG&&console.log("#### scanning "+s),lastFoundSymbol=null,symbolsRightOfAssignment=[],symbolsLeftOfAssignment=[],isSymbolLeftOfAssignment=!0,scanningParameters=[],functionInvokationsScanningStack=[""],assignmentFound=!1,scanned=s,meta_mode=0,expanding++,input_str=0,scan_str=0,get_next_token(),""===token?(push(symbol(NIL)),expanding--,0):(scan_stmt(),expanding--,assignmentFound||(symbolsInExpressionsWithoutAssignments=symbolsInExpressionsWithoutAssignments.concat(symbolsLeftOfAssignment)),token_str-input_str)},scan_meta=function(s){return scanned=s,meta_mode=1,expanding++,input_str=0,scan_str=0,get_next_token(),""===token?(push(symbol(NIL)),expanding--,0):(scan_stmt(),expanding--,token_str-input_str)},scan_stmt=function(){var assignmentIsOfQuotedType,existingDependencies,i,indexOfSymbolLeftOfAssignment,l1,len,len1,m1,symbolLeftOfAssignment;if(scan_relation(),assignmentIsOfQuotedType=!1,token===T_QUOTASSIGN&&(assignmentIsOfQuotedType=!0),(token===T_QUOTASSIGN||"="===token)&&(symbolLeftOfAssignment=lastFoundSymbol,DEBUG&&console.log("assignment!"),assignmentFound=!0,isSymbolLeftOfAssignment=!1,get_next_token(),push_symbol(SETQ),swap(),assignmentIsOfQuotedType&&push_symbol(QUOTE),scan_relation(),assignmentIsOfQuotedType&&list(2),list(3),isSymbolLeftOfAssignment=!0,codeGen)){if(-1!==(indexOfSymbolLeftOfAssignment=symbolsRightOfAssignment.indexOf(symbolLeftOfAssignment))&&(symbolsRightOfAssignment.splice(indexOfSymbolLeftOfAssignment,1),symbolsHavingReassignments.push(symbolLeftOfAssignment)),DEBUG)for(console.log("locally, "+symbolLeftOfAssignment+" depends on: "),l1=0,len=symbolsRightOfAssignment.length;l1<len;l1++)i=symbolsRightOfAssignment[l1],console.log("  "+i);for(null==symbolsDependencies[symbolLeftOfAssignment]&&(symbolsDependencies[symbolLeftOfAssignment]=[]),existingDependencies=symbolsDependencies[symbolLeftOfAssignment],m1=0,len1=symbolsRightOfAssignment.length;m1<len1;m1++)i=symbolsRightOfAssignment[m1],-1===existingDependencies.indexOf(i)&&existingDependencies.push(i);return symbolsRightOfAssignment=[]}},scan_relation=function(){switch(scan_expression(),token){case T_EQ:return push_symbol(TESTEQ),swap(),get_next_token(),scan_expression(),list(3);case T_NEQ:return push_symbol(NOT),swap(),push_symbol(TESTEQ),swap(),get_next_token(),scan_expression(),list(3),list(2);case T_LTEQ:return push_symbol(TESTLE),swap(),get_next_token(),scan_expression(),list(3);case T_GTEQ:return push_symbol(TESTGE),swap(),get_next_token(),scan_expression(),list(3);case"<":return push_symbol(TESTLT),swap(),get_next_token(),scan_expression(),list(3);case">":return push_symbol(TESTGT),swap(),get_next_token(),scan_expression(),list(3)}},scan_expression=function(){var h;switch(h=tos,token){case"+":get_next_token(),scan_term();break;case"-":get_next_token(),scan_term(),negate();break;default:scan_term()}for(;0===newline_flag&&("+"===token||"-"===token);)"+"===token?(get_next_token(),scan_term()):(get_next_token(),scan_term(),negate());if(tos-h>1)return list(tos-h),push_symbol(ADD),swap(),cons()},is_factor=function(){if(("function"==typeof token.charCodeAt?token.charCodeAt(0):void 0)===dotprod_unicode)return 1;switch(token){case"*":case"/":return 1;case"(":case T_SYMBOL:case T_FUNCTION:case T_INTEGER:case T_DOUBLE:case T_STRING:return newline_flag?(scan_str=token_str,0):1}return 0},simplify_1_in_products=function(tos,h){if(tos>h&&isrational(stack[tos-1])&&equaln(stack[tos-1],1))return pop()},multiply_consecutive_constants=function(tos,h){if(tos>h+1&&isNumericAtom(stack[tos-2])&&isNumericAtom(stack[tos-1]))return multiply()},scan_term=function(){var h;for(h=tos,scan_factor(),parse_time_simplifications&&simplify_1_in_products(tos,h);is_factor();)"*"===token?(get_next_token(),scan_factor()):"/"===token?(simplify_1_in_products(tos,h),get_next_token(),scan_factor(),inverse()):("function"==typeof token.charCodeAt?token.charCodeAt(0):void 0)===dotprod_unicode?(get_next_token(),push_symbol(INNER),swap(),scan_factor(),list(3)):scan_factor(),parse_time_simplifications&&(multiply_consecutive_constants(tos,h),simplify_1_in_products(tos,h));return h===tos?push_integer(1):tos-h>1?(list(tos-h),push_symbol(MULTIPLY),swap(),cons()):void 0},scan_power=function(){if("^"===token)return get_next_token(),push_symbol(POWER),swap(),scan_factor(),list(3)},scan_index=function(h){for(get_next_token(),push_symbol(INDEX),swap(),scan_expression();","===token;)get_next_token(),scan_expression();return"]"!==token&&scan_error("] expected"),get_next_token(),list(tos-h)},scan_factor=function(){var firstFactorIsNumber,h;for(h=tos,firstFactorIsNumber=!1,"("===token?scan_subexpr():token===T_SYMBOL?scan_symbol():token===T_FUNCTION?scan_function_call_with_function_name():"["===token?scan_tensor():token===T_INTEGER?(firstFactorIsNumber=!0,bignum_scan_integer(token_buf),get_next_token()):token===T_DOUBLE?(firstFactorIsNumber=!0,bignum_scan_float(token_buf),get_next_token()):token===T_STRING?scan_string():scan_error("syntax error");"["===token||"("===token&&0===newline_flag&&!firstFactorIsNumber;)"["===token?scan_index(h):"("===token&&scan_function_call_without_function_name();for(;"!"===token;)get_next_token(),push_symbol(FACTORIAL),swap(),list(2);for(;("function"==typeof token.charCodeAt?token.charCodeAt(0):void 0)===transpose_unicode;)get_next_token(),push_symbol(TRANSPOSE),swap(),list(2);return scan_power()},addSymbolRightOfAssignment=function(theSymbol){var i,l1,prefixVar,ref2;if(-1===predefinedSymbolsInGlobalScope_doNotTrackInDependencies.indexOf(theSymbol)&&-1===symbolsRightOfAssignment.indexOf(theSymbol)&&-1===symbolsRightOfAssignment.indexOf("'"+theSymbol)&&!skipRootVariableToBeSolved){for(DEBUG&&console.log("... adding symbol: "+theSymbol+" to the set of the symbols right of assignment"),prefixVar="",i=l1=1,ref2=functionInvokationsScanningStack.length;1<=ref2?l1<ref2:l1>ref2;i=1<=ref2?++l1:--l1)""!==functionInvokationsScanningStack[i]&&(prefixVar+=functionInvokationsScanningStack[i]+"_"+i+"_");return theSymbol=prefixVar+theSymbol,symbolsRightOfAssignment.push(theSymbol)}},addSymbolLeftOfAssignment=function(theSymbol){var i,l1,prefixVar,ref2;if(-1===predefinedSymbolsInGlobalScope_doNotTrackInDependencies.indexOf(theSymbol)&&-1===symbolsLeftOfAssignment.indexOf(theSymbol)&&-1===symbolsLeftOfAssignment.indexOf("'"+theSymbol)&&!skipRootVariableToBeSolved){for(DEBUG&&console.log("... adding symbol: "+theSymbol+" to the set of the symbols left of assignment"),prefixVar="",i=l1=1,ref2=functionInvokationsScanningStack.length;1<=ref2?l1<ref2:l1>ref2;i=1<=ref2?++l1:--l1)""!==functionInvokationsScanningStack[i]&&(prefixVar+=functionInvokationsScanningStack[i]+"_"+i+"_");return theSymbol=prefixVar+theSymbol,symbolsLeftOfAssignment.push(theSymbol)}},scan_symbol=function(){if(token!==T_SYMBOL&&scan_error("symbol expected"),meta_mode&&1===token_buf.length)switch(token_buf[0]){case"a":push(symbol(METAA));break;case"b":push(symbol(METAB));break;case"x":push(symbol(METAX));break;default:push(usr_symbol(token_buf))}else push(usr_symbol(token_buf));return 0===scanningParameters.length?(DEBUG&&console.log("out of scanning parameters, processing "+token_buf),lastFoundSymbol=token_buf,isSymbolLeftOfAssignment&&addSymbolLeftOfAssignment(token_buf)):(DEBUG&&console.log("still scanning parameters, skipping "+token_buf),isSymbolLeftOfAssignment&&addSymbolRightOfAssignment("'"+token_buf)),DEBUG&&console.log("found symbol: "+token_buf+" left of assignment: "+isSymbolLeftOfAssignment),isSymbolLeftOfAssignment||addSymbolRightOfAssignment(token_buf),get_next_token()},scan_string=function(){return new_string(token_buf),get_next_token()},scan_function_call_with_function_name=function(){var functionName,i,l1,n,p,ref2;if(DEBUG&&console.log("-- scan_function_call_with_function_name start"),n=1,p=new U,p=usr_symbol(token_buf),push(p),"roots"!==(functionName=token_buf)&&"defint"!==functionName&&"sum"!==functionName&&"product"!==functionName&&"for"!==functionName||functionInvokationsScanningStack.push(token_buf),lastFoundSymbol=token_buf,isSymbolLeftOfAssignment||addSymbolRightOfAssignment(token_buf),get_next_token(),get_next_token(),scanningParameters.push(!0),")"!==token){for(scan_stmt(),n++;","===token;)get_next_token(),2===n&&-1!==functionInvokationsScanningStack[functionInvokationsScanningStack.length-1].indexOf("roots")&&(symbolsRightOfAssignment=symbolsRightOfAssignment.filter((function(x){return!new RegExp("roots_"+(functionInvokationsScanningStack.length-1)+"_"+token_buf).test(x)})),skipRootVariableToBeSolved=!0),2===n&&-1!==functionInvokationsScanningStack[functionInvokationsScanningStack.length-1].indexOf("sum")&&(symbolsRightOfAssignment=symbolsRightOfAssignment.filter((function(x){return!new RegExp("sum_"+(functionInvokationsScanningStack.length-1)+"_"+token_buf).test(x)})),skipRootVariableToBeSolved=!0),2===n&&-1!==functionInvokationsScanningStack[functionInvokationsScanningStack.length-1].indexOf("product")&&(symbolsRightOfAssignment=symbolsRightOfAssignment.filter((function(x){return!new RegExp("product_"+(functionInvokationsScanningStack.length-1)+"_"+token_buf).test(x)})),skipRootVariableToBeSolved=!0),2===n&&-1!==functionInvokationsScanningStack[functionInvokationsScanningStack.length-1].indexOf("for")&&(symbolsRightOfAssignment=symbolsRightOfAssignment.filter((function(x){return!new RegExp("for_"+(functionInvokationsScanningStack.length-1)+"_"+token_buf).test(x)})),skipRootVariableToBeSolved=!0),-1!==functionInvokationsScanningStack[functionInvokationsScanningStack.length-1].indexOf("defint")&&(2===n||n>2&&(n-2)%3==0)&&(symbolsRightOfAssignment=symbolsRightOfAssignment.filter((function(x){return!new RegExp("defint_"+(functionInvokationsScanningStack.length-1)+"_"+token_buf).test(x)})),skipRootVariableToBeSolved=!0),scan_stmt(),skipRootVariableToBeSolved=!1,n++;2===n&&-1!==functionInvokationsScanningStack[functionInvokationsScanningStack.length-1].indexOf("roots")&&(symbolsRightOfAssignment=symbolsRightOfAssignment.filter((function(x){return!new RegExp("roots_"+(functionInvokationsScanningStack.length-1)+"_x").test(x)})))}for(scanningParameters.pop(),i=l1=0,ref2=symbolsRightOfAssignment.length;0<=ref2?l1<=ref2:l1>=ref2;i=0<=ref2?++l1:--l1)null!=symbolsRightOfAssignment[i]&&("roots"===functionName&&(symbolsRightOfAssignment[i]=symbolsRightOfAssignment[i].replace(new RegExp("roots_"+(functionInvokationsScanningStack.length-1)+"_"),"")),"defint"===functionName&&(symbolsRightOfAssignment[i]=symbolsRightOfAssignment[i].replace(new RegExp("defint_"+(functionInvokationsScanningStack.length-1)+"_"),"")),"sum"===functionName&&(symbolsRightOfAssignment[i]=symbolsRightOfAssignment[i].replace(new RegExp("sum_"+(functionInvokationsScanningStack.length-1)+"_"),"")),"product"===functionName&&(symbolsRightOfAssignment[i]=symbolsRightOfAssignment[i].replace(new RegExp("product_"+(functionInvokationsScanningStack.length-1)+"_"),"")),"for"===functionName&&(symbolsRightOfAssignment[i]=symbolsRightOfAssignment[i].replace(new RegExp("for_"+(functionInvokationsScanningStack.length-1)+"_"),"")));if(")"!==token&&scan_error(") expected"),get_next_token(),list(n),"roots"!==functionName&&"defint"!==functionName&&"sum"!==functionName&&"product"!==functionName&&"for"!==functionName||functionInvokationsScanningStack.pop(),functionName===symbol(PATTERN).printname&&(patternHasBeenFound=!0),DEBUG)return console.log("-- scan_function_call_with_function_name end")},scan_function_call_without_function_name=function(){var n;if(DEBUG&&console.log("-- scan_function_call_without_function_name start"),push_symbol(EVAL),swap(),list(2),n=1,get_next_token(),scanningParameters.push(!0),")"!==token)for(scan_stmt(),n++;","===token;)get_next_token(),scan_stmt(),n++;if(scanningParameters.pop(),")"!==token&&scan_error(") expected"),get_next_token(),list(n),DEBUG)return console.log("-- scan_function_call_without_function_name end: "+stack[tos-1])},scan_subexpr=function(){var n;return n=0,"("!==token&&scan_error("( expected"),get_next_token(),scan_stmt(),")"!==token&&scan_error(") expected"),get_next_token()},scan_tensor=function(){var n;for(n=0,"["!==token&&scan_error("[ expected"),get_next_token(),scan_stmt(),n=1;","===token;)get_next_token(),scan_stmt(),n++;return build_tensor(n),"]"!==token&&scan_error("] expected"),get_next_token()},scan_error=function(errmsg){for(errorMessage="";input_str!==scan_str&&("\n"!==scanned[input_str]&&"\r"!==scanned[input_str]||input_str+1!==scan_str);)errorMessage+=scanned[input_str++];for(errorMessage+=" ? ";scanned[input_str]&&"\n"!==scanned[input_str]&&"\r"!==scanned[input_str];)errorMessage+=scanned[input_str++];return errorMessage+="\n",stop(errmsg)},build_tensor=function(n){var i,l1,ref2;for(i=0,save(),(p2=alloc_tensor(n)).tensor.ndim=1,p2.tensor.dim[0]=n,i=l1=0,ref2=n;0<=ref2?l1<ref2:l1>ref2;i=0<=ref2?++l1:--l1)p2.tensor.elem[i]=stack[tos-n+i];return check_tensor_dimensions(p2),moveTos(tos-n),push(p2),restore()},get_next_token=function(){for(newline_flag=0;get_token(),token===T_NEWLINE;)newline_flag=1;if(DEBUG)return console.log("get_next_token token: "+token)},get_token=function(){for(;isspace(scanned[scan_str]);){if("\n"===scanned[scan_str]||"\r"===scanned[scan_str])return token=T_NEWLINE,void scan_str++;scan_str++}if(token_str=scan_str,scan_str!==scanned.length){if(!isdigit(scanned[scan_str])&&"."!==scanned[scan_str]){if(isalpha(scanned[scan_str])){for(;isalnumorunderscore(scanned[scan_str]);)scan_str++;return token="("===scanned[scan_str]?T_FUNCTION:T_SYMBOL,void update_token_buf(token_str,scan_str)}if('"'===scanned[scan_str]){for(scan_str++;'"'!==scanned[scan_str];)scan_str===scanned.length-1&&(scan_str++,scan_error("runaway string"),scan_str--),scan_str++;return scan_str++,token=T_STRING,void update_token_buf(token_str+1,scan_str-1)}if("#"===scanned[scan_str]||"-"===scanned[scan_str]&&"-"===scanned[scan_str+1]){for(;scanned[scan_str]&&"\n"!==scanned[scan_str]&&"\r"!==scanned[scan_str];)scan_str++;return scanned[scan_str]&&scan_str++,void(token=T_NEWLINE)}return":"===scanned[scan_str]&&"="===scanned[scan_str+1]?(scan_str+=2,void(token=T_QUOTASSIGN)):"="===scanned[scan_str]&&"="===scanned[scan_str+1]?(scan_str+=2,void(token=T_EQ)):"!"===scanned[scan_str]&&"="===scanned[scan_str+1]?(scan_str+=2,void(token=T_NEQ)):"<"===scanned[scan_str]&&"="===scanned[scan_str+1]?(scan_str+=2,void(token=T_LTEQ)):">"===scanned[scan_str]&&"="===scanned[scan_str+1]?(scan_str+=2,void(token=T_GTEQ)):token=scanned[scan_str++]}for(;isdigit(scanned[scan_str]);)scan_str++;if("."===scanned[scan_str]){for(scan_str++;isdigit(scanned[scan_str]);)scan_str++;if("e"===scanned[scan_str]&&("+"===scanned[scan_str+1]||"-"===scanned[scan_str+1]||isdigit(scanned[scan_str+1])))for(scan_str+=2;isdigit(scanned[scan_str]);)scan_str++;token=T_DOUBLE}else token=T_INTEGER;update_token_buf(token_str,scan_str)}else token=""},update_token_buf=function(a,b){return token_buf=scanned.substring(a,b)},$.scan=scan,Eval_sgn=function(){return push(cadr(p1)),Eval(),sgn()},sgn=function(){return save(),yysgn(),restore()},yysgn=function(){return p1=pop(),isdouble(p1)?p1.d>0?void push_integer(1):0===p1.d?void push_integer(1):void push_integer(-1):isrational(p1)?-1===MSIGN(mmul(p1.q.a,p1.q.b))?void push_integer(-1):MZERO(mmul(p1.q.a,p1.q.b))?void push_integer(0):void push_integer(1):iscomplexnumber(p1)?(push_integer(-1),push(p1),absval(),power(),push(p1),void multiply()):isnegativeterm(p1)?(push_symbol(SGN),push(p1),negate(),list(2),push_integer(-1),void multiply()):(push_symbol(SGN),push(p1),list(2))},Eval_shape=function(){return push(cadr(p1)),Eval(),shape()},shape=function(){var ai,an,i,l1,m1,ndim,ref2,ref3,t;for(i=0,ndim=0,t=0,ai=[],an=[],i=l1=0,ref2=MAXDIM;0<=ref2?l1<ref2:l1>ref2;i=0<=ref2?++l1:--l1)ai[i]=0,an[i]=0;if(save(),p1=pop(),!istensor(p1))return isZeroAtomOrTensor(p1)||stop("transpose: tensor expected, 1st arg is not a tensor"),push(zero),void restore();for(ndim=p1.tensor.ndim,(p2=alloc_tensor(ndim)).tensor.ndim=1,p2.tensor.dim[0]=ndim,i=m1=0,ref3=ndim;0<=ref3?m1<ref3:m1>ref3;i=0<=ref3?++m1:--m1)push_integer(p1.tensor.dim[i]),p2.tensor.elem[i]=pop();return push(p2),restore()},Eval_simfac=function(){return push(cadr(p1)),Eval(),simfac()},simfac=function(){var h;if(h=0,save(),p1=pop(),car(p1)===symbol(ADD)){for(h=tos,p1=cdr(p1);p1!==symbol(NIL);)push(car(p1)),simfac_term(),p1=cdr(p1);add_all(tos-h)}else push(p1),simfac_term();return restore()},simfac_term=function(){var doNothing,h;if(h=0,save(),p1=pop(),car(p1)!==symbol(MULTIPLY))return push(p1),void restore();for(h=tos,p1=cdr(p1);p1!==symbol(NIL);)push(car(p1)),p1=cdr(p1);for(;yysimfac(h);)doNothing=1;return multiply_all_noexpand(tos-h),restore()},yysimfac=function(h){var i,j,l1,m1,ref2,ref3,ref4,ref5;for(i=0,j=0,i=l1=ref2=h,ref3=tos;ref2<=ref3?l1<ref3:l1>ref3;i=ref2<=ref3?++l1:--l1)for(p1=stack[i],j=m1=ref4=h,ref5=tos;ref4<=ref5?m1<ref5:m1>ref5;j=ref4<=ref5?++m1:--m1)if(i!==j){if(p2=stack[j],car(p1)===symbol(FACTORIAL)&&car(p2)===symbol(POWER)&&isminusone(caddr(p2))&&equal(cadr(p1),cadr(p2)))return push(cadr(p1)),push(one),subtract(),factorial(),stack[i]=pop(),stack[j]=one,1;if(car(p2)===symbol(POWER)&&isminusone(caddr(p2))&&caadr(p2)===symbol(FACTORIAL)&&equal(p1,cadadr(p2)))return push(p1),push_integer(-1),add(),factorial(),reciprocate(),stack[i]=pop(),stack[j]=one,1;if(car(p2)===symbol(FACTORIAL)&&(push(p1),push(cadr(p2)),subtract(),p3=pop(),isplusone(p3)))return push(p1),factorial(),stack[i]=pop(),stack[j]=one,1;if(car(p1)===symbol(POWER)&&isminusone(caddr(p1))&&car(p2)===symbol(POWER)&&isminusone(caddr(p2))&&caadr(p2)===symbol(FACTORIAL)&&(push(cadr(p1)),push(cadr(cadr(p2))),subtract(),p3=pop(),isplusone(p3)))return push(cadr(p1)),factorial(),reciprocate(),stack[i]=pop(),stack[j]=one,1;if(car(p1)===symbol(FACTORIAL)&&car(p2)===symbol(POWER)&&isminusone(caddr(p2))&&caadr(p2)===symbol(FACTORIAL)){if(push(cadr(p1)),push(cadr(cadr(p2))),subtract(),p3=pop(),isplusone(p3))return stack[i]=cadr(p1),stack[j]=one,1;if(isminusone(p3))return push(cadr(cadr(p2))),reciprocate(),stack[i]=pop(),stack[j]=one,1;if(equaln(p3,2))return stack[i]=cadr(p1),push(cadr(p1)),push_integer(-1),add(),stack[j]=pop(),1;if(equaln(p3,-2))return push(cadr(cadr(p2))),reciprocate(),stack[i]=pop(),push(cadr(cadr(p2))),push_integer(-1),add(),reciprocate(),stack[j]=pop(),1}}return 0},Eval_simplify=function(){return push(cadr(p1)),runUserDefinedSimplifications(),Eval(),simplify()},runUserDefinedSimplifications=function(){var atLeastOneSuccessInRouldOfRulesApplications,eachConsecutiveRuleApplication,eachSimplification,l1,len,len1,m1,numberOfRulesApplications,originalexpanding,success;if(0!==userSimplificationsInListForm.length&&!Find(cadr(p1),symbol(INTEGRAL))){for(originalexpanding=expanding,expanding=!1,DEBUG&&console.log("runUserDefinedSimplifications passed: "+stack[tos-1].toString()),Eval(),DEBUG&&console.log("runUserDefinedSimplifications after eval no expanding: "+stack[tos-1].toString()),expanding=originalexpanding,p1=stack[tos-1],DEBUG&&console.log("patterns to be checked: "),l1=0,len=userSimplificationsInListForm.length;l1<len;l1++)eachSimplification=userSimplificationsInListForm[l1],DEBUG&&console.log("..."+eachSimplification);for(atLeastOneSuccessInRouldOfRulesApplications=!0,numberOfRulesApplications=0;atLeastOneSuccessInRouldOfRulesApplications&&numberOfRulesApplications<MAX_CONSECUTIVE_APPLICATIONS_OF_ALL_RULES;)for(atLeastOneSuccessInRouldOfRulesApplications=!1,numberOfRulesApplications++,m1=0,len1=userSimplificationsInListForm.length;m1<len1;m1++){for(eachSimplification=userSimplificationsInListForm[m1],success=!0,eachConsecutiveRuleApplication=0;success&&eachConsecutiveRuleApplication<MAX_CONSECUTIVE_APPLICATIONS_OF_SINGLE_RULE;)eachConsecutiveRuleApplication++,DEBUG&&console.log("simplify - tos: "+tos+" checking pattern: "+eachSimplification+" on: "+p1),push_symbol(NIL),(success=transform(eachSimplification,!0))&&(atLeastOneSuccessInRouldOfRulesApplications=!0),p1=stack[tos-1],DEBUG&&console.log("p1 at this stage of simplification: "+p1);eachConsecutiveRuleApplication===MAX_CONSECUTIVE_APPLICATIONS_OF_SINGLE_RULE&&stop("maximum application of single transformation rule exceeded: "+eachSimplification)}if(numberOfRulesApplications===MAX_CONSECUTIVE_APPLICATIONS_OF_ALL_RULES&&stop("maximum application of all transformation rules exceeded "),DEBUG)return console.log("METAX = "+get_binding(symbol(METAX))),console.log("METAA = "+get_binding(symbol(METAA))),console.log("METAB = "+get_binding(symbol(METAB)))}},simplifyForCodeGeneration=function(){return save(),runUserDefinedSimplifications(),codeGen=!0,simplify_main(),codeGen=!1,restore()},simplify=function(){return save(),simplify_main(),restore()},simplify_main=function(){var args,fbody;if(p1=pop(),codeGen&&car(p1)===symbol(FUNCTION)&&(fbody=cadr(p1),push(fbody),eval(),simplify(),p3=pop(),args=caddr(p1),push_symbol(FUNCTION),push(p3),push(args),list(3),p1=pop()),!istensor(p1))return Find(p1,symbol(FACTORIAL))&&(push(p1),simfac(),p2=pop(),push(p1),rationalize(),simfac(),p3=pop(),p1=count(p2)<count(p3)?p2:p3),f10(),f1(),f2(),f3(),f4(),f5(),f9(),simplify_polarRect(),do_simplify_nested_radicals&&simplify_nested_radicals()?(DEBUG&&console.log("de-nesting successful into: "+p1.toString()),push(p1),void simplify()):(simplify_rectToClock(),simplify_rational_expressions(),push(p1));simplify_tensor()},simplify_tensor=function(){var i,l1,m1,ref2,ref3;for(i=0,(p2=alloc_tensor(p1.tensor.nelem)).tensor.ndim=p1.tensor.ndim,i=l1=0,ref2=p1.tensor.ndim;0<=ref2?l1<ref2:l1>ref2;i=0<=ref2?++l1:--l1)p2.tensor.dim[i]=p1.tensor.dim[i];for(i=m1=0,ref3=p1.tensor.nelem;0<=ref3?m1<ref3:m1>ref3;i=0<=ref3?++m1:--m1)push(p1.tensor.elem[i]),simplify(),p2.tensor.elem[i]=pop();return check_tensor_dimensions(p2),isZeroAtomOrTensor(p2)&&(p2=zero),push(p2)},f1=function(){if(car(p1)===symbol(ADD))return push(p1),rationalize(),p2=pop(),count(p2)<count(p1)?p1=p2:void 0},f2=function(){if(car(p1)===symbol(ADD))return push(p1),Condense(),p2=pop(),count(p2)<=count(p1)?p1=p2:void 0},f3=function(){if(push(p1),rationalize(),negate(),rationalize(),negate(),rationalize(),p2=pop(),count(p2)<count(p1))return p1=p2},f10=function(){var a,b,carp1,miao,originalexpanding;if(carp1=car(p1),miao=cdr(p1),(carp1===symbol(MULTIPLY)||isinnerordot(p1))&&car(car(cdr(p1)))===symbol(TRANSPOSE)&&car(car(cdr(cdr(p1))))===symbol(TRANSPOSE)&&(DEBUG&&console.log("maybe collecting a transpose "+p1),a=cadr(car(cdr(p1))),b=cadr(car(cdr(cdr(p1)))),carp1===symbol(MULTIPLY)?(push(a),push(b),multiply()):isinnerordot(p1)&&(push(b),push(a),inner()),push_integer(1),push_integer(2),originalexpanding=expanding,expanding=!1,transpose(),expanding=originalexpanding,p2=pop(),count(p2)<count(p1)&&(p1=p2),DEBUG))return console.log("collecting a transpose "+p2)},f4=function(){if(!isZeroAtomOrTensor(p1))return push(p1),rationalize(),inverse(),rationalize(),inverse(),rationalize(),p2=pop(),count(p2)<count(p1)?p1=p2:void 0},simplify_trig=function(){return save(),p1=pop(),f5(),push(p1),restore()},f5=function(){if(0!==Find(p1,symbol(SIN))||0!==Find(p1,symbol(COS)))return trigmode=1,push(p2=p1),Eval(),p3=pop(),trigmode=2,push(p2),Eval(),p4=pop(),trigmode=0,(count(p4)<count(p3)||nterms(p4)<nterms(p3))&&(p3=p4),count(p3)<count(p1)||nterms(p3)<nterms(p1)?p1=p3:void 0},f9=function(){var oldp1,oldp2;if(car(p1)===symbol(ADD)){for(push_integer(0),p2=cdr(p1);iscons(p2);)push(car(p2)),simplify(),add(),oldp1=p1,oldp2=p2,p1=pop(),simplify_rational_expressions(),push(p1),p1=oldp1,p2=cdr(p2=oldp2);return p2=pop(),count(p2)<count(p1)?p1=p2:void 0}},simplify_rational_expressions=function(){var denom,num,polyVar,sasa,theGCD;if(push(p1),denominator(),denom=pop(),!isone(denom)&&(push(p1),numerator(),num=pop(),!isone(num)&&(polyVar=areunivarpolysfactoredorexpandedform(num,denom))&&(push(num),push(denom),gcd(),push(polyVar),factor(),theGCD=pop(),!isone(theGCD))))return push(num),push(polyVar),factor(),push(theGCD),inverse(),multiply_noexpand(),simplify(),sasa=stack[tos-1].toString(),push(denom),push(polyVar),factor(),push(theGCD),inverse(),multiply_noexpand(),simplify(),sasa=stack[tos-1].toString(),divide(),Condense(),sasa=stack[tos-1].toString(),p2=pop(),count(p2)<count(p1)?p1=p2:void 0},simplify_rectToClock=function(){if(0!==Find(p1,symbol(SIN))||0!==Find(p1,symbol(COS)))return push(p1),Eval(),clockform(),p2=pop(),DEBUG&&console.log("before simplification clockform: "+p1+" after: "+p2),count(p2)<count(p1)?p1=p2:void 0},simplify_polarRect=function(){if(push(p1),polarRectAMinusOneBase(),Eval(),p2=pop(),count(p2)<count(p1))return p1=p2},polarRectAMinusOneBase=function(){var h;if(save(),p1=pop(),isimaginaryunit(p1))return push(p1),void restore();if(equal(car(p1),symbol(POWER))&&isminusone(cadr(p1)))push(one),negate(),push(caddr(p1)),polarRectAMinusOneBase(),power(),polar(),rect();else if(iscons(p1)){for(h=tos;iscons(p1);)push(car(p1)),polarRectAMinusOneBase(),p1=cdr(p1);list(tos-h)}else push(p1);restore()},nterms=function(p){return car(p)!==symbol(ADD)?1:length(p)-1},simplify_nested_radicals=function(){var prev_expanding,simplificationWithCondense,simplificationWithoutCondense,somethingSimplified;return recursionLevelNestedRadicalsRemoval>0?(DEBUG&&console.log("denesting bailing out because of too much recursion"),!1):(push(p1),somethingSimplified=take_care_of_nested_radicals(),simplificationWithoutCondense=stack[tos-1],prev_expanding=expanding,expanding=0,yycondense(),expanding=prev_expanding,simplificationWithCondense=pop(),countOccurrencesOfSymbol(symbol(POWER),simplificationWithoutCondense)<countOccurrencesOfSymbol(symbol(POWER),simplificationWithCondense)?push(simplificationWithoutCondense):push(simplificationWithCondense),p1=pop(),somethingSimplified)},take_care_of_nested_radicals=function(){var A,B,C,SOLUTION,anyRadicalSimplificationWorked,base,checkSize,commonBases,commonInnerExponent,countingTerms,eachSolution,exponent,firstTerm,h,i,innerbase,innerexponent,l1,len,len1,len2,len3,lowercase_a,lowercase_b,m1,n1,numberOfTerms,o1,possibleNewExpression,possibleNewExpressionValue,possibleRationalSolutions,possibleSolutions,potentialPower,realOfpossibleRationalSolutions,ref2,secondTerm,secondTermFactor,termsThatAreNotPowers,whichRationalSolution;if(recursionLevelNestedRadicalsRemoval>0)return DEBUG&&console.log("denesting bailing out because of too much recursion"),!1;if(save(),p1=pop(),equal(car(p1),symbol(POWER))){if(base=cadr(p1),exponent=caddr(p1),!isminusone(exponent)&&equal(car(base),symbol(ADD))&&isfraction(exponent)&&(equalq(exponent,1,3)||equalq(exponent,1,2))){for(firstTerm=cadr(base),push(firstTerm),take_care_of_nested_radicals(),pop(),secondTerm=caddr(base),push(secondTerm),take_care_of_nested_radicals(),pop(),numberOfTerms=0,countingTerms=base;cdr(countingTerms)!==symbol(NIL);)numberOfTerms++,countingTerms=cdr(countingTerms);if(numberOfTerms>2)return push(p1),restore(),!1;if(commonInnerExponent=null,commonBases=[],termsThatAreNotPowers=[],car(secondTerm)===symbol(MULTIPLY)){if(secondTermFactor=cdr(secondTerm),iscons(secondTermFactor))for(;iscons(secondTermFactor);)potentialPower=car(secondTermFactor),car(potentialPower)===symbol(POWER)?(innerbase=cadr(potentialPower),innerexponent=caddr(potentialPower),equalq(innerexponent,1,2)&&(null==commonInnerExponent?(commonInnerExponent=innerexponent,commonBases.push(innerbase)):equal(innerexponent,commonInnerExponent)&&commonBases.push(innerbase))):termsThatAreNotPowers.push(potentialPower),secondTermFactor=cdr(secondTermFactor)}else car(secondTerm)===symbol(POWER)&&(innerbase=cadr(secondTerm),innerexponent=caddr(secondTerm),null==commonInnerExponent&&equalq(innerexponent,1,2)&&(commonInnerExponent=innerexponent,commonBases.push(innerbase)));if(0===commonBases.length)return push(p1),restore(),!1;for(A=firstTerm,push_integer(1),l1=0,len=commonBases.length;l1<len;l1++)i=commonBases[l1],push(i),multiply();for(C=pop(),push_integer(1),m1=0,len1=termsThatAreNotPowers.length;m1<len1;m1++)i=termsThatAreNotPowers[m1],push(i),multiply();if(B=pop(),equalq(exponent,1,3)){if(push(A),negate(),push(C),multiply(),push(B),divide(),checkSize=pop(),push(checkSize),real(),yyfloat(),Math.abs(pop().d)>Math.pow(2,32))return push(p1),restore(),!1;if(push(checkSize),push_integer(3),push(C),multiply(),checkSize=pop(),push(checkSize),real(),yyfloat(),Math.abs(pop().d)>Math.pow(2,32))return pop(),push(p1),restore(),!1;if(push(checkSize),push(symbol(SECRETX)),multiply(),push_integer(-3),push(A),multiply(),push(B),divide(),checkSize=pop(),push(checkSize),real(),yyfloat(),Math.abs(pop().d)>Math.pow(2,32))return pop(),pop(),push(p1),restore(),!1;push(checkSize),push(symbol(SECRETX)),push_integer(2),power(),multiply(),push_integer(1),push(symbol(SECRETX)),push_integer(3),power(),multiply(),add(),add(),add()}else if(equalq(exponent,1,2)){if(push(C),checkSize=pop(),push(checkSize),real(),yyfloat(),Math.abs(pop().d)>Math.pow(2,32))return push(p1),restore(),!1;if(push(checkSize),push_integer(-2),push(A),multiply(),push(B),divide(),checkSize=pop(),push(checkSize),real(),yyfloat(),Math.abs(pop().d)>Math.pow(2,32))return pop(),push(p1),restore(),!1;push(checkSize),push(symbol(SECRETX)),multiply(),push_integer(1),push(symbol(SECRETX)),push_integer(2),power(),multiply(),add(),add()}if(push(symbol(SECRETX)),recursionLevelNestedRadicalsRemoval++,roots(),recursionLevelNestedRadicalsRemoval--,equal(stack[tos-1],symbol(NIL)))return DEBUG&&console.log("roots bailed out because of too much recursion"),pop(),push(p1),restore(),!1;for(possibleSolutions=[],n1=0,len2=(ref2=stack[tos-1].tensor.elem).length;n1<len2;n1++)eachSolution=ref2[n1],Find(eachSolution,symbol(POWER))||possibleSolutions.push(eachSolution);if(pop(),0===possibleSolutions.length)return push(p1),restore(),!1;for(possibleRationalSolutions=[],realOfpossibleRationalSolutions=[],o1=0,len3=possibleSolutions.length;o1<len3;o1++)i=possibleSolutions[o1],push(i),real(),yyfloat(),possibleRationalSolutions.push(i),realOfpossibleRationalSolutions.push(pop().d);return SOLUTION=possibleRationalSolutions[whichRationalSolution=realOfpossibleRationalSolutions.indexOf(Math.max.apply(Math,realOfpossibleRationalSolutions))],equalq(exponent,1,3)?(push(A),push(SOLUTION),push_integer(3),power(),push_integer(3),push(C),multiply(),push(SOLUTION),multiply(),add(),divide(),push_rational(1,3),power()):equalq(exponent,1,2)&&(push(A),push(SOLUTION),push_integer(2),power(),push(C),add(),divide(),push_rational(1,2),power()),null==(lowercase_b=pop())?(push(p1),restore(),!1):(push(lowercase_b),push(SOLUTION),multiply(),equalq(exponent,1,3)?(lowercase_a=pop(),push(lowercase_b),push(C),push_rational(1,2),power(),multiply(),push(lowercase_a),add(),simplify()):equalq(exponent,1,2)&&(lowercase_a=pop(),push(lowercase_b),push(C),push_rational(1,2),power(),multiply(),push(lowercase_a),add(),simplify(),possibleNewExpression=pop(),push(possibleNewExpression),real(),yyfloat(),possibleNewExpressionValue=pop(),isnegativenumber(possibleNewExpressionValue)?(push(lowercase_b),negate(),lowercase_b=pop(),push(lowercase_a),negate(),lowercase_a=pop(),push(lowercase_b),push(C),push_rational(1,2),power(),multiply(),push(lowercase_a),add(),simplify()):push(possibleNewExpression)),p1=pop(),push(p1),restore(),!0)}return push(p1),restore(),!1}if(iscons(p1)){for(h=tos,anyRadicalSimplificationWorked=!1;iscons(p1);)push(car(p1)),anyRadicalSimplificationWorked=anyRadicalSimplificationWorked||take_care_of_nested_radicals(),p1=cdr(p1);return list(tos-h),restore(),anyRadicalSimplificationWorked}return push(p1),restore(),!1},Eval_sin=function(){return push(cadr(p1)),Eval(),sine()},sine=function(){return save(),p1=pop(),car(p1)===symbol(ADD)?sine_of_angle_sum():sine_of_angle(),restore()},sine_of_angle_sum=function(){for(p2=cdr(p1);iscons(p2);){if(p4=car(p2),isnpi(p4))return push(p1),push(p4),subtract(),p3=pop(),push(p3),sine(),push(p4),cosine(),multiply(),push(p3),cosine(),push(p4),sine(),multiply(),void add();p2=cdr(p2)}return sine_of_angle()},sine_of_angle=function(){var d,n;if(car(p1)!==symbol(ARCSIN)){if(isdouble(p1))return d=Math.sin(p1.d),Math.abs(d)<1e-10&&(d=0),void push_double(d);if(isnegative(p1))return push(p1),negate(),sine(),void negate();if(car(p1)===symbol(ARCTAN))return push(cadr(p1)),push_integer(1),push(cadr(p1)),push_integer(2),power(),add(),push_rational(-1,2),power(),void multiply();if(push(p1),push_integer(180),multiply(),evaluatingAsFloats?push_double(Math.PI):push_symbol(PI),divide(),(n=pop_integer())<0||isNaN(n))return push(symbol(SIN)),push(p1),void list(2);switch(n%360){case 0:case 180:return push_integer(0);case 30:case 150:return push_rational(1,2);case 210:case 330:return push_rational(-1,2);case 45:case 135:return push_rational(1,2),push_integer(2),push_rational(1,2),power(),multiply();case 225:case 315:return push_rational(-1,2),push_integer(2),push_rational(1,2),power(),multiply();case 60:case 120:return push_rational(1,2),push_integer(3),push_rational(1,2),power(),multiply();case 240:case 300:return push_rational(-1,2),push_integer(3),push_rational(1,2),power(),multiply();case 90:return push_integer(1);case 270:return push_integer(-1);default:return push(symbol(SIN)),push(p1),list(2)}}else push(cadr(p1))},Eval_sinh=function(){return push(cadr(p1)),Eval(),ysinh()},ysinh=function(){return save(),yysinh(),restore()},yysinh=function(){var d;if(d=0,p1=pop(),car(p1)!==symbol(ARCSINH)){if(isdouble(p1))return d=Math.sinh(p1.d),Math.abs(d)<1e-10&&(d=0),void push_double(d);if(!isZeroAtomOrTensor(p1))return push_symbol(SINH),push(p1),list(2);push(zero)}else push(cadr(p1))},subst=function(){var i,l1,m1,ref2,ref3;if(i=0,save(),p3=pop(),(p2=pop())!==symbol(NIL)&&p3!==symbol(NIL)){if(p1=pop(),istensor(p1)){for((p4=alloc_tensor(p1.tensor.nelem)).tensor.ndim=p1.tensor.ndim,i=l1=0,ref2=p1.tensor.ndim;0<=ref2?l1<ref2:l1>ref2;i=0<=ref2?++l1:--l1)p4.tensor.dim[i]=p1.tensor.dim[i];for(i=m1=0,ref3=p1.tensor.nelem;0<=ref3?m1<ref3:m1>ref3;i=0<=ref3?++m1:--m1)push(p1.tensor.elem[i]),push(p2),push(p3),subst(),p4.tensor.elem[i]=pop(),check_tensor_dimensions(p4);push(p4)}else equal(p1,p2)?push(p3):iscons(p1)?(push(car(p1)),push(p2),push(p3),subst(),push(cdr(p1)),push(p2),push(p3),subst(),cons()):push(p1);return restore()}restore()},Eval_sum=function(){var body,i,indexVariable,j,k,l1,ref2,ref3;if(i=0,j=0,k=0,body=cadr(p1),indexVariable=caddr(p1),issymbol(indexVariable)||stop("sum: 2nd arg?"),push(cadddr(p1)),Eval(),j=pop_integer(),isNaN(j))push(p1);else{if(push(caddddr(p1)),Eval(),k=pop_integer(),!isNaN(k)){for(p4=get_binding(indexVariable),push_integer(0),i=l1=ref2=j,ref3=k;ref2<=ref3?l1<=ref3:l1>=ref3;i=ref2<=ref3?++l1:--l1)push_integer(i),p5=pop(),set_binding(indexVariable,p5),push(body),Eval(),add();return set_binding(indexVariable,p4)}push(p1)}},Eval_tan=function(){return push(cadr(p1)),Eval(),tangent()},tangent=function(){return save(),yytangent(),restore()},yytangent=function(){var d,n;if(n=0,d=0,p1=pop(),car(p1)!==symbol(ARCTAN)){if(isdouble(p1))return d=Math.tan(p1.d),Math.abs(d)<1e-10&&(d=0),void push_double(d);if(isnegative(p1))return push(p1),negate(),tangent(),void negate();if(push(p1),push_integer(180),multiply(),evaluatingAsFloats?push_double(Math.PI):push_symbol(PI),divide(),(n=pop_integer())<0||isNaN(n))return push(symbol(TAN)),push(p1),void list(2);switch(n%360){case 0:case 180:return push_integer(0);case 30:case 210:return push_rational(1,3),push_integer(3),push_rational(1,2),power(),multiply();case 150:case 330:return push_rational(-1,3),push_integer(3),push_rational(1,2),power(),multiply();case 45:case 225:return push_integer(1);case 135:case 315:return push_integer(-1);case 60:case 240:return push_integer(3),push_rational(1,2),power();case 120:case 300:return push_integer(3),push_rational(1,2),power(),negate();default:return push(symbol(TAN)),push(p1),list(2)}}else push(cadr(p1))},Eval_tanh=function(){var d;if(d=0,push(cadr(p1)),Eval(),p1=pop(),car(p1)!==symbol(ARCTANH)){if(isdouble(p1))return d=Math.tanh(p1.d),Math.abs(d)<1e-10&&(d=0),void push_double(d);if(!isZeroAtomOrTensor(p1))return push_symbol(TANH),push(p1),list(2);push(zero)}else push(cadr(p1))},Eval_taylor=function(){return p1=cdr(p1),push(car(p1)),Eval(),p1=cdr(p1),push(car(p1)),Eval(),(p2=pop())===symbol(NIL)?guess():push(p2),p1=cdr(p1),push(car(p1)),Eval(),(p2=pop())===symbol(NIL)?push_integer(24):push(p2),p1=cdr(p1),push(car(p1)),Eval(),(p2=pop())===symbol(NIL)?push_integer(0):push(p2),taylor()},taylor=function(){var i,k,l1,ref2;if(i=0,k=0,save(),p4=pop(),p3=pop(),p2=pop(),p1=pop(),push(p3),k=pop_integer(),isNaN(k))return push_symbol(TAYLOR),push(p1),push(p2),push(p3),push(p4),list(5),void restore();for(push(p1),push(p2),push(p4),subst(),Eval(),push_integer(1),p5=pop(),i=l1=1,ref2=k;(1<=ref2?l1<=ref2:l1>=ref2)&&(push(p1),push(p2),derivative(),p1=pop(),!isZeroAtomOrTensor(p1));i=1<=ref2?++l1:--l1)push(p5),push(p2),push(p4),subtract(),multiply(),p5=pop(),push(p1),push(p2),push(p4),subst(),Eval(),push(p5),multiply(),push_integer(i),factorial(),divide(),add();return restore()},Eval_tensor=function(){var a,b,i,l1,m1,ndim,nelem,ref2,ref3;for(i=0,ndim=0,nelem=0,check_tensor_dimensions(p1),nelem=p1.tensor.nelem,ndim=p1.tensor.ndim,(p2=alloc_tensor(nelem)).tensor.ndim=ndim,i=l1=0,ref2=ndim;0<=ref2?l1<ref2:l1>ref2;i=0<=ref2?++l1:--l1)p2.tensor.dim[i]=p1.tensor.dim[i];for(a=p1.tensor.elem,b=p2.tensor.elem,check_tensor_dimensions(p2),i=m1=0,ref3=nelem;0<=ref3?m1<ref3:m1>ref3;i=0<=ref3?++m1:--m1)push(a[i]),Eval(),b[i]=pop();return check_tensor_dimensions(p1),check_tensor_dimensions(p2),push(p2),promote_tensor()},tensor_plus_tensor=function(){var a,b,c,i,l1,m1,n1,ndim,nelem,ref2,ref3,ref4;if(i=0,ndim=0,nelem=0,save(),p2=pop(),(ndim=(p1=pop()).tensor.ndim)!==p2.tensor.ndim)return push(symbol(NIL)),void restore();for(i=l1=0,ref2=ndim;0<=ref2?l1<ref2:l1>ref2;i=0<=ref2?++l1:--l1)if(p1.tensor.dim[i]!==p2.tensor.dim[i])return push(symbol(NIL)),void restore();for(nelem=p1.tensor.nelem,(p3=alloc_tensor(nelem)).tensor.ndim=ndim,i=m1=0,ref3=ndim;0<=ref3?m1<ref3:m1>ref3;i=0<=ref3?++m1:--m1)p3.tensor.dim[i]=p1.tensor.dim[i];for(a=p1.tensor.elem,b=p2.tensor.elem,c=p3.tensor.elem,i=n1=0,ref4=nelem;0<=ref4?n1<ref4:n1>ref4;i=0<=ref4?++n1:--n1)push(a[i]),push(b[i]),add(),c[i]=pop();return push(p3),restore()},tensor_times_scalar=function(){var a,b,i,l1,m1,ndim,nelem,ref2,ref3;for(i=0,ndim=0,nelem=0,save(),p2=pop(),ndim=(p1=pop()).tensor.ndim,nelem=p1.tensor.nelem,(p3=alloc_tensor(nelem)).tensor.ndim=ndim,i=l1=0,ref2=ndim;0<=ref2?l1<ref2:l1>ref2;i=0<=ref2?++l1:--l1)p3.tensor.dim[i]=p1.tensor.dim[i];for(a=p1.tensor.elem,b=p3.tensor.elem,i=m1=0,ref3=nelem;0<=ref3?m1<ref3:m1>ref3;i=0<=ref3?++m1:--m1)push(a[i]),push(p2),multiply(),b[i]=pop();return push(p3),restore()},scalar_times_tensor=function(){var a,b,i,l1,m1,ndim,nelem,ref2,ref3;for(i=0,ndim=0,nelem=0,save(),p2=pop(),p1=pop(),ndim=p2.tensor.ndim,nelem=p2.tensor.nelem,(p3=alloc_tensor(nelem)).tensor.ndim=ndim,i=l1=0,ref2=ndim;0<=ref2?l1<ref2:l1>ref2;i=0<=ref2?++l1:--l1)p3.tensor.dim[i]=p2.tensor.dim[i];for(a=p2.tensor.elem,b=p3.tensor.elem,i=m1=0,ref3=nelem;0<=ref3?m1<ref3:m1>ref3;i=0<=ref3?++m1:--m1)push(p1),push(a[i]),multiply(),b[i]=pop();return push(p3),restore()},check_tensor_dimensions=function(p){p.tensor.nelem!==p.tensor.elem.length&&console.log("something wrong in tensor dimensions")},is_square_matrix=function(p){return istensor(p)&&2===p.tensor.ndim&&p.tensor.dim[0]===p.tensor.dim[1]?1:0},d_tensor_tensor=function(){var a,b,c,i,j,l1,m1,n1,ndim,nelem,ref2,ref3,ref4;if(i=0,j=0,ndim=0,nelem=0,ndim=p1.tensor.ndim,nelem=p1.tensor.nelem,ndim+1>=MAXDIM)return push_symbol(DERIVATIVE),push(p1),push(p2),void list(3);for((p3=alloc_tensor(nelem*p2.tensor.nelem)).tensor.ndim=ndim+1,i=l1=0,ref2=ndim;0<=ref2?l1<ref2:l1>ref2;i=0<=ref2?++l1:--l1)p3.tensor.dim[i]=p1.tensor.dim[i];for(p3.tensor.dim[ndim]=p2.tensor.dim[0],a=p1.tensor.elem,b=p2.tensor.elem,c=p3.tensor.elem,i=m1=0,ref3=nelem;0<=ref3?m1<ref3:m1>ref3;i=0<=ref3?++m1:--m1)for(j=n1=0,ref4=p2.tensor.nelem;0<=ref4?n1<ref4:n1>ref4;j=0<=ref4?++n1:--n1)push(a[i]),push(b[j]),derivative(),c[i*p2.tensor.nelem+j]=pop();return push(p3)},d_scalar_tensor=function(){var a,b,i,l1,ref2;for((p3=alloc_tensor(p2.tensor.nelem)).tensor.ndim=1,p3.tensor.dim[0]=p2.tensor.dim[0],a=p2.tensor.elem,b=p3.tensor.elem,i=l1=0,ref2=p2.tensor.nelem;0<=ref2?l1<ref2:l1>ref2;i=0<=ref2?++l1:--l1)push(p1),push(a[i]),derivative(),b[i]=pop();return push(p3)},d_tensor_scalar=function(){var a,b,i,l1,m1,ref2,ref3;for(i=0,(p3=alloc_tensor(p1.tensor.nelem)).tensor.ndim=p1.tensor.ndim,i=l1=0,ref2=p1.tensor.ndim;0<=ref2?l1<ref2:l1>ref2;i=0<=ref2?++l1:--l1)p3.tensor.dim[i]=p1.tensor.dim[i];for(a=p1.tensor.elem,b=p3.tensor.elem,i=m1=0,ref3=p1.tensor.nelem;0<=ref3?m1<ref3:m1>ref3;i=0<=ref3?++m1:--m1)push(a[i]),push(p2),derivative(),b[i]=pop();return push(p3)},compare_tensors=function(p1,p2){var i,l1,m1,ref2,ref3;if(i=0,p1.tensor.ndim<p2.tensor.ndim)return-1;if(p1.tensor.ndim>p2.tensor.ndim)return 1;for(i=l1=0,ref2=p1.tensor.ndim;0<=ref2?l1<ref2:l1>ref2;i=0<=ref2?++l1:--l1){if(p1.tensor.dim[i]<p2.tensor.dim[i])return-1;if(p1.tensor.dim[i]>p2.tensor.dim[i])return 1}for(i=m1=0,ref3=p1.tensor.nelem;0<=ref3?m1<ref3:m1>ref3;i=0<=ref3?++m1:--m1)if(!equal(p1.tensor.elem[i],p2.tensor.elem[i]))return lessp(p1.tensor.elem[i],p2.tensor.elem[i])?-1:1;return 0},power_tensor=function(){var i,k,l1,m1,n,ref2,ref3,results;if(i=0,k=0,n=0,k=p1.tensor.ndim-1,p1.tensor.dim[0]!==p1.tensor.dim[k])return push_symbol(POWER),push(p1),push(p2),void list(3);if(push(p2),n=pop_integer(),isNaN(n))return push_symbol(POWER),push(p1),push(p2),void list(3);if(0===n){for(2!==p1.tensor.ndim&&stop("power(tensor,0) with tensor rank not equal to 2"),n=p1.tensor.dim[0],(p1=alloc_tensor(n*n)).tensor.ndim=2,p1.tensor.dim[0]=n,p1.tensor.dim[1]=n,i=l1=0,ref2=n;0<=ref2?l1<ref2:l1>ref2;i=0<=ref2?++l1:--l1)p1.tensor.elem[n*i+i]=one;return check_tensor_dimensions(p1),void push(p1)}for(n<0&&(n=-n,push(p1),inv(),p1=pop()),push(p1),results=[],i=m1=1,ref3=n;(1<=ref3?m1<ref3:m1>ref3)&&(push(p1),inner(),!isZeroAtomOrTensor(stack[tos-1]));i=1<=ref3?++m1:--m1)results.push(void 0);return results},copy_tensor=function(){var i,l1,m1,ref2,ref3;for(i=0,save(),p1=pop(),(p2=alloc_tensor(p1.tensor.nelem)).tensor.ndim=p1.tensor.ndim,i=l1=0,ref2=p1.tensor.ndim;0<=ref2?l1<ref2:l1>ref2;i=0<=ref2?++l1:--l1)p2.tensor.dim[i]=p1.tensor.dim[i];for(i=m1=0,ref3=p1.tensor.nelem;0<=ref3?m1<ref3:m1>ref3;i=0<=ref3?++m1:--m1)p2.tensor.elem[i]=p1.tensor.elem[i];return check_tensor_dimensions(p1),check_tensor_dimensions(p2),push(p2),restore()},promote_tensor=function(){var i,j,k,l1,m1,n1,ndim,nelem,o1,q1,ref2,ref3,ref4,ref5,ref6;if(i=0,j=0,k=0,nelem=0,ndim=0,save(),p1=pop(),!istensor(p1))return push(p1),void restore();for(p2=p1.tensor.elem[0],i=l1=1,ref2=p1.tensor.nelem;1<=ref2?l1<ref2:l1>ref2;i=1<=ref2?++l1:--l1)compatible(p2,p1.tensor.elem[i])||stop("Cannot promote tensor due to inconsistent tensor components.");if(!istensor(p2))return push(p1),void restore();for((ndim=p1.tensor.ndim+p2.tensor.ndim)>MAXDIM&&stop("tensor rank > "+MAXDIM),nelem=p1.tensor.nelem*p2.tensor.nelem,(p3=alloc_tensor(nelem)).tensor.ndim=ndim,i=m1=0,ref3=p1.tensor.ndim;0<=ref3?m1<ref3:m1>ref3;i=0<=ref3?++m1:--m1)p3.tensor.dim[i]=p1.tensor.dim[i];for(j=n1=0,ref4=p2.tensor.ndim;0<=ref4?n1<ref4:n1>ref4;j=0<=ref4?++n1:--n1)p3.tensor.dim[i+j]=p2.tensor.dim[j];for(k=0,i=o1=0,ref5=p1.tensor.nelem;0<=ref5?o1<ref5:o1>ref5;i=0<=ref5?++o1:--o1)for(j=q1=0,ref6=(p2=p1.tensor.elem[i]).tensor.nelem;0<=ref6?q1<ref6:q1>ref6;j=0<=ref6?++q1:--q1)p3.tensor.elem[k++]=p2.tensor.elem[j];return check_tensor_dimensions(p2),check_tensor_dimensions(p3),push(p3),restore()},compatible=function(p,q){var i,l1,ref2;if(!istensor(p)&&!istensor(q))return 1;if(!istensor(p)||!istensor(q))return 0;if(p.tensor.ndim!==q.tensor.ndim)return 0;for(i=l1=0,ref2=p.tensor.ndim;0<=ref2?l1<ref2:l1>ref2;i=0<=ref2?++l1:--l1)if(p.tensor.dim[i]!==q.tensor.dim[i])return 0;return 1},Eval_test=function(){var checkResult,orig;for(orig=p1,p1=cdr(p1);iscons(p1);){if(cdr(p1)===symbol(NIL))return push(car(p1)),void Eval();if(null==(checkResult=isZeroLikeOrNonZeroLikeOrUndetermined(car(p1))))return void push(orig);if(checkResult)return push(cadr(p1)),void Eval();p1=cddr(p1)}return push_integer(0)},Eval_testeq=function(){var checkResult,orig,subtractionResult;if(orig=p1,push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),subtract(),subtractionResult=pop(),checkResult=isZeroLikeOrNonZeroLikeOrUndetermined(subtractionResult))push_integer(0);else if(null==checkResult||checkResult)if(push(cadr(p1)),Eval(),simplify(),push(caddr(p1)),Eval(),simplify(),subtract(),subtractionResult=pop(),checkResult=isZeroLikeOrNonZeroLikeOrUndetermined(subtractionResult))push_integer(0);else{if(null==checkResult||checkResult)return push(orig);push_integer(1)}else push_integer(1)},Eval_testge=function(){var comparison,orig;if(orig=p1,null!=(comparison=cmp_args()))return push_integer(comparison>=0?1:0);push(orig)},Eval_testgt=function(){var comparison,orig;if(orig=p1,null!=(comparison=cmp_args()))return push_integer(comparison>0?1:0);push(orig)},Eval_testle=function(){var comparison,orig;if(orig=p1,null!=(comparison=cmp_args()))return push_integer(comparison<=0?1:0);push(orig)},Eval_testlt=function(){var comparison,orig;if(orig=p1,null!=(comparison=cmp_args()))return push_integer(comparison<0?1:0);push(orig)},Eval_not=function(){var checkResult,wholeAndExpression;return wholeAndExpression=p1,null==(checkResult=isZeroLikeOrNonZeroLikeOrUndetermined(cadr(p1)))?push(wholeAndExpression):push_integer(checkResult?0:1)},Eval_and=function(){var andPredicates,checkResult,somePredicateUnknown,wholeAndExpression;for(andPredicates=cdr(wholeAndExpression=p1),somePredicateUnknown=!1;iscons(andPredicates);)if(null==(checkResult=isZeroLikeOrNonZeroLikeOrUndetermined(car(andPredicates))))somePredicateUnknown=!0,andPredicates=cdr(andPredicates);else if(checkResult)andPredicates=cdr(andPredicates);else if(!checkResult)return void push_integer(0);return somePredicateUnknown?push(wholeAndExpression):push_integer(1)},Eval_or=function(){var checkResult,orPredicates,somePredicateUnknown,wholeOrExpression;for(orPredicates=cdr(wholeOrExpression=p1),somePredicateUnknown=!1;iscons(orPredicates);)if(null==(checkResult=isZeroLikeOrNonZeroLikeOrUndetermined(car(orPredicates))))somePredicateUnknown=!0,orPredicates=cdr(orPredicates);else{if(checkResult)return void push_integer(1);checkResult||(orPredicates=cdr(orPredicates))}return somePredicateUnknown?push(wholeOrExpression):push_integer(0)},cmp_args=function(){var t;if(t=0,push(cadr(p1)),Eval(),simplify(),push(caddr(p1)),Eval(),simplify(),subtract(),(p1=pop()).k!==NUM&&p1.k!==DOUBLE&&(push(p1),yyfloat(),Eval(),p1=pop()),isZeroAtomOrTensor(p1))return 0;switch(p1.k){case NUM:t=-1===MSIGN(p1.q.a)?-1:1;break;case DOUBLE:t=p1.d<0?-1:1;break;default:t=null}return t},transform=function(s,generalTransform){var bookmarkTosToPrintDecomps,eachTransformEntry,i,l1,len,len1,m1,n1,numberOfDecomps,ref2,restTerm,secondTerm,success,theTransform,transform_h,transformationSuccessful,transformedTerms;if(transform_h=0,save(),p1=null,p4=pop(),p3=pop(),DEBUG&&console.log("         !!!!!!!!!   transform on: "+p3),saveMetaBindings(),set_binding(symbol(METAX),p4),transform_h=tos,push_integer(1),push(p3),push(p4),polyform(),push(p4),bookmarkTosToPrintDecomps=tos-2,decomp(generalTransform),numberOfDecomps=tos-bookmarkTosToPrintDecomps,DEBUG)for(console.log("  "+numberOfDecomps+" decomposed elements ====== "),i=l1=0,ref2=numberOfDecomps;0<=ref2?l1<ref2:l1>ref2;i=0<=ref2?++l1:--l1)console.log("  decomposition element "+i+": "+stack[tos-1-i]);if(transformationSuccessful=!1,generalTransform){if(!isNumericAtom(p3))if(theTransform=s,DEBUG&&console.log("applying transform: "+theTransform),DEBUG&&console.log("scanning table entry "+theTransform),push(theTransform),push(symbol(SYMBOL_A_UNDERSCORE)),push(symbol(METAA)),subst(),push(symbol(SYMBOL_B_UNDERSCORE)),push(symbol(METAB)),subst(),push(symbol(SYMBOL_X_UNDERSCORE)),push(symbol(METAX)),subst(),p1=pop(),p5=car(p1),DEBUG&&console.log("template expression: "+p5),p6=cadr(p1),p7=cddr(p1),f_equals_a(transform_h,generalTransform))transformationSuccessful=!0;else{for(DEBUG&&console.log("p3 at this point: "+p3),transformedTerms=[],DEBUG&&console.log("car(p3): "+car(p3)),iscons(restTerm=p3)&&(transformedTerms.push(car(p3)),restTerm=cdr(p3));iscons(restTerm);)secondTerm=car(restTerm),restTerm=cdr(restTerm),DEBUG&&console.log("tos before recursive transform: "+tos),push(secondTerm),push_symbol(NIL),DEBUG&&console.log("testing: "+secondTerm),DEBUG&&console.log("about to try to simplify other term: "+secondTerm),success=transform(s,generalTransform),transformationSuccessful=transformationSuccessful||success,transformedTerms.push(pop()),DEBUG&&console.log("tried to simplify other term: "+secondTerm+" ...successful?: "+success+" ...transformed: "+transformedTerms[transformedTerms.length-1]);if(0!==transformedTerms.length){for(m1=0,len=transformedTerms.length;m1<len;m1++)i=transformedTerms[m1],push(i);list(transformedTerms.length),p6=pop()}}}else for(n1=0,len1=s.length;n1<len1;n1++)if(eachTransformEntry=s[n1],DEBUG&&(console.log("scanning table entry "+eachTransformEntry),(eachTransformEntry+"").indexOf("f(sqrt(a+b*x),2/3*1/b*sqrt((a+b*x)^3))")),eachTransformEntry&&(scan_meta(eachTransformEntry),p1=pop(),p5=cadr(p1),p6=caddr(p1),p7=cdddr(p1),f_equals_a(transform_h,generalTransform))){transformationSuccessful=!0;break}return moveTos(transform_h),transformationSuccessful?(push(p6),Eval(),p1=pop(),transformationSuccessful=!0):p1=generalTransform?p3:symbol(NIL),restoreMetaBindings(),push(p1),restore(),transformationSuccessful},saveMetaBindings=function(){return push(get_binding(symbol(METAA))),push(get_binding(symbol(METAB))),push(get_binding(symbol(METAX)))},restoreMetaBindings=function(){return set_binding(symbol(METAX),pop()),set_binding(symbol(METAB),pop()),set_binding(symbol(METAA),pop())},f_equals_a=function(h,generalTransform){var fea_i,fea_j,l1,m1,originalexpanding,ref2,ref3,ref4,ref5;for(fea_i=0,fea_j=0,fea_i=l1=ref2=h,ref3=tos;ref2<=ref3?l1<ref3:l1>ref3;fea_i=ref2<=ref3?++l1:--l1)for(set_binding(symbol(METAA),stack[fea_i]),DEBUG&&console.log("  binding METAA to "+get_binding(symbol(METAA))),fea_j=m1=ref4=h,ref5=tos;ref4<=ref5?m1<ref5:m1>ref5;fea_j=ref4<=ref5?++m1:--m1){for(set_binding(symbol(METAB),stack[fea_j]),DEBUG&&console.log("  binding METAB to "+get_binding(symbol(METAB))),p1=p7;iscons(p1)&&(push(car(p1)),Eval(),p2=pop(),!isZeroAtomOrTensor(p2));)p1=cdr(p1);if(!iscons(p1)&&(push(p3),DEBUG&&console.log("about to evaluate template expression: "+p5+" binding METAA to "+get_binding(symbol(METAA))+" and binding METAB to "+get_binding(symbol(METAB))+" and binding METAX to "+get_binding(symbol(METAX))),push(p5),generalTransform&&(originalexpanding=expanding,expanding=!1),Eval(),generalTransform&&(expanding=originalexpanding),DEBUG&&console.log("  comparing "+stack[tos-1]+" to: "+stack[tos-2]),subtract(),p1=pop(),isZeroAtomOrTensor(p1)))return DEBUG&&(console.log("binding METAA to "+get_binding(symbol(METAA))),console.log("binding METAB to "+get_binding(symbol(METAB))),console.log("binding METAX to "+get_binding(symbol(METAX))),console.log("comparing "+p3+" to: "+p5)),1}return 0},Eval_transpose=function(){return push(cadr(p1)),Eval(),cddr(p1)===symbol(NIL)?(push_integer(1),push_integer(2)):(push(caddr(p1)),Eval(),push(cadddr(p1)),Eval()),transpose()},transpose=function(){var a,accumulator,ai,an,b,eachEntry,i,innerTranspSwitch1,innerTranspSwitch2,j,k,l,l1,m,m1,n1,ndim,nelem,o1,q1,r1,ref2,ref3,ref4,ref5,ref6,ref7,ref8,s1,t;for(i=0,j=0,k=0,l=0,m=0,ndim=0,nelem=0,t=0,ai=[],an=[],i=l1=0,ref2=MAXDIM;0<=ref2?l1<ref2:l1>ref2;i=0<=ref2?++l1:--l1)ai[i]=0,an[i]=0;if(save(),p3=pop(),p2=pop(),p1=pop(),isNumericAtom(p1))return push(p1),void restore();if((isplusone(p2)&&isplustwo(p3)||isplusone(p3)&&isplustwo(p2))&&isidentitymatrix(p1))return push(p1),void restore();if(istranspose(p1)&&(innerTranspSwitch1=car(cdr(cdr(p1))),innerTranspSwitch2=car(cdr(cdr(cdr(p1)))),equal(innerTranspSwitch1,p3)&&equal(innerTranspSwitch2,p2)||equal(innerTranspSwitch2,p3)&&equal(innerTranspSwitch1,p2)||equal(innerTranspSwitch1,symbol(NIL))&&equal(innerTranspSwitch2,symbol(NIL))&&(isplusone(p3)&&isplustwo(p2)||isplusone(p2)&&isplustwo(p3))))return push(car(cdr(p1))),void restore();if(expanding&&isadd(p1)){for(p1=cdr(p1),push(zero);iscons(p1);)push(car(p1)),push(p2),push(p3),transpose(),add(),p1=cdr(p1);restore()}else if(expanding&&ismultiply(p1)){for(p1=cdr(p1),push(one);iscons(p1);)push(car(p1)),push(p2),push(p3),transpose(),multiply(),p1=cdr(p1);restore()}else{if(!expanding||!isinnerordot(p1)){if(!istensor(p1))return isZeroAtomOrTensor(p1)?(push(zero),void restore()):(push_symbol(TRANSPOSE),push(p1),isplusone(p2)&&isplustwo(p3)||isplusone(p3)&&isplustwo(p2)?list(2):(push(p2),push(p3),list(4)),void restore());if(ndim=p1.tensor.ndim,nelem=p1.tensor.nelem,1===ndim)return push(p1),void restore();for(push(p2),l=pop_integer(),push(p3),m=pop_integer(),(l<1||l>ndim||m<1||m>ndim)&&stop("transpose: index out of range"),l--,m--,(p2=alloc_tensor(nelem)).tensor.ndim=ndim,i=n1=0,ref4=ndim;0<=ref4?n1<ref4:n1>ref4;i=0<=ref4?++n1:--n1)p2.tensor.dim[i]=p1.tensor.dim[i];for(p2.tensor.dim[l]=p1.tensor.dim[m],p2.tensor.dim[m]=p1.tensor.dim[l],a=p1.tensor.elem,b=p2.tensor.elem,i=o1=0,ref5=ndim;0<=ref5?o1<ref5:o1>ref5;i=0<=ref5?++o1:--o1)ai[i]=0,an[i]=p1.tensor.dim[i];for(i=q1=0,ref6=nelem;0<=ref6?q1<ref6:q1>ref6;i=0<=ref6?++q1:--q1){for(t=ai[l],ai[l]=ai[m],ai[m]=t,t=an[l],an[l]=an[m],an[m]=t,k=0,j=r1=0,ref7=ndim;0<=ref7?r1<ref7:r1>ref7;j=0<=ref7?++r1:--r1)k=k*an[j]+ai[j];for(t=ai[l],ai[l]=ai[m],ai[m]=t,t=an[l],an[l]=an[m],an[m]=t,b[k]=a[i],j=s1=ref8=ndim-1;(ref8<=0?s1<=0:s1>=0)&&!(++ai[j]<an[j]);j=ref8<=0?++s1:--s1)ai[j]=0}return push(p2),restore()}for(p1=cdr(p1),accumulator=[];iscons(p1);)accumulator.push([car(p1),p2,p3]),p1=cdr(p1);for(eachEntry=m1=ref3=accumulator.length-1;ref3<=0?m1<=0:m1>=0;eachEntry=ref3<=0?++m1:--m1)push(accumulator[eachEntry][0]),push(accumulator[eachEntry][1]),push(accumulator[eachEntry][2]),transpose(),eachEntry!==accumulator.length-1&&inner();restore()}},Eval_user_function=function(){var bodyAndFormalArguments,h;if(DEBUG&&console.log("Eval_user_function evaluating: "+car(p1)),car(p1)!==symbol(SYMBOL_D)||get_binding(symbol(SYMBOL_D))!==symbol(SYMBOL_D)){if(push(car(p1)),Eval(),bodyAndFormalArguments=pop(),isNumericAtom(bodyAndFormalArguments)?stop("expected function invocation, found multiplication instead. Use '*' symbol explicitly for multiplication."):istensor(bodyAndFormalArguments)?stop("expected function invocation, found tensor product instead. Use 'dot/inner' explicitly."):isstr(bodyAndFormalArguments)&&stop("expected function, found string instead."),p3=car(cdr(bodyAndFormalArguments)),p4=car(cdr(cdr(bodyAndFormalArguments))),p5=cdr(p1),car(bodyAndFormalArguments)===symbol(FUNCTION)&&bodyAndFormalArguments!==car(p1)){for(p1=p4,p2=p5,h=tos;iscons(p1)&&iscons(p2);)push(car(p1)),push(car(p2)),p1=cdr(p1),p2=cdr(p2);return list(tos-h),p6=pop(),push(p3),iscons(p6)&&(push(p6),rewrite_args()),Eval()}for(h=tos,push(bodyAndFormalArguments),p1=p5;iscons(p1);)push(car(p1)),Eval(),p1=cdr(p1);list(tos-h)}else Eval_derivative()},rewrite_args=function(){var h,n;if(n=0,save(),p2=pop(),p1=pop(),istensor(p1))return n=rewrite_args_tensor(),restore(),n;if(iscons(p1)){for(h=tos,car(p1)===car(p2)?(push_symbol(EVAL),push(car(cdr(p2))),list(2)):push(car(p1)),p1=cdr(p1);iscons(p1);)push(car(p1)),push(p2),n+=rewrite_args(),p1=cdr(p1);return list(tos-h),restore(),n}if(!issymbol(p1))return push(p1),restore(),0;for(p3=p2;iscons(p3);){if(p1===car(p3))return push(cadr(p3)),restore(),1;p3=cddr(p3)}return p3=get_binding(p1),push(p3),p1!==p3&&(push(p2),0===(n=rewrite_args())&&(pop(),push(p1))),restore(),n},rewrite_args_tensor=function(){var i,l1,n,ref2;for(n=0,i=0,push(p1),copy_tensor(),i=l1=0,ref2=(p1=pop()).tensor.nelem;0<=ref2?l1<ref2:l1>ref2;i=0<=ref2?++l1:--l1)push(p1.tensor.elem[i]),push(p2),n+=rewrite_args(),p1.tensor.elem[i]=pop();return check_tensor_dimensions(p1),push(p1),n},Eval_zero=function(){var i,k,l1,m,m1,n,ref2,ref3;for(i=0,k=[],m=0,n=0,i=l1=0,ref2=MAXDIM;0<=ref2?l1<ref2:l1>ref2;i=0<=ref2?++l1:--l1)k[i]=0;for(m=1,n=0,p2=cdr(p1);iscons(p2);){if(push(car(p2)),Eval(),(i=pop_integer())<1||isNaN(i))return void push(zero);m*=i,k[n++]=i,p2=cdr(p2)}if(0!==n){for((p1=alloc_tensor(m)).tensor.ndim=n,i=m1=0,ref3=n;0<=ref3?m1<ref3:m1>ref3;i=0<=ref3?++m1:--m1)p1.tensor.dim[i]=k[i];return push(p1)}push(zero)},allocatedId=0,alloc_tensor=function(nelem){var i,l1,p,ref2;for(i=0,(p=new U).k=TENSOR,p.tensor=new tensor,p.tensor.nelem=nelem,i=l1=0,ref2=nelem;0<=ref2?l1<ref2:l1>ref2;i=0<=ref2?++l1:--l1)p.tensor.elem[i]=zero;return p.tensor.allocatedId=allocatedId,allocatedId++,check_tensor_dimensions(p),p},Find=function(p,q){var i,l1,ref2;if(i=0,equal(p,q))return 1;if(istensor(p)){for(i=l1=0,ref2=p.tensor.nelem;0<=ref2?l1<ref2:l1>ref2;i=0<=ref2?++l1:--l1)if(Find(p.tensor.elem[i],q))return 1;return 0}for(;iscons(p);){if(Find(car(p),q))return 1;p=cdr(p)}return 0},findPossibleClockForm=function(p){var i,l1,ref2;if(i=0,isimaginaryunit(p))return 0;if(car(p)===symbol(POWER)&&!isinteger(caddr(p1))&&Find(cadr(p),imaginaryunit))return 1;if(car(p)===symbol(POWER)&&equaln(cadr(p),-1)&&!isinteger(caddr(p1)))return 1;if(istensor(p)){for(i=l1=0,ref2=p.tensor.nelem;0<=ref2?l1<ref2:l1>ref2;i=0<=ref2?++l1:--l1)if(findPossibleClockForm(p.tensor.elem[i]))return 1;return 0}for(;iscons(p);){if(findPossibleClockForm(car(p)))return 1;p=cdr(p)}return 0},findPossibleExponentialForm=function(p){var i,l1,ref2;if(i=0,car(p)===symbol(POWER)&&cadr(p)===symbol(E))return Find(caddr(p),imaginaryunit);if(istensor(p)){for(i=l1=0,ref2=p.tensor.nelem;0<=ref2?l1<ref2:l1>ref2;i=0<=ref2?++l1:--l1)if(findPossibleExponentialForm(p.tensor.elem[i]))return 1;return 0}for(;iscons(p);){if(findPossibleExponentialForm(car(p)))return 1;p=cdr(p)}return 0},$.Find=Find,init=function(){var i,l1,ref2;if(i=0,flag=0,reset_after_error(),chainOfUserSymbolsNotFunctionsBeingEvaluated=[],!flag){for(flag=1,i=l1=0,ref2=NSYM;0<=ref2?l1<ref2:l1>ref2;i=0<=ref2?++l1:--l1)symtab[i]=new U,symtab[i].k=SYM,binding[i]=symtab[i],isSymbolReclaimable[i]=!1;return defn()}},defn_str=['version="'+version+'"',"e=exp(1)","i=sqrt(-1)","autoexpand=1","assumeRealVariables=1","trange=[-pi,pi]","xrange=[-10,10]","yrange=[-10,10]","last=0","trace=0","forceFixedPrintout=1","maxFixedPrintoutDigits=6","printLeaveEAlone=1","printLeaveXAlone=0","cross(u,v)=[u[2]*v[3]-u[3]*v[2],u[3]*v[1]-u[1]*v[3],u[1]*v[2]-u[2]*v[1]]","curl(v)=[d(v[3],y)-d(v[2],z),d(v[1],z)-d(v[3],x),d(v[2],x)-d(v[1],y)]","div(v)=d(v[1],x)+d(v[2],y)+d(v[3],z)","ln(x)=log(x)"],defn=function(){var definitionOfInterest,defn_i,l1,originalCodeGen,ref2;for(p0=symbol(NIL),p1=symbol(NIL),p2=symbol(NIL),p3=symbol(NIL),p4=symbol(NIL),p5=symbol(NIL),p6=symbol(NIL),p7=symbol(NIL),p8=symbol(NIL),p9=symbol(NIL),std_symbol("abs",ABS),std_symbol("add",ADD),std_symbol("adj",ADJ),std_symbol("and",AND),std_symbol("approxratio",APPROXRATIO),std_symbol("arccos",ARCCOS),std_symbol("arccosh",ARCCOSH),std_symbol("arcsin",ARCSIN),std_symbol("arcsinh",ARCSINH),std_symbol("arctan",ARCTAN),std_symbol("arctanh",ARCTANH),std_symbol("arg",ARG),std_symbol("atomize",ATOMIZE),std_symbol("besselj",BESSELJ),std_symbol("bessely",BESSELY),std_symbol("binding",BINDING),std_symbol("binomial",BINOMIAL),std_symbol("ceiling",CEILING),std_symbol("check",CHECK),std_symbol("choose",CHOOSE),std_symbol("circexp",CIRCEXP),std_symbol("clear",CLEAR),std_symbol("clearall",CLEARALL),std_symbol("clearpatterns",CLEARPATTERNS),std_symbol("clock",CLOCK),std_symbol("coeff",COEFF),std_symbol("cofactor",COFACTOR),std_symbol("condense",CONDENSE),std_symbol("conj",CONJ),std_symbol("contract",CONTRACT),std_symbol("cos",COS),std_symbol("cosh",COSH),std_symbol("decomp",DECOMP),std_symbol("defint",DEFINT),std_symbol("deg",DEGREE),std_symbol("denominator",DENOMINATOR),std_symbol("det",DET),std_symbol("derivative",DERIVATIVE),std_symbol("dim",DIM),std_symbol("dirac",DIRAC),std_symbol("divisors",DIVISORS),std_symbol("do",DO),std_symbol("dot",DOT),std_symbol("draw",DRAW),std_symbol("dsolve",DSOLVE),std_symbol("erf",ERF),std_symbol("erfc",ERFC),std_symbol("eigen",EIGEN),std_symbol("eigenval",EIGENVAL),std_symbol("eigenvec",EIGENVEC),std_symbol("eval",EVAL),std_symbol("exp",EXP),std_symbol("expand",EXPAND),std_symbol("expcos",EXPCOS),std_symbol("expsin",EXPSIN),std_symbol("factor",FACTOR),std_symbol("factorial",FACTORIAL),std_symbol("factorpoly",FACTORPOLY),std_symbol("filter",FILTER),std_symbol("float",FLOATF),std_symbol("floor",FLOOR),std_symbol("for",FOR),std_symbol("function",FUNCTION),std_symbol("Gamma",GAMMA),std_symbol("gcd",GCD),std_symbol("hermite",HERMITE),std_symbol("hilbert",HILBERT),std_symbol("imag",IMAG),std_symbol("component",INDEX),std_symbol("inner",INNER),std_symbol("integral",INTEGRAL),std_symbol("inv",INV),std_symbol("invg",INVG),std_symbol("isinteger",ISINTEGER),std_symbol("isprime",ISPRIME),std_symbol("laguerre",LAGUERRE),std_symbol("lcm",LCM),std_symbol("leading",LEADING),std_symbol("legendre",LEGENDRE),std_symbol("log",LOG),std_symbol("lookup",LOOKUP),std_symbol("mod",MOD),std_symbol("multiply",MULTIPLY),std_symbol("not",NOT),std_symbol("nroots",NROOTS),std_symbol("number",NUMBER),std_symbol("numerator",NUMERATOR),std_symbol("operator",OPERATOR),std_symbol("or",OR),std_symbol("outer",OUTER),std_symbol("pattern",PATTERN),std_symbol("patternsinfo",PATTERNSINFO),std_symbol("polar",POLAR),std_symbol("power",POWER),std_symbol("prime",PRIME),std_symbol("print",PRINT),std_symbol("print2dascii",PRINT2DASCII),std_symbol("printcomputer",PRINTFULL),std_symbol("printlatex",PRINTLATEX),std_symbol("printlist",PRINTLIST),std_symbol("printhuman",PRINTPLAIN),std_symbol("printLeaveEAlone",PRINT_LEAVE_E_ALONE),std_symbol("printLeaveXAlone",PRINT_LEAVE_X_ALONE),std_symbol("product",PRODUCT),std_symbol("quote",QUOTE),std_symbol("quotient",QUOTIENT),std_symbol("rank",RANK),std_symbol("rationalize",RATIONALIZE),std_symbol("real",REAL),std_symbol("rect",YYRECT),std_symbol("roots",ROOTS),std_symbol("round",ROUND),std_symbol("equals",SETQ),std_symbol("sgn",SGN),std_symbol("silentpattern",SILENTPATTERN),std_symbol("simplify",SIMPLIFY),std_symbol("sin",SIN),std_symbol("sinh",SINH),std_symbol("shape",SHAPE),std_symbol("sqrt",SQRT),std_symbol("stop",STOP),std_symbol("subst",SUBST),std_symbol("sum",SUM),std_symbol("symbolsinfo",SYMBOLSINFO),std_symbol("tan",TAN),std_symbol("tanh",TANH),std_symbol("taylor",TAYLOR),std_symbol("test",TEST),std_symbol("testeq",TESTEQ),std_symbol("testge",TESTGE),std_symbol("testgt",TESTGT),std_symbol("testle",TESTLE),std_symbol("testlt",TESTLT),std_symbol("transpose",TRANSPOSE),std_symbol("unit",UNIT),std_symbol("zero",ZERO),std_symbol("nil",NIL),std_symbol("autoexpand",AUTOEXPAND),std_symbol("bake",BAKE),std_symbol("assumeRealVariables",ASSUME_REAL_VARIABLES),std_symbol("last",LAST),std_symbol("lastprint",LAST_PRINT),std_symbol("last2dasciiprint",LAST_2DASCII_PRINT),std_symbol("lastfullprint",LAST_FULL_PRINT),std_symbol("lastlatexprint",LAST_LATEX_PRINT),std_symbol("lastlistprint",LAST_LIST_PRINT),std_symbol("lastplainprint",LAST_PLAIN_PRINT),std_symbol("trace",TRACE),std_symbol("forceFixedPrintout",FORCE_FIXED_PRINTOUT),std_symbol("maxFixedPrintoutDigits",MAX_FIXED_PRINTOUT_DIGITS),std_symbol("~",YYE),std_symbol("$DRAWX",DRAWX),std_symbol("$METAA",METAA),std_symbol("$METAB",METAB),std_symbol("$METAX",METAX),std_symbol("$SECRETX",SECRETX),std_symbol("version",VERSION),std_symbol("pi",PI),std_symbol("a",SYMBOL_A),std_symbol("b",SYMBOL_B),std_symbol("c",SYMBOL_C),std_symbol("d",SYMBOL_D),std_symbol("i",SYMBOL_I),std_symbol("j",SYMBOL_J),std_symbol("n",SYMBOL_N),std_symbol("r",SYMBOL_R),std_symbol("s",SYMBOL_S),std_symbol("t",SYMBOL_T),std_symbol("x",SYMBOL_X),std_symbol("y",SYMBOL_Y),std_symbol("z",SYMBOL_Z),std_symbol("I",SYMBOL_IDENTITY_MATRIX),std_symbol("a_",SYMBOL_A_UNDERSCORE),std_symbol("b_",SYMBOL_B_UNDERSCORE),std_symbol("x_",SYMBOL_X_UNDERSCORE),std_symbol("$C1",C1),std_symbol("$C2",C2),std_symbol("$C3",C3),std_symbol("$C4",C4),std_symbol("$C5",C5),std_symbol("$C6",C6),defineSomeHandyConstants(),originalCodeGen=codeGen,codeGen=!1,defn_i=l1=0,ref2=defn_str.length;0<=ref2?l1<ref2:l1>ref2;defn_i=0<=ref2?++l1:--l1)definitionOfInterest=defn_str[defn_i],scan(definitionOfInterest),DEBUG&&(console.log("... evaling "+definitionOfInterest),console.log("top of stack:"),console.log(print_list(stack[tos-1]))),Eval(),pop();return codeGen=originalCodeGen},defineSomeHandyConstants=function(){return push_integer(0),zero=pop(),push_integer(1),one=pop(),push_double(1),one_as_double=pop(),push_symbol(POWER),DEBUG&&console.log(print_list(stack[tos-1])),push_integer(-1),DEBUG&&console.log(print_list(stack[tos-1])),push_rational(1,2),DEBUG&&console.log(print_list(stack[tos-1])),list(3),DEBUG&&console.log(print_list(stack[tos-1])),imaginaryunit=pop()},mcmp=function(a,b){return a.compare(b)},mcmpint=function(a,n){var b,t;return b=bigInt(n),t=mcmp(a,b)},strcmp=function(str1,str2){return str1===str2?0:str1>str2?1:-1},doubleToReasonableString=function(d){var maxFixedPrintoutDigits,stringRepresentation;return codeGen?""+d:(isZeroAtomOrTensor(get_binding(symbol(FORCE_FIXED_PRINTOUT)))?(stringRepresentation=""+d,stringRepresentation=printMode===PRINTMODE_LATEX?/\d*\.\d*e.*/gm.test(stringRepresentation)?stringRepresentation.replace(/e(.*)/gm,"\\mathrm{e}{$1}"):stringRepresentation.replace(/(\d+)e(.*)/gm,"$1.0\\mathrm{e}{$2}"):/\d*\.\d*e.*/gm.test(stringRepresentation)?stringRepresentation.replace(/e(.*)/gm,"*10^($1)"):stringRepresentation.replace(/(\d+)e(.*)/gm,"$1.0*10^($2)")):(push(get_binding(symbol(MAX_FIXED_PRINTOUT_DIGITS))),maxFixedPrintoutDigits=pop_integer(),-1===(stringRepresentation=(stringRepresentation=(stringRepresentation=""+d.toFixed(maxFixedPrintoutDigits)).replace(/(\.\d*?[1-9])0+$/gm,"$1")).replace(/\.0+$/gm,"")).indexOf(".")&&(stringRepresentation+=".0"),parseFloat(stringRepresentation)!==d&&(stringRepresentation=d.toFixed(maxFixedPrintoutDigits)+"...")),stringRepresentation)},clear_term=function(){},isspace=function(s){return null!=s&&(" "===s||"\t"===s||"\n"===s||"\v"===s||"\f"===s||"\r"===s)},isdigit=function(str){return null!=str&&/^\d+$/.test(str)},isalpha=function(str){return null!=str&&-1===str.search(/[^A-Za-z]/)},isalphaOrUnderscore=function(str){return null!=str&&-1===str.search(/[^A-Za-z_]/)},isunderscore=function(str){return null!=str&&-1===str.search(/_/)},isalnumorunderscore=function(str){return null!=str&&(isalphaOrUnderscore(str)||isdigit(str))},count=function(p){var n;if(iscons(p))for(n=0;iscons(p);)n+=count(car(p))+1,p=cdr(p);else n=1;return n},countOccurrencesOfSymbol=function(needle,p){var n;if(n=0,iscons(p))for(;iscons(p);)n+=countOccurrencesOfSymbol(needle,car(p)),p=cdr(p);else equal(needle,p)&&(n=1);return n},countsize=function(p){var i,l1,n,ref2;if(n=0,istensor(p))for(i=l1=0,ref2=p.tensor.nelem;0<=ref2?l1<ref2:l1>ref2;i=0<=ref2?++l1:--l1)n+=p.tensor.elem[i];else if(iscons(p))for(;iscons(p);)n+=count(car(p))+1,p=cdr(p);else n=1;return n},stop=function(s){var message;throw errorMessage+="Stop: ",message=errorMessage+=s,errorMessage="",moveTos(0),new Error(message)},findDependenciesInScript=function(stringToBeParsed,dontGenerateCode){var allReturnedLatexStrings,allReturnedPlainStrings,bodyForReadableSummaryOfGeneratedCode,cyclesDescriptions,deQuotedDep,dependencyInfo,eachDependency,error,generatedBody,generatedCode,i,indexOfEachReplacement,indexOfPartRemainingToBeParsed,inited,key,l1,len,len1,len2,len3,len4,len5,len6,len7,m1,n,n1,newUserSymbol,o1,origPrintMode,originalUserSymbol,parameters,q1,r1,readableSummaryOfGeneratedCode,recursedDependencies,ref2,replacementsFrom,replacementsTo,s1,scriptEvaluation,stringToBeRun,t1,testableString,timeStartFromAlgebra,toBePrinted,u1,userVariablesMentioned,value,variablesWithCycles;for(DEBUG&&console.log("stringToBeParsed: "+stringToBeParsed),timeStartFromAlgebra=(new Date).getTime(),inited=!0,codeGen=!0,symbolsDependencies={},symbolsHavingReassignments=[],symbolsInExpressionsWithoutAssignments=[],patternHasBeenFound=!1,indexOfPartRemainingToBeParsed=0,allReturnedPlainStrings="",allReturnedLatexStrings="",n=0,dependencyInfo={affectsVariables:[],affectedBy:[]},stringToBeRun=stringToBeParsed;;){try{errorMessage="",check_stack(),DEBUG&&console.log("findDependenciesInScript: scanning"),n=scan(stringToBeParsed.substring(indexOfPartRemainingToBeParsed)),DEBUG&&console.log("scanned"),pop(),check_stack()}catch(error1){error=error1,PRINTOUTRESULT&&console.log(error),errorMessage=error+"",reset_after_error();break}if(0===n)break;indexOfPartRemainingToBeParsed+=n}for(key in testableString="",DEBUG&&console.log("all local dependencies ----------------"),testableString+="All local dependencies: ",symbolsDependencies){for(value=symbolsDependencies[key],DEBUG&&console.log("variable "+key+" depends on: "),dependencyInfo.affectsVariables.push(key),testableString+=" variable "+key+" depends on: ",l1=0,len=value.length;l1<len;l1++)i=value[l1],DEBUG&&console.log("    "+i),"'"!==i[0]&&dependencyInfo.affectedBy.push(i),testableString+=i+", ";testableString+="; "}for(testableString+=". ",DEBUG&&console.log("Symbols with reassignments ----------------"),testableString+="Symbols with reassignments: ",m1=0,len1=symbolsHavingReassignments.length;m1<len1;m1++)key=symbolsHavingReassignments[m1],-1===dependencyInfo.affectedBy.indexOf(key)&&(dependencyInfo.affectedBy.push(key),testableString+=key+", ");for(testableString+=". ",DEBUG&&console.log("Symbols in expressions without assignments ----------------"),testableString+="Symbols in expressions without assignments: ",n1=0,len2=symbolsInExpressionsWithoutAssignments.length;n1<len2;n1++)key=symbolsInExpressionsWithoutAssignments[n1],-1===dependencyInfo.affectedBy.indexOf(key)&&(dependencyInfo.affectedBy.push(key),testableString+=key+", ");if(testableString+=". ",dependencyInfo.affectedBy.push("PATTERN_DEPENDENCY"),patternHasBeenFound&&(dependencyInfo.affectsVariables.push("PATTERN_DEPENDENCY"),testableString+=" - PATTERN_DEPENDENCY inserted - "),DEBUG&&console.log("All dependencies recursively ----------------"),testableString+="All dependencies recursively: ",scriptEvaluation=["",""],generatedCode="",readableSummaryOfGeneratedCode="",""===errorMessage&&!dontGenerateCode){try{allReturnedPlainStrings="",allReturnedLatexStrings="",scriptEvaluation=run(stringToBeParsed,!0),allReturnedPlainStrings="",allReturnedLatexStrings=""}catch(error1){error=error1,PRINTOUTRESULT&&console.log(error),errorMessage=error+"",init()}if(""===errorMessage)for(key in symbolsDependencies){for(codeGen=!0,DEBUG&&console.log("  variable "+key+" is: "+get_binding(usr_symbol(key)).toString()),codeGen=!1,DEBUG&&console.log("  variable "+key+" depends on: "),testableString+=" variable "+key+" depends on: ",recursiveDependencies(key,recursedDependencies=[],[],variablesWithCycles=[],[],cyclesDescriptions=[]),o1=0,len3=variablesWithCycles.length;o1<len3;o1++)i=variablesWithCycles[o1],DEBUG&&console.log("    --\x3e cycle through "+i);for(q1=0,len4=recursedDependencies.length;q1<len4;q1++)i=recursedDependencies[q1],DEBUG&&console.log("    "+i),testableString+=i+", ";for(testableString+="; ",r1=0,len5=cyclesDescriptions.length;r1<len5;r1++)testableString+=" "+(i=cyclesDescriptions[r1])+", ";for(DEBUG&&console.log("  code generation:"+key+" is: "+get_binding(usr_symbol(key)).toString()),push(get_binding(usr_symbol(key))),replacementsFrom=[],replacementsTo=[],s1=0,len6=recursedDependencies.length;s1<len6;s1++)"'"===(eachDependency=recursedDependencies[s1])[0]&&(deQuotedDep=eachDependency.substring(1),originalUserSymbol=usr_symbol(deQuotedDep),newUserSymbol=usr_symbol("AVOID_BINDING_TO_EXTERNAL_SCOPE_VALUE"+deQuotedDep),replacementsFrom.push(originalUserSymbol),replacementsTo.push(newUserSymbol),push(originalUserSymbol),push(newUserSymbol),subst(),DEBUG&&console.log("after substitution: "+stack[tos-1]));try{simplifyForCodeGeneration()}catch(error1){error=error1,PRINTOUTRESULT&&console.log(error),errorMessage=error+"",init()}for(indexOfEachReplacement=t1=0,ref2=replacementsFrom.length;0<=ref2?t1<ref2:t1>ref2;indexOfEachReplacement=0<=ref2?++t1:--t1)push(replacementsTo[indexOfEachReplacement]),push(replacementsFrom[indexOfEachReplacement]),subst();if(clearRenamedVariablesToAvoidBindingToExternalScope(),""===errorMessage){if(toBePrinted=pop(),collectUserSymbols(toBePrinted,userVariablesMentioned=[]),allReturnedPlainStrings="",allReturnedLatexStrings="",codeGen=!0,generatedBody=toBePrinted.toString(),codeGen=!1,origPrintMode=printMode,printMode=PRINTMODE_LATEX,bodyForReadableSummaryOfGeneratedCode=toBePrinted.toString(),printMode=origPrintMode,-1!==variablesWithCycles.indexOf(key))generatedCode+="// "+key+" is part of a cyclic dependency, no code generated.",readableSummaryOfGeneratedCode+="#"+key+" is part of a cyclic dependency, no code generated.";else if(0!==(userVariablesMentioned=(userVariablesMentioned=userVariablesMentioned.filter((function(x){return-1===predefinedSymbolsInGlobalScope_doNotTrackInDependencies.indexOf(x+"")}))).filter((function(x){return-1!==recursedDependencies.indexOf(x+"")||-1!==recursedDependencies.indexOf("'"+x)}))).length){for(parameters="(",u1=0,len7=userVariablesMentioned.length;u1<len7;u1++)(i=userVariablesMentioned[u1]).printname!==key&&(parameters+=i.printname+", ");parameters=parameters.replace(/, $/gm,""),generatedCode+=key+" = function "+(parameters+=")")+" { return ( "+generatedBody+" ); }",readableSummaryOfGeneratedCode+=key+parameters+" = "+bodyForReadableSummaryOfGeneratedCode}else generatedCode+=key+" = "+generatedBody+";",readableSummaryOfGeneratedCode+=key+" = "+bodyForReadableSummaryOfGeneratedCode;generatedCode+="\n",readableSummaryOfGeneratedCode+="\n",DEBUG&&console.log("    "+generatedCode)}}}return generatedCode=generatedCode.replace(/\n$/gm,""),readableSummaryOfGeneratedCode=readableSummaryOfGeneratedCode.replace(/\n$/gm,""),symbolsDependencies={},symbolsHavingReassignments=[],patternHasBeenFound=!1,symbolsInExpressionsWithoutAssignments=[],DEBUG&&console.log("testable string: "+testableString),TIMING_DEBUGS&&console.log("findDependenciesInScript time for: "+stringToBeRun+" : "+((new Date).getTime()-timeStartFromAlgebra)+"ms"),[testableString,scriptEvaluation[0],generatedCode,readableSummaryOfGeneratedCode,scriptEvaluation[1],errorMessage,dependencyInfo]},recursiveDependencies=function(variableToBeChecked,arrayWhereDependenciesWillBeAdded,variablesAlreadyFleshedOut,variablesWithCycles,chainBeingChecked,cyclesDescriptions){var cyclesDescription,i,k,l1,len,len1,m1,ref2;if(variablesAlreadyFleshedOut.push(variableToBeChecked),null!=symbolsDependencies[chainBeingChecked[chainBeingChecked.length-1]]&&-1!==symbolsDependencies[chainBeingChecked[chainBeingChecked.length-1]].indexOf("'"+variableToBeChecked))return DEBUG&&console.log("can't keep following the chain of "+variableToBeChecked+" because it's actually a variable bound to a parameter"),-1===arrayWhereDependenciesWillBeAdded.indexOf("'"+variableToBeChecked)&&-1===arrayWhereDependenciesWillBeAdded.indexOf(variableToBeChecked)&&arrayWhereDependenciesWillBeAdded.push(variableToBeChecked),arrayWhereDependenciesWillBeAdded;if(chainBeingChecked.push(variableToBeChecked),null==symbolsDependencies[variableToBeChecked])return-1===arrayWhereDependenciesWillBeAdded.indexOf(variableToBeChecked)&&arrayWhereDependenciesWillBeAdded.push(variableToBeChecked),arrayWhereDependenciesWillBeAdded;for(l1=0,len=(ref2=symbolsDependencies[variableToBeChecked]).length;l1<len;l1++)if(i=ref2[l1],-1!==chainBeingChecked.indexOf(i)){for(DEBUG&&console.log("  found cycle:"),cyclesDescription="",m1=0,len1=chainBeingChecked.length;m1<len1;m1++)k=chainBeingChecked[m1],-1===variablesWithCycles.indexOf(k)&&variablesWithCycles.push(k),DEBUG&&console.log(k+" --\x3e "),cyclesDescription+=k+" --\x3e ";DEBUG&&console.log(" ... then "+i+" again"),cyclesDescription+=" ... then "+i+" again",cyclesDescriptions.push(cyclesDescription),-1===variablesWithCycles.indexOf(i)&&variablesWithCycles.push(i)}else recursiveDependencies(i,arrayWhereDependenciesWillBeAdded,variablesAlreadyFleshedOut,variablesWithCycles,chainBeingChecked,cyclesDescriptions),chainBeingChecked.pop();return arrayWhereDependenciesWillBeAdded},inited=!1,latexErrorSign="\\rlap{\\large\\color{red}\\bigtriangleup}{\\ \\ \\tiny\\color{red}!}",turnErrorMessageToLatex=function(theErrorMessage){return theErrorMessage="$$\\text{"+(theErrorMessage=(theErrorMessage=(theErrorMessage=(theErrorMessage=(theErrorMessage=(theErrorMessage=(theErrorMessage=theErrorMessage.replace(/\n/g,"")).replace(/_/g,"} \\_ \\text{")).replace(new RegExp(String.fromCharCode(transpose_unicode),"g"),"}{}^{T}\\text{")).replace(new RegExp(String.fromCharCode(dotprod_unicode),"g"),"}\\cdot \\text{")).replace("Stop:","}  \\quad \\text{Stop:")).replace("->","}  \\rightarrow \\text{")).replace("?","}\\enspace "+latexErrorSign+" \\enspace  \\text{")).replace(/\n/g,"")+"}$$"},normaliseDots=function(stringToNormalise){return stringToNormalise=(stringToNormalise=(stringToNormalise=(stringToNormalise=(stringToNormalise=stringToNormalise.replace(new RegExp(String.fromCharCode(8901),"g"),String.fromCharCode(dotprod_unicode))).replace(new RegExp(String.fromCharCode(8226),"g"),String.fromCharCode(dotprod_unicode))).replace(new RegExp(String.fromCharCode(12539),"g"),String.fromCharCode(dotprod_unicode))).replace(new RegExp(String.fromCharCode(55296),"g"),String.fromCharCode(dotprod_unicode))).replace(new RegExp(String.fromCharCode(65381),"g"),String.fromCharCode(dotprod_unicode))},TIMING_DEBUGS=!1,run=function(stringToBeRun,generateLatex){var allReturnedLatexStrings,allReturnedPlainStrings,collectedLatexResult,collectedPlainResult,error,errorWhileExecution,i,indexOfPartRemainingToBeParsed,n,stringToBeReturned,theErrorMessage,timeStart,timingDebugWrite;if(null==generateLatex&&(generateLatex=!1),timeStart=(new Date).getTime(),"selftest"!==(stringToBeRun=normaliseDots(stringToBeRun))){for(inited||(inited=!0,init()),i=0,n=0,indexOfPartRemainingToBeParsed=0,allReturnedPlainStrings="",allReturnedLatexStrings="";;){try{errorMessage="",check_stack(),n=scan(stringToBeRun.substring(indexOfPartRemainingToBeParsed)),p1=pop(),check_stack()}catch(error1){error=error1,PRINTOUTRESULT&&console.log(error),allReturnedPlainStrings+=error.message,generateLatex&&(allReturnedLatexStrings+=theErrorMessage=turnErrorMessageToLatex(error.message)),reset_after_error();break}if(0===n)break;indexOfPartRemainingToBeParsed+=n,push(p1),errorWhileExecution=!1;try{stringsEmittedByUserPrintouts="",top_level_eval(),p2=pop(),check_stack(),isstr(p2)&&(DEBUG&&console.log(p2.str),DEBUG&&console.log("\n")),p2===symbol(NIL)?(collectedPlainResult=stringsEmittedByUserPrintouts,generateLatex&&(collectedLatexResult="$$"+stringsEmittedByUserPrintouts+"$$")):(collectedPlainResult=print_expr(p2),collectedPlainResult+="\n",generateLatex&&(collectedLatexResult="$$"+collectLatexStringFromReturnValue(p2)+"$$",DEBUG&&console.log("collectedLatexResult: "+collectedLatexResult))),allReturnedPlainStrings+=collectedPlainResult,generateLatex&&(allReturnedLatexStrings+=collectedLatexResult),PRINTOUTRESULT&&(DEBUG&&console.log("printline"),DEBUG&&console.log(collectedPlainResult)),PRINTOUTRESULT&&(DEBUG&&console.log("display:"),print2dascii(p2)),generateLatex&&(allReturnedLatexStrings+="\n")}catch(error1){errorWhileExecution=!0,collectedPlainResult=(error=error1).message,generateLatex&&(collectedLatexResult=turnErrorMessageToLatex(error.message)),PRINTOUTRESULT&&console.log(collectedPlainResult),allReturnedPlainStrings+=collectedPlainResult,""!==collectedPlainResult&&(allReturnedPlainStrings+="\n"),generateLatex&&(allReturnedLatexStrings+=collectedLatexResult,allReturnedLatexStrings+="\n"),init()}}return"\n"===allReturnedPlainStrings[allReturnedPlainStrings.length-1]&&(allReturnedPlainStrings=allReturnedPlainStrings.substring(0,allReturnedPlainStrings.length-1)),generateLatex&&"\n"===allReturnedLatexStrings[allReturnedLatexStrings.length-1]&&(allReturnedLatexStrings=allReturnedLatexStrings.substring(0,allReturnedLatexStrings.length-1)),generateLatex?(DEBUG&&console.log("allReturnedLatexStrings: "+allReturnedLatexStrings),stringToBeReturned=[allReturnedPlainStrings,allReturnedLatexStrings]):stringToBeReturned=allReturnedPlainStrings,TIMING_DEBUGS&&(timingDebugWrite="run time on: "+stringToBeRun+" : "+((new Date).getTime()-timeStart)+"ms",console.log(timingDebugWrite)),allReturnedPlainStrings="",allReturnedLatexStrings="",stringToBeReturned}selftest()},check_stack=function(){if(0!==tos&&stop("stack error"),frame!==TOS&&stop("frame error"),0!==chainOfUserSymbolsNotFunctionsBeingEvaluated.length&&stop("symbols evaluation still ongoing?"),0!==evaluatingAsFloats&&stop("numeric evaluation still ongoing?"),0!==evaluatingPolar)return stop("evaluation of polar still ongoing?")},top_level_eval=function(){var evalledArgument,originalArgument,shouldAutoexpand;if(DEBUG&&console.log("#### top level eval"),trigmode=0,shouldAutoexpand=symbol(AUTOEXPAND),expanding=isZeroAtomOrTensor(get_binding(shouldAutoexpand))?0:1,originalArgument=top(),Eval(),(evalledArgument=top())!==symbol(NIL))if(set_binding(symbol(LAST),evalledArgument),isZeroAtomOrTensor(get_binding(symbol(BAKE)))||(bake(),evalledArgument=top()),originalArgument!==symbol(SYMBOL_I)&&originalArgument!==symbol(SYMBOL_J)||!isimaginaryunit(evalledArgument)){if(isimaginaryunit(get_binding(symbol(SYMBOL_J))))return push(imaginaryunit),push_symbol(SYMBOL_J),subst();if(isimaginaryunit(get_binding(symbol(SYMBOL_I))))return push(imaginaryunit),push_symbol(SYMBOL_I),subst()}else;},check_esc_flag=function(){if(esc_flag)return stop("esc key")},clearAlgebraEnvironment=function(){return do_clearall()},computeDependenciesFromAlgebra=function(codeFromAlgebraBlock){var i,keepState,l1,len,len1,m1,originalcodeFromAlgebraBlock,userSimplificationsInProgramForm;if(DEBUG&&console.log("computeDependenciesFromAlgebra!!!"),originalcodeFromAlgebraBlock=codeFromAlgebraBlock,keepState=!0,called_from_Algebra_block=!0,codeFromAlgebraBlock=normaliseDots(codeFromAlgebraBlock),DEBUG){for(console.log("computeDependenciesFromAlgebra: patterns in the list --------------- "),m1=0,len1=userSimplificationsInListForm.length;m1<len1;m1++)i=userSimplificationsInListForm[m1],console.log(car(i)+","+cdr(i)+")");console.log("...end of list --------------- ")}return called_from_Algebra_block=!1,findDependenciesInScript(codeFromAlgebraBlock,!0)[6]},computeResultsAndJavaScriptFromAlgebra=function(codeFromAlgebraBlock){var code,dependencyInfo,i,keepState,l1,latexResult,len,len1,m1,originalcodeFromAlgebraBlock,readableSummaryOfCode,ref2,result,stringToBeRun,testableStringIsIgnoredHere,timeStartFromAlgebra,userSimplificationsInProgramForm;if(originalcodeFromAlgebraBlock=codeFromAlgebraBlock,keepState=!0,called_from_Algebra_block=!0,timeStartFromAlgebra=(new Date).getTime(),TIMING_DEBUGS&&console.log(" --------- computeResultsAndJavaScriptFromAlgebra input: "+codeFromAlgebraBlock+" at: "+new Date),stringToBeRun=codeFromAlgebraBlock=normaliseDots(codeFromAlgebraBlock),DEBUG){for(console.log("computeResultsAndJavaScriptFromAlgebra: patterns in the list --------------- "),l1=0,len=userSimplificationsInListForm.length;l1<len;l1++)i=userSimplificationsInListForm[l1],console.log(car(i)+","+cdr(i)+")");console.log("...end of list --------------- ")}return testableStringIsIgnoredHere=(ref2=findDependenciesInScript(codeFromAlgebraBlock))[0],result=ref2[1],code=ref2[2],readableSummaryOfCode=ref2[3],latexResult=ref2[4],errorMessage=ref2[5],dependencyInfo=ref2[6],called_from_Algebra_block=!1,""===readableSummaryOfCode&&""===errorMessage||(result+="\n"+readableSummaryOfCode,""!==errorMessage&&(result+="\n"+errorMessage),result=result.replace(/\n/g,"\n\n"),latexResult+="\n$$"+readableSummaryOfCode+"$$",""!==errorMessage&&(latexResult+=turnErrorMessageToLatex(errorMessage)),latexResult=latexResult.replace(/\n/g,"\n\n")),latexResult=(latexResult=latexResult.replace(/\n*/,"")).replace(/\$\$\$\$\n*/g,""),code=(code=code.replace(/Math\./g,"")).replace(/\n/g,"\n\n"),TIMING_DEBUGS&&console.log("computeResultsAndJavaScriptFromAlgebra time (total time from notebook and back) for: "+stringToBeRun+" : "+((new Date).getTime()-timeStartFromAlgebra)+"ms"),{code:code,result:latexResult,latexResult:latexResult,dependencyInfo:dependencyInfo}},(null!=exports?exports:this).run=run,(null!=exports?exports:this).findDependenciesInScript=findDependenciesInScript,(null!=exports?exports:this).computeDependenciesFromAlgebra=computeDependenciesFromAlgebra,(null!=exports?exports:this).computeResultsAndJavaScriptFromAlgebra=computeResultsAndJavaScriptFromAlgebra,(null!=exports?exports:this).clearAlgebraEnvironment=clearAlgebraEnvironment,tos=0,nil_symbols=0,push=function(p){return p.isZero,p===symbol(NIL)&&(nil_symbols++,DEBUG&&console.log("pushing symbol(NIL) #"+nil_symbols)),tos>=frame&&stop("stack overflow"),stack[tos++]=p},moveTos=function(stackPos){if(tos<=stackPos)tos=stackPos;else for(;tos>stackPos;)stack[tos]=null,tos--},top=function(){return stack[tos-1]},pop=function(){var elementToBeReturned;return 0===tos&&stop("stack underflow"),stack[tos-1],elementToBeReturned=stack[--tos],stack[tos]=null,elementToBeReturned},push_frame=function(n){var i,l1,ref2,results;for(i=0,(frame-=n)<tos&&stop("frame overflow, circular reference?"),results=[],i=l1=0,ref2=n;0<=ref2?l1<ref2:l1>ref2;i=0<=ref2?++l1:--l1)results.push(stack[frame+i]=symbol(NIL));return results},pop_frame=function(n){if((frame+=n)>TOS)return stop("frame underflow")},save=function(){return(frame-=10)<tos&&stop("frame overflow, circular reference?"),stack[frame+0]=p0,stack[frame+1]=p1,stack[frame+2]=p2,stack[frame+3]=p3,stack[frame+4]=p4,stack[frame+5]=p5,stack[frame+6]=p6,stack[frame+7]=p7,stack[frame+8]=p8,stack[frame+9]=p9},restore=function(){return frame>TOS-10&&stop("frame underflow"),p0=stack[frame+0],p1=stack[frame+1],p2=stack[frame+2],p3=stack[frame+3],p4=stack[frame+4],p5=stack[frame+5],p6=stack[frame+6],p7=stack[frame+7],p8=stack[frame+8],p9=stack[frame+9],frame+=10},swap=function(){var p,q;return p=pop(),q=pop(),push(p),push(q)},dupl=function(){var p;return p=pop(),push(p),push(p)},$.dupl=dupl,$.swap=swap,$.restore=restore,$.save=save,$.push=push,$.pop=pop,Eval_symbolsinfo=function(){var symbolsinfoToBePrinted;return""!==(symbolsinfoToBePrinted=symbolsinfo())?new_string(symbolsinfoToBePrinted):push_symbol(NIL)},symbolsinfo=function(){var bindingi,i,l1,ref2,ref3,symbolsinfoToBePrinted,symtabi;for(symbolsinfoToBePrinted="",i=l1=ref2=NIL+1,ref3=symtab.length;ref2<=ref3?l1<ref3:l1>ref3;i=ref2<=ref3?++l1:--l1)if(""!==symtab[i].printname)symtabi=symtab[i]+"",bindingi=(binding[i]+"").substring(0,4),symbolsinfoToBePrinted+="symbol: "+symtabi+" size: "+countsize(binding[i])+" value: "+bindingi+"...\n";else if(!1===isSymbolReclaimable[i])break;return symbolsinfoToBePrinted},std_symbol=function(s,n,latexPrint){var p;return(p=symtab[n]).printname=s,p.latexPrint=null!=latexPrint?latexPrint:s},usr_symbol=function(s){var i,l1,ref2;for(i=0,i=l1=0,ref2=NSYM;0<=ref2?l1<ref2:l1>ref2;i=0<=ref2?++l1:--l1){if(s===symtab[i].printname)return symtab[i];if(""===symtab[i].printname)break}return i===NSYM&&stop("symbol table overflow"),symtab[i]=new U,symtab[i].k=SYM,symtab[i].printname=s,binding[i]=symtab[i],isSymbolReclaimable[i]=!1,symtab[i]},get_printname=function(p){return p.k!==SYM&&stop("symbol error"),p.printname},set_binding=function(p,q){var indexFound;return p.k!==SYM&&stop("symbol error"),indexFound=symtab.indexOf(p),-1!==symtab.indexOf(p,indexFound+1)&&console.log("ops, more than one element!"),DEBUG&&console.log("lookup >> set_binding lookup "+indexFound),isSymbolReclaimable[indexFound]=!1,binding[indexFound]=q},get_binding=function(p){var indexFound;return p.k!==SYM&&stop("symbol error"),indexFound=symtab.indexOf(p),-1!==symtab.indexOf(p,indexFound+1)&&console.log("ops, more than one element!"),DEBUG&&console.log("lookup >> get_binding lookup "+indexFound),binding[indexFound]},is_usr_symbol=function(p){var theSymnum;return p.k===SYM&&((theSymnum=symnum(p))>PI&&theSymnum!==SYMBOL_I&&theSymnum!==SYMBOL_IDENTITY_MATRIX)},lookupsTotal=0,symnum=function(p){var indexFound;return lookupsTotal++,p.k!==SYM&&stop("symbol error"),indexFound=symtab.indexOf(p),-1!==symtab.indexOf(p,indexFound+1)&&console.log("ops, more than one element!"),DEBUG&&console.log("lookup >> symnum lookup "+indexFound+" lookup # "+lookupsTotal),indexFound},push_symbol=function(k){return push(symtab[k])},clear_symbols=function(){var i,l1,ref2,ref3,results;for(results=[],i=l1=ref2=NIL+1,ref3=NSYM;ref2<=ref3?l1<ref3:l1>ref3;i=ref2<=ref3?++l1:--l1)if(""!==symtab[i].printname)symtab[i]=new U,symtab[i].k=SYM,binding[i]=symtab[i],results.push(isSymbolReclaimable[i]=!1);else if(!1===isSymbolReclaimable[i])break;return results},collectUserSymbols=function(p,accumulator){var i,l1,ref2;if(null==accumulator&&(accumulator=[]),is_usr_symbol(p)&&-1===accumulator.indexOf(p))accumulator.push(p);else if(istensor(p))for(i=l1=0,ref2=p.tensor.nelem;0<=ref2?l1<ref2:l1>ref2;i=0<=ref2?++l1:--l1)collectUserSymbols(p.tensor.elem[i],accumulator);else for(;iscons(p);)collectUserSymbols(car(p),accumulator),p=cdr(p)},$.get_binding=get_binding,$.set_binding=set_binding,$.usr_symbol=usr_symbol,$.symbolsinfo=symbolsinfo,$.collectUserSymbols=collectUserSymbols,inited||(inited=!0,init()),$.init=init,parse_internal=function(argu){return"string"==typeof argu?scan(argu):"number"==typeof argu?argu%1==0?push_integer(argu):push_double(argu):argu instanceof U?push(argu):(console.warn("unknown argument type",argu),push(symbol(NIL)))},parse=function(argu){var data,error;try{parse_internal(argu),data=pop(),check_stack()}catch(error1){throw error=error1,reset_after_error(),error}return data},exec=function(){var argu,argus,error,fn,l1,len,name,result;for(name=arguments[0],argus=2<=arguments.length?slice.call(arguments,1):[],fn=get_binding(usr_symbol(name)),check_stack(),push(fn),l1=0,len=argus.length;l1<len;l1++)argu=argus[l1],parse_internal(argu);list(1+argus.length),p1=pop(),push(p1);try{top_level_eval(),result=pop(),check_stack()}catch(error1){throw error=error1,reset_after_error(),error}return result},$.exec=exec,$.parse=parse,function(){var builtin_fns,fn,l1,len,results;for(results=[],l1=0,len=(builtin_fns=["abs","add","adj","and","approxratio","arccos","arccosh","arcsin","arcsinh","arctan","arctanh","arg","atomize","besselj","bessely","binding","binomial","ceiling","check","choose","circexp","clear","clearall","clearpatterns","clock","coeff","cofactor","condense","conj","contract","cos","cosh","decomp","defint","deg","denominator","det","derivative","dim","dirac","divisors","do","dot","draw","dsolve","eigen","eigenval","eigenvec","erf","erfc","eval","exp","expand","expcos","expsin","factor","factorial","factorpoly","filter","float","floor","for","Gamma","gcd","hermite","hilbert","imag","component","inner","integral","inv","invg","isinteger","isprime","laguerre","lcm","leading","legendre","log","mod","multiply","not","nroots","number","numerator","operator","or","outer","pattern","patternsinfo","polar","power","prime","print","print2dascii","printcomputer","printlatex","printlist","printhuman","product","quote","quotient","rank","rationalize","real","rect","roots","round","equals","shape","sgn","silentpattern","simplify","sin","sinh","sqrt","stop","subst","sum","symbolsinfo","tan","tanh","taylor","test","testeq","testge","testgt","testle","testlt","transpose","unit","zero"]).length;l1<len;l1++)fn=builtin_fns[l1],results.push($[fn]=exec.bind(this,fn))}(),freeze=function(){var frozenContents,frozenHash,frozenPatterns,frozenSymbols,i,l1,ref2;for(frozenSymbols=[],frozenContents=[],frozenPatterns=[],frozenHash="",i=l1=0,ref2=symtab.length;0<=ref2?l1<ref2:l1>ref2;i=0<=ref2?++l1:--l1)!1===isSymbolReclaimable[i]&&(frozenSymbols.push(symtab[i]),frozenContents.push(binding[i]));return[frozenSymbols,frozenContents,frozenPatterns=userSimplificationsInListForm.slice(0),zero,one,imaginaryunit,getStateHash()]},unfreeze=function(frozen){var frozenContents,frozenPatterns,frozenSymbols,i,l1,ref2;for(frozenSymbols=frozen[0],frozenContents=frozen[1],frozenPatterns=frozen[2],zero=frozen[3],one=frozen[4],imaginaryunit=frozen[5],i=l1=0,ref2=frozenSymbols.length;0<=ref2?l1<ref2:l1>ref2;i=0<=ref2?++l1:--l1)symtab[i]=frozenSymbols[i],binding[i]=frozenContents[i];return userSimplificationsInListForm=frozenPatterns.slice(0)},compareState=function(previousHash){var frozenHash;return(frozenHash=getStateHash())===previousHash},getStateHash=function(){var bindingi,frozenHash,i,l1,len,m1,ref2,ref3,symtabi;for(frozenHash="",i=l1=ref2=NIL+1,ref3=symtab.length;ref2<=ref3?l1<ref3:l1>ref3;i=ref2<=ref3?++l1:--l1)if(""!==symtab[i].printname)frozenHash+=" //"+(symtabi=print_list(symtab[i]))+" : "+(bindingi=print_list(binding[i]));else if(!1===isSymbolReclaimable[i])break;for(m1=0,len=userSimplificationsInListForm.length;m1<len;m1++)frozenHash+=" pattern: "+(i=userSimplificationsInListForm[m1]);return DEBUG&&console.log("frozenHash: "+frozenHash),frozenHash}}).call(this)},{"big-integer":2}],2:[function(require,module,exports){var bigInt=function(undefined){"use strict";var BASE=1e7,LOG_BASE=7,MAX_INT=9007199254740992,MAX_INT_ARR=smallToArray(MAX_INT),DEFAULT_ALPHABET="0123456789abcdefghijklmnopqrstuvwxyz",supportsNativeBigInt="function"==typeof BigInt;function Integer(v,radix,alphabet,caseSensitive){return void 0===v?Integer[0]:void 0!==radix&&(10!=+radix||alphabet)?parseBase(v,radix,alphabet,caseSensitive):parseValue(v)}function BigInteger(value,sign){this.value=value,this.sign=sign,this.isSmall=!1}function SmallInteger(value){this.value=value,this.sign=value<0,this.isSmall=!0}function NativeBigInt(value){this.value=value}function isPrecise(n){return-MAX_INT<n&&n<MAX_INT}function smallToArray(n){return n<1e7?[n]:n<1e14?[n%1e7,Math.floor(n/1e7)]:[n%1e7,Math.floor(n/1e7)%1e7,Math.floor(n/1e14)]}function arrayToSmall(arr){trim(arr);var length=arr.length;if(length<4&&compareAbs(arr,MAX_INT_ARR)<0)switch(length){case 0:return 0;case 1:return arr[0];case 2:return arr[0]+1e7*arr[1];default:return arr[0]+1e7*(arr[1]+1e7*arr[2])}return arr}function trim(v){for(var i=v.length;0===v[--i];);v.length=i+1}function createArray(length){for(var x=new Array(length),i=-1;++i<length;)x[i]=0;return x}function truncate(n){return n>0?Math.floor(n):Math.ceil(n)}function add(a,b){var l_a=a.length,l_b=b.length,r=new Array(l_a),carry=0,base=1e7,sum,i;for(i=0;i<l_b;i++)carry=(sum=a[i]+b[i]+carry)>=1e7?1:0,r[i]=sum-1e7*carry;for(;i<l_a;)carry=1e7===(sum=a[i]+carry)?1:0,r[i++]=sum-1e7*carry;return carry>0&&r.push(carry),r}function addAny(a,b){return a.length>=b.length?add(a,b):add(b,a)}function addSmall(a,carry){var l=a.length,r=new Array(l),base=1e7,sum,i;for(i=0;i<l;i++)sum=a[i]-1e7+carry,carry=Math.floor(sum/1e7),r[i]=sum-1e7*carry,carry+=1;for(;carry>0;)r[i++]=carry%1e7,carry=Math.floor(carry/1e7);return r}function subtract(a,b){var a_l=a.length,b_l=b.length,r=new Array(a_l),borrow=0,base=1e7,i,difference;for(i=0;i<b_l;i++)(difference=a[i]-borrow-b[i])<0?(difference+=1e7,borrow=1):borrow=0,r[i]=difference;for(i=b_l;i<a_l;i++){if(!((difference=a[i]-borrow)<0)){r[i++]=difference;break}difference+=1e7,r[i]=difference}for(;i<a_l;i++)r[i]=a[i];return trim(r),r}function subtractAny(a,b,sign){var value;return compareAbs(a,b)>=0?value=subtract(a,b):(value=subtract(b,a),sign=!sign),"number"==typeof(value=arrayToSmall(value))?(sign&&(value=-value),new SmallInteger(value)):new BigInteger(value,sign)}function subtractSmall(a,b,sign){var l=a.length,r=new Array(l),carry=-b,base=1e7,i,difference;for(i=0;i<l;i++)difference=a[i]+carry,carry=Math.floor(difference/1e7),difference%=1e7,r[i]=difference<0?difference+1e7:difference;return"number"==typeof(r=arrayToSmall(r))?(sign&&(r=-r),new SmallInteger(r)):new BigInteger(r,sign)}function multiplyLong(a,b){var a_l=a.length,b_l=b.length,l,r=createArray(a_l+b_l),base=1e7,product,carry,i,a_i,b_j;for(i=0;i<a_l;++i){a_i=a[i];for(var j=0;j<b_l;++j)product=a_i*(b_j=b[j])+r[i+j],carry=Math.floor(product/1e7),r[i+j]=product-1e7*carry,r[i+j+1]+=carry}return trim(r),r}function multiplySmall(a,b){var l=a.length,r=new Array(l),base=1e7,carry=0,product,i;for(i=0;i<l;i++)product=a[i]*b+carry,carry=Math.floor(product/1e7),r[i]=product-1e7*carry;for(;carry>0;)r[i++]=carry%1e7,carry=Math.floor(carry/1e7);return r}function shiftLeft(x,n){for(var r=[];n-- >0;)r.push(0);return r.concat(x)}function multiplyKaratsuba(x,y){var n=Math.max(x.length,y.length);if(n<=30)return multiplyLong(x,y);n=Math.ceil(n/2);var b=x.slice(n),a=x.slice(0,n),d=y.slice(n),c=y.slice(0,n),ac=multiplyKaratsuba(a,c),bd=multiplyKaratsuba(b,d),abcd=multiplyKaratsuba(addAny(a,b),addAny(c,d)),product=addAny(addAny(ac,shiftLeft(subtract(subtract(abcd,ac),bd),n)),shiftLeft(bd,2*n));return trim(product),product}function useKaratsuba(l1,l2){return-.012*l1-.012*l2+15e-6*l1*l2>0}function multiplySmallAndArray(a,b,sign){return new BigInteger(a<1e7?multiplySmall(b,a):multiplyLong(b,smallToArray(a)),sign)}function square(a){var l=a.length,r=createArray(l+l),base=1e7,product,carry,i,a_i,a_j;for(i=0;i<l;i++){carry=0-(a_i=a[i])*a_i;for(var j=i;j<l;j++)product=a_i*(a_j=a[j])*2+r[i+j]+carry,carry=Math.floor(product/1e7),r[i+j]=product-1e7*carry;r[i+l]=carry}return trim(r),r}function divMod1(a,b){var a_l=a.length,b_l=b.length,base=1e7,result=createArray(b.length),divisorMostSignificantDigit=b[b_l-1],lambda=Math.ceil(1e7/(2*divisorMostSignificantDigit)),remainder=multiplySmall(a,lambda),divisor=multiplySmall(b,lambda),quotientDigit,shift,carry,borrow,i,l,q;for(remainder.length<=a_l&&remainder.push(0),divisor.push(0),divisorMostSignificantDigit=divisor[b_l-1],shift=a_l-b_l;shift>=0;shift--){for(quotientDigit=1e7-1,remainder[shift+b_l]!==divisorMostSignificantDigit&&(quotientDigit=Math.floor((1e7*remainder[shift+b_l]+remainder[shift+b_l-1])/divisorMostSignificantDigit)),carry=0,borrow=0,l=divisor.length,i=0;i<l;i++)carry+=quotientDigit*divisor[i],q=Math.floor(carry/1e7),borrow+=remainder[shift+i]-(carry-1e7*q),carry=q,borrow<0?(remainder[shift+i]=borrow+1e7,borrow=-1):(remainder[shift+i]=borrow,borrow=0);for(;0!==borrow;){for(quotientDigit-=1,carry=0,i=0;i<l;i++)(carry+=remainder[shift+i]-1e7+divisor[i])<0?(remainder[shift+i]=carry+1e7,carry=0):(remainder[shift+i]=carry,carry=1);borrow+=carry}result[shift]=quotientDigit}return remainder=divModSmall(remainder,lambda)[0],[arrayToSmall(result),arrayToSmall(remainder)]}function divMod2(a,b){for(var a_l=a.length,b_l=b.length,result=[],part=[],base=1e7,guess,xlen,highx,highy,check;a_l;)if(part.unshift(a[--a_l]),trim(part),compareAbs(part,b)<0)result.push(0);else{highx=1e7*part[(xlen=part.length)-1]+part[xlen-2],highy=1e7*b[b_l-1]+b[b_l-2],xlen>b_l&&(highx=1e7*(highx+1)),guess=Math.ceil(highx/highy);do{if(compareAbs(check=multiplySmall(b,guess),part)<=0)break;guess--}while(guess);result.push(guess),part=subtract(part,check)}return result.reverse(),[arrayToSmall(result),arrayToSmall(part)]}function divModSmall(value,lambda){var length=value.length,quotient=createArray(length),base=1e7,i,q,remainder,divisor;for(remainder=0,i=length-1;i>=0;--i)remainder=(divisor=1e7*remainder+value[i])-(q=truncate(divisor/lambda))*lambda,quotient[i]=0|q;return[quotient,0|remainder]}function divModAny(self,v){var value,n=parseValue(v);if(supportsNativeBigInt)return[new NativeBigInt(self.value/n.value),new NativeBigInt(self.value%n.value)];var a=self.value,b=n.value,quotient;if(0===b)throw new Error("Cannot divide by zero");if(self.isSmall)return n.isSmall?[new SmallInteger(truncate(a/b)),new SmallInteger(a%b)]:[Integer[0],self];if(n.isSmall){if(1===b)return[self,Integer[0]];if(-1==b)return[self.negate(),Integer[0]];var abs=Math.abs(b);if(abs<1e7){quotient=arrayToSmall((value=divModSmall(a,abs))[0]);var remainder=value[1];return self.sign&&(remainder=-remainder),"number"==typeof quotient?(self.sign!==n.sign&&(quotient=-quotient),[new SmallInteger(quotient),new SmallInteger(remainder)]):[new BigInteger(quotient,self.sign!==n.sign),new SmallInteger(remainder)]}b=smallToArray(abs)}var comparison=compareAbs(a,b);if(-1===comparison)return[Integer[0],self];if(0===comparison)return[Integer[self.sign===n.sign?1:-1],Integer[0]];quotient=(value=a.length+b.length<=200?divMod1(a,b):divMod2(a,b))[0];var qSign=self.sign!==n.sign,mod=value[1],mSign=self.sign;return"number"==typeof quotient?(qSign&&(quotient=-quotient),quotient=new SmallInteger(quotient)):quotient=new BigInteger(quotient,qSign),"number"==typeof mod?(mSign&&(mod=-mod),mod=new SmallInteger(mod)):mod=new BigInteger(mod,mSign),[quotient,mod]}function compareAbs(a,b){if(a.length!==b.length)return a.length>b.length?1:-1;for(var i=a.length-1;i>=0;i--)if(a[i]!==b[i])return a[i]>b[i]?1:-1;return 0}function isBasicPrime(v){var n=v.abs();return!n.isUnit()&&(!!(n.equals(2)||n.equals(3)||n.equals(5))||!(n.isEven()||n.isDivisibleBy(3)||n.isDivisibleBy(5))&&(!!n.lesser(49)||void 0))}function millerRabinTest(n,a){for(var nPrev=n.prev(),b=nPrev,r=0,d,t,i,x;b.isEven();)b=b.divide(2),r++;next:for(i=0;i<a.length;i++)if(!n.lesser(a[i])&&!(x=bigInt(a[i]).modPow(b,n)).isUnit()&&!x.equals(nPrev)){for(d=r-1;0!=d;d--){if((x=x.square().mod(n)).isUnit())return!1;if(x.equals(nPrev))continue next}return!1}return!0}BigInteger.prototype=Object.create(Integer.prototype),SmallInteger.prototype=Object.create(Integer.prototype),NativeBigInt.prototype=Object.create(Integer.prototype),BigInteger.prototype.add=function(v){var n=parseValue(v);if(this.sign!==n.sign)return this.subtract(n.negate());var a=this.value,b=n.value;return n.isSmall?new BigInteger(addSmall(a,Math.abs(b)),this.sign):new BigInteger(addAny(a,b),this.sign)},BigInteger.prototype.plus=BigInteger.prototype.add,SmallInteger.prototype.add=function(v){var n=parseValue(v),a=this.value;if(a<0!==n.sign)return this.subtract(n.negate());var b=n.value;if(n.isSmall){if(isPrecise(a+b))return new SmallInteger(a+b);b=smallToArray(Math.abs(b))}return new BigInteger(addSmall(b,Math.abs(a)),a<0)},SmallInteger.prototype.plus=SmallInteger.prototype.add,NativeBigInt.prototype.add=function(v){return new NativeBigInt(this.value+parseValue(v).value)},NativeBigInt.prototype.plus=NativeBigInt.prototype.add,BigInteger.prototype.subtract=function(v){var n=parseValue(v);if(this.sign!==n.sign)return this.add(n.negate());var a=this.value,b=n.value;return n.isSmall?subtractSmall(a,Math.abs(b),this.sign):subtractAny(a,b,this.sign)},BigInteger.prototype.minus=BigInteger.prototype.subtract,SmallInteger.prototype.subtract=function(v){var n=parseValue(v),a=this.value;if(a<0!==n.sign)return this.add(n.negate());var b=n.value;return n.isSmall?new SmallInteger(a-b):subtractSmall(b,Math.abs(a),a>=0)},SmallInteger.prototype.minus=SmallInteger.prototype.subtract,NativeBigInt.prototype.subtract=function(v){return new NativeBigInt(this.value-parseValue(v).value)},NativeBigInt.prototype.minus=NativeBigInt.prototype.subtract,BigInteger.prototype.negate=function(){return new BigInteger(this.value,!this.sign)},SmallInteger.prototype.negate=function(){var sign=this.sign,small=new SmallInteger(-this.value);return small.sign=!sign,small},NativeBigInt.prototype.negate=function(){return new NativeBigInt(-this.value)},BigInteger.prototype.abs=function(){return new BigInteger(this.value,!1)},SmallInteger.prototype.abs=function(){return new SmallInteger(Math.abs(this.value))},NativeBigInt.prototype.abs=function(){return new NativeBigInt(this.value>=0?this.value:-this.value)},BigInteger.prototype.multiply=function(v){var n=parseValue(v),a=this.value,b=n.value,sign=this.sign!==n.sign,abs;if(n.isSmall){if(0===b)return Integer[0];if(1===b)return this;if(-1===b)return this.negate();if((abs=Math.abs(b))<1e7)return new BigInteger(multiplySmall(a,abs),sign);b=smallToArray(abs)}return useKaratsuba(a.length,b.length)?new BigInteger(multiplyKaratsuba(a,b),sign):new BigInteger(multiplyLong(a,b),sign)},BigInteger.prototype.times=BigInteger.prototype.multiply,SmallInteger.prototype._multiplyBySmall=function(a){return isPrecise(a.value*this.value)?new SmallInteger(a.value*this.value):multiplySmallAndArray(Math.abs(a.value),smallToArray(Math.abs(this.value)),this.sign!==a.sign)},BigInteger.prototype._multiplyBySmall=function(a){return 0===a.value?Integer[0]:1===a.value?this:-1===a.value?this.negate():multiplySmallAndArray(Math.abs(a.value),this.value,this.sign!==a.sign)},SmallInteger.prototype.multiply=function(v){return parseValue(v)._multiplyBySmall(this)},SmallInteger.prototype.times=SmallInteger.prototype.multiply,NativeBigInt.prototype.multiply=function(v){return new NativeBigInt(this.value*parseValue(v).value)},NativeBigInt.prototype.times=NativeBigInt.prototype.multiply,BigInteger.prototype.square=function(){return new BigInteger(square(this.value),!1)},SmallInteger.prototype.square=function(){var value=this.value*this.value;return isPrecise(value)?new SmallInteger(value):new BigInteger(square(smallToArray(Math.abs(this.value))),!1)},NativeBigInt.prototype.square=function(v){return new NativeBigInt(this.value*this.value)},BigInteger.prototype.divmod=function(v){var result=divModAny(this,v);return{quotient:result[0],remainder:result[1]}},NativeBigInt.prototype.divmod=SmallInteger.prototype.divmod=BigInteger.prototype.divmod,BigInteger.prototype.divide=function(v){return divModAny(this,v)[0]},NativeBigInt.prototype.over=NativeBigInt.prototype.divide=function(v){return new NativeBigInt(this.value/parseValue(v).value)},SmallInteger.prototype.over=SmallInteger.prototype.divide=BigInteger.prototype.over=BigInteger.prototype.divide,BigInteger.prototype.mod=function(v){return divModAny(this,v)[1]},NativeBigInt.prototype.mod=NativeBigInt.prototype.remainder=function(v){return new NativeBigInt(this.value%parseValue(v).value)},SmallInteger.prototype.remainder=SmallInteger.prototype.mod=BigInteger.prototype.remainder=BigInteger.prototype.mod,BigInteger.prototype.pow=function(v){var n=parseValue(v),a=this.value,b=n.value,value,x,y;if(0===b)return Integer[1];if(0===a)return Integer[0];if(1===a)return Integer[1];if(-1===a)return n.isEven()?Integer[1]:Integer[-1];if(n.sign)return Integer[0];if(!n.isSmall)throw new Error("The exponent "+n.toString()+" is too large.");if(this.isSmall&&isPrecise(value=Math.pow(a,b)))return new SmallInteger(truncate(value));for(x=this,y=Integer[1];!0&b&&(y=y.times(x),--b),0!==b;)b/=2,x=x.square();return y},SmallInteger.prototype.pow=BigInteger.prototype.pow,NativeBigInt.prototype.pow=function(v){var n=parseValue(v),a=this.value,b=n.value,_0=BigInt(0),_1=BigInt(1),_2=BigInt(2);if(b===_0)return Integer[1];if(a===_0)return Integer[0];if(a===_1)return Integer[1];if(a===BigInt(-1))return n.isEven()?Integer[1]:Integer[-1];if(n.isNegative())return new NativeBigInt(_0);for(var x=this,y=Integer[1];(b&_1)===_1&&(y=y.times(x),--b),b!==_0;)b/=_2,x=x.square();return y},BigInteger.prototype.modPow=function(exp,mod){if(exp=parseValue(exp),(mod=parseValue(mod)).isZero())throw new Error("Cannot take modPow with modulus 0");for(var r=Integer[1],base=this.mod(mod);exp.isPositive();){if(base.isZero())return Integer[0];exp.isOdd()&&(r=r.multiply(base).mod(mod)),exp=exp.divide(2),base=base.square().mod(mod)}return r},NativeBigInt.prototype.modPow=SmallInteger.prototype.modPow=BigInteger.prototype.modPow,BigInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=this.value,b=n.value;return n.isSmall?1:compareAbs(a,b)},SmallInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=Math.abs(this.value),b=n.value;return n.isSmall?a===(b=Math.abs(b))?0:a>b?1:-1:-1},NativeBigInt.prototype.compareAbs=function(v){var a=this.value,b=parseValue(v).value;return(a=a>=0?a:-a)===(b=b>=0?b:-b)?0:a>b?1:-1},BigInteger.prototype.compare=function(v){if(v===1/0)return-1;if(v===-1/0)return 1;var n=parseValue(v),a=this.value,b=n.value;return this.sign!==n.sign?n.sign?1:-1:n.isSmall?this.sign?-1:1:compareAbs(a,b)*(this.sign?-1:1)},BigInteger.prototype.compareTo=BigInteger.prototype.compare,SmallInteger.prototype.compare=function(v){if(v===1/0)return-1;if(v===-1/0)return 1;var n=parseValue(v),a=this.value,b=n.value;return n.isSmall?a==b?0:a>b?1:-1:a<0!==n.sign?a<0?-1:1:a<0?1:-1},SmallInteger.prototype.compareTo=SmallInteger.prototype.compare,NativeBigInt.prototype.compare=function(v){if(v===1/0)return-1;if(v===-1/0)return 1;var a=this.value,b=parseValue(v).value;return a===b?0:a>b?1:-1},NativeBigInt.prototype.compareTo=NativeBigInt.prototype.compare,BigInteger.prototype.equals=function(v){return 0===this.compare(v)},NativeBigInt.prototype.eq=NativeBigInt.prototype.equals=SmallInteger.prototype.eq=SmallInteger.prototype.equals=BigInteger.prototype.eq=BigInteger.prototype.equals,BigInteger.prototype.notEquals=function(v){return 0!==this.compare(v)},NativeBigInt.prototype.neq=NativeBigInt.prototype.notEquals=SmallInteger.prototype.neq=SmallInteger.prototype.notEquals=BigInteger.prototype.neq=BigInteger.prototype.notEquals,BigInteger.prototype.greater=function(v){return this.compare(v)>0},NativeBigInt.prototype.gt=NativeBigInt.prototype.greater=SmallInteger.prototype.gt=SmallInteger.prototype.greater=BigInteger.prototype.gt=BigInteger.prototype.greater,BigInteger.prototype.lesser=function(v){return this.compare(v)<0},NativeBigInt.prototype.lt=NativeBigInt.prototype.lesser=SmallInteger.prototype.lt=SmallInteger.prototype.lesser=BigInteger.prototype.lt=BigInteger.prototype.lesser,BigInteger.prototype.greaterOrEquals=function(v){return this.compare(v)>=0},NativeBigInt.prototype.geq=NativeBigInt.prototype.greaterOrEquals=SmallInteger.prototype.geq=SmallInteger.prototype.greaterOrEquals=BigInteger.prototype.geq=BigInteger.prototype.greaterOrEquals,BigInteger.prototype.lesserOrEquals=function(v){return this.compare(v)<=0},NativeBigInt.prototype.leq=NativeBigInt.prototype.lesserOrEquals=SmallInteger.prototype.leq=SmallInteger.prototype.lesserOrEquals=BigInteger.prototype.leq=BigInteger.prototype.lesserOrEquals,BigInteger.prototype.isEven=function(){return 0==(1&this.value[0])},SmallInteger.prototype.isEven=function(){return 0==(1&this.value)},NativeBigInt.prototype.isEven=function(){return(this.value&BigInt(1))===BigInt(0)},BigInteger.prototype.isOdd=function(){return 1==(1&this.value[0])},SmallInteger.prototype.isOdd=function(){return 1==(1&this.value)},NativeBigInt.prototype.isOdd=function(){return(this.value&BigInt(1))===BigInt(1)},BigInteger.prototype.isPositive=function(){return!this.sign},SmallInteger.prototype.isPositive=function(){return this.value>0},NativeBigInt.prototype.isPositive=SmallInteger.prototype.isPositive,BigInteger.prototype.isNegative=function(){return this.sign},SmallInteger.prototype.isNegative=function(){return this.value<0},NativeBigInt.prototype.isNegative=SmallInteger.prototype.isNegative,BigInteger.prototype.isUnit=function(){return!1},SmallInteger.prototype.isUnit=function(){return 1===Math.abs(this.value)},NativeBigInt.prototype.isUnit=function(){return this.abs().value===BigInt(1)},BigInteger.prototype.isZero=function(){return!1},SmallInteger.prototype.isZero=function(){return 0===this.value},NativeBigInt.prototype.isZero=function(){return this.value===BigInt(0)},BigInteger.prototype.isDivisibleBy=function(v){var n=parseValue(v);return!n.isZero()&&(!!n.isUnit()||(0===n.compareAbs(2)?this.isEven():this.mod(n).isZero()))},NativeBigInt.prototype.isDivisibleBy=SmallInteger.prototype.isDivisibleBy=BigInteger.prototype.isDivisibleBy,BigInteger.prototype.isPrime=function(strict){var isPrime=isBasicPrime(this);if(void 0!==isPrime)return isPrime;var n=this.abs(),bits=n.bitLength();if(bits<=64)return millerRabinTest(n,[2,3,5,7,11,13,17,19,23,29,31,37]);for(var logN=Math.log(2)*bits.toJSNumber(),t=Math.ceil(!0===strict?2*Math.pow(logN,2):logN),a=[],i=0;i<t;i++)a.push(bigInt(i+2));return millerRabinTest(n,a)},NativeBigInt.prototype.isPrime=SmallInteger.prototype.isPrime=BigInteger.prototype.isPrime,BigInteger.prototype.isProbablePrime=function(iterations){var isPrime=isBasicPrime(this);if(void 0!==isPrime)return isPrime;for(var n=this.abs(),t=void 0===iterations?5:iterations,a=[],i=0;i<t;i++)a.push(bigInt.randBetween(2,n.minus(2)));return millerRabinTest(n,a)},NativeBigInt.prototype.isProbablePrime=SmallInteger.prototype.isProbablePrime=BigInteger.prototype.isProbablePrime,BigInteger.prototype.modInv=function(n){for(var t=bigInt.zero,newT=bigInt.one,r=parseValue(n),newR=this.abs(),q,lastT,lastR;!newR.isZero();)q=r.divide(newR),lastT=t,lastR=r,t=newT,r=newR,newT=lastT.subtract(q.multiply(newT)),newR=lastR.subtract(q.multiply(newR));if(!r.isUnit())throw new Error(this.toString()+" and "+n.toString()+" are not co-prime");return-1===t.compare(0)&&(t=t.add(n)),this.isNegative()?t.negate():t},NativeBigInt.prototype.modInv=SmallInteger.prototype.modInv=BigInteger.prototype.modInv,BigInteger.prototype.next=function(){var value=this.value;return this.sign?subtractSmall(value,1,this.sign):new BigInteger(addSmall(value,1),this.sign)},SmallInteger.prototype.next=function(){var value=this.value;return value+1<MAX_INT?new SmallInteger(value+1):new BigInteger(MAX_INT_ARR,!1)},NativeBigInt.prototype.next=function(){return new NativeBigInt(this.value+BigInt(1))},BigInteger.prototype.prev=function(){var value=this.value;return this.sign?new BigInteger(addSmall(value,1),!0):subtractSmall(value,1,this.sign)},SmallInteger.prototype.prev=function(){var value=this.value;return value-1>-MAX_INT?new SmallInteger(value-1):new BigInteger(MAX_INT_ARR,!0)},NativeBigInt.prototype.prev=function(){return new NativeBigInt(this.value-BigInt(1))};for(var powersOfTwo=[1];2*powersOfTwo[powersOfTwo.length-1]<=1e7;)powersOfTwo.push(2*powersOfTwo[powersOfTwo.length-1]);var powers2Length=powersOfTwo.length,highestPower2=powersOfTwo[powers2Length-1];function shift_isSmall(n){return Math.abs(n)<=1e7}function bitwise(x,y,fn){y=parseValue(y);for(var xSign=x.isNegative(),ySign=y.isNegative(),xRem=xSign?x.not():x,yRem=ySign?y.not():y,xDigit=0,yDigit=0,xDivMod=null,yDivMod=null,result=[];!xRem.isZero()||!yRem.isZero();)xDigit=(xDivMod=divModAny(xRem,highestPower2))[1].toJSNumber(),xSign&&(xDigit=highestPower2-1-xDigit),yDigit=(yDivMod=divModAny(yRem,highestPower2))[1].toJSNumber(),ySign&&(yDigit=highestPower2-1-yDigit),xRem=xDivMod[0],yRem=yDivMod[0],result.push(fn(xDigit,yDigit));for(var sum=0!==fn(xSign?1:0,ySign?1:0)?bigInt(-1):bigInt(0),i=result.length-1;i>=0;i-=1)sum=sum.multiply(highestPower2).add(bigInt(result[i]));return sum}BigInteger.prototype.shiftLeft=function(v){var n=parseValue(v).toJSNumber();if(!shift_isSmall(n))throw new Error(String(n)+" is too large for shifting.");if(n<0)return this.shiftRight(-n);var result=this;if(result.isZero())return result;for(;n>=powers2Length;)result=result.multiply(highestPower2),n-=powers2Length-1;return result.multiply(powersOfTwo[n])},NativeBigInt.prototype.shiftLeft=SmallInteger.prototype.shiftLeft=BigInteger.prototype.shiftLeft,BigInteger.prototype.shiftRight=function(v){var remQuo,n=parseValue(v).toJSNumber();if(!shift_isSmall(n))throw new Error(String(n)+" is too large for shifting.");if(n<0)return this.shiftLeft(-n);for(var result=this;n>=powers2Length;){if(result.isZero()||result.isNegative()&&result.isUnit())return result;result=(remQuo=divModAny(result,highestPower2))[1].isNegative()?remQuo[0].prev():remQuo[0],n-=powers2Length-1}return(remQuo=divModAny(result,powersOfTwo[n]))[1].isNegative()?remQuo[0].prev():remQuo[0]},NativeBigInt.prototype.shiftRight=SmallInteger.prototype.shiftRight=BigInteger.prototype.shiftRight,BigInteger.prototype.not=function(){return this.negate().prev()},NativeBigInt.prototype.not=SmallInteger.prototype.not=BigInteger.prototype.not,BigInteger.prototype.and=function(n){return bitwise(this,n,(function(a,b){return a&b}))},NativeBigInt.prototype.and=SmallInteger.prototype.and=BigInteger.prototype.and,BigInteger.prototype.or=function(n){return bitwise(this,n,(function(a,b){return a|b}))},NativeBigInt.prototype.or=SmallInteger.prototype.or=BigInteger.prototype.or,BigInteger.prototype.xor=function(n){return bitwise(this,n,(function(a,b){return a^b}))},NativeBigInt.prototype.xor=SmallInteger.prototype.xor=BigInteger.prototype.xor;var LOBMASK_I=1<<30,LOBMASK_BI=1073758208;function roughLOB(n){var v=n.value,x="number"==typeof v?v|1<<30:"bigint"==typeof v?v|BigInt(1<<30):v[0]+1e7*v[1]|1073758208;return x&-x}function integerLogarithm(value,base){if(base.compareTo(value)<=0){var tmp=integerLogarithm(value,base.square(base)),p=tmp.p,e=tmp.e,t=p.multiply(base);return t.compareTo(value)<=0?{p:t,e:2*e+1}:{p:p,e:2*e}}return{p:bigInt(1),e:0}}function max(a,b){return a=parseValue(a),b=parseValue(b),a.greater(b)?a:b}function min(a,b){return a=parseValue(a),b=parseValue(b),a.lesser(b)?a:b}function gcd(a,b){if(a=parseValue(a).abs(),b=parseValue(b).abs(),a.equals(b))return a;if(a.isZero())return b;if(b.isZero())return a;for(var c=Integer[1],d,t;a.isEven()&&b.isEven();)d=min(roughLOB(a),roughLOB(b)),a=a.divide(d),b=b.divide(d),c=c.multiply(d);for(;a.isEven();)a=a.divide(roughLOB(a));do{for(;b.isEven();)b=b.divide(roughLOB(b));a.greater(b)&&(t=b,b=a,a=t),b=b.subtract(a)}while(!b.isZero());return c.isUnit()?a:a.multiply(c)}function lcm(a,b){return a=parseValue(a).abs(),b=parseValue(b).abs(),a.divide(gcd(a,b)).multiply(b)}function randBetween(a,b){var low=min(a=parseValue(a),b=parseValue(b)),high,range=max(a,b).subtract(low).add(1);if(range.isSmall)return low.add(Math.floor(Math.random()*range));for(var digits=toBase(range,1e7).value,result=[],restricted=!0,i=0;i<digits.length;i++){var top=restricted?digits[i]:1e7,digit=truncate(Math.random()*top);result.push(digit),digit<top&&(restricted=!1)}return low.add(Integer.fromArray(result,1e7,!1))}BigInteger.prototype.bitLength=function(){var n=this;return n.compareTo(bigInt(0))<0&&(n=n.negate().subtract(bigInt(1))),0===n.compareTo(bigInt(0))?bigInt(0):bigInt(integerLogarithm(n,bigInt(2)).e).add(bigInt(1))},NativeBigInt.prototype.bitLength=SmallInteger.prototype.bitLength=BigInteger.prototype.bitLength;var parseBase=function(text,base,alphabet,caseSensitive){alphabet=alphabet||DEFAULT_ALPHABET,text=String(text),caseSensitive||(text=text.toLowerCase(),alphabet=alphabet.toLowerCase());var length=text.length,i,absBase=Math.abs(base),alphabetValues={};for(i=0;i<alphabet.length;i++)alphabetValues[alphabet[i]]=i;for(i=0;i<length;i++){var c;if("-"!==(c=text[i])&&(c in alphabetValues&&alphabetValues[c]>=absBase)){if("1"===c&&1===absBase)continue;throw new Error(c+" is not a valid digit in base "+base+".")}}base=parseValue(base);var digits=[],isNegative="-"===text[0];for(i=isNegative?1:0;i<text.length;i++){var c;if((c=text[i])in alphabetValues)digits.push(parseValue(alphabetValues[c]));else{if("<"!==c)throw new Error(c+" is not a valid character");var start=i;do{i++}while(">"!==text[i]&&i<text.length);digits.push(parseValue(text.slice(start+1,i)))}}return parseBaseFromArray(digits,base,isNegative)};function parseBaseFromArray(digits,base,isNegative){var val=Integer[0],pow=Integer[1],i;for(i=digits.length-1;i>=0;i--)val=val.add(digits[i].times(pow)),pow=pow.times(base);return isNegative?val.negate():val}function stringify(digit,alphabet){return digit<(alphabet=alphabet||DEFAULT_ALPHABET).length?alphabet[digit]:"<"+digit+">"}function toBase(n,base){if((base=bigInt(base)).isZero()){if(n.isZero())return{value:[0],isNegative:!1};throw new Error("Cannot convert nonzero numbers to base 0.")}if(base.equals(-1)){if(n.isZero())return{value:[0],isNegative:!1};if(n.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-n.toJSNumber())).map(Array.prototype.valueOf,[1,0])),isNegative:!1};var arr=Array.apply(null,Array(n.toJSNumber()-1)).map(Array.prototype.valueOf,[0,1]);return arr.unshift([1]),{value:[].concat.apply([],arr),isNegative:!1}}var neg=!1;if(n.isNegative()&&base.isPositive()&&(neg=!0,n=n.abs()),base.isUnit())return n.isZero()?{value:[0],isNegative:!1}:{value:Array.apply(null,Array(n.toJSNumber())).map(Number.prototype.valueOf,1),isNegative:neg};for(var out=[],left=n,divmod;left.isNegative()||left.compareAbs(base)>=0;){divmod=left.divmod(base),left=divmod.quotient;var digit=divmod.remainder;digit.isNegative()&&(digit=base.minus(digit).abs(),left=left.next()),out.push(digit.toJSNumber())}return out.push(left.toJSNumber()),{value:out.reverse(),isNegative:neg}}function toBaseString(n,base,alphabet){var arr=toBase(n,base);return(arr.isNegative?"-":"")+arr.value.map((function(x){return stringify(x,alphabet)})).join("")}function parseStringValue(v){if(isPrecise(+v)){var x=+v;if(x===truncate(x))return supportsNativeBigInt?new NativeBigInt(BigInt(x)):new SmallInteger(x);throw new Error("Invalid integer: "+v)}var sign="-"===v[0];sign&&(v=v.slice(1));var split=v.split(/e/i),isValid;if(split.length>2)throw new Error("Invalid integer: "+split.join("e"));if(2===split.length){var exp=split[1];if("+"===exp[0]&&(exp=exp.slice(1)),(exp=+exp)!==truncate(exp)||!isPrecise(exp))throw new Error("Invalid integer: "+exp+" is not a valid exponent.");var text=split[0],decimalPlace=text.indexOf(".");if(decimalPlace>=0&&(exp-=text.length-decimalPlace-1,text=text.slice(0,decimalPlace)+text.slice(decimalPlace+1)),exp<0)throw new Error("Cannot include negative exponent part for integers");v=text+=new Array(exp+1).join("0")}if(!/^([0-9][0-9]*)$/.test(v))throw new Error("Invalid integer: "+v);if(supportsNativeBigInt)return new NativeBigInt(BigInt(sign?"-"+v:v));for(var r=[],max=v.length,l=7,min=max-7;max>0;)r.push(+v.slice(min,max)),(min-=7)<0&&(min=0),max-=7;return trim(r),new BigInteger(r,sign)}function parseNumberValue(v){if(supportsNativeBigInt)return new NativeBigInt(BigInt(v));if(isPrecise(v)){if(v!==truncate(v))throw new Error(v+" is not an integer.");return new SmallInteger(v)}return parseStringValue(v.toString())}function parseValue(v){return"number"==typeof v?parseNumberValue(v):"string"==typeof v?parseStringValue(v):"bigint"==typeof v?new NativeBigInt(v):v}BigInteger.prototype.toArray=function(radix){return toBase(this,radix)},SmallInteger.prototype.toArray=function(radix){return toBase(this,radix)},NativeBigInt.prototype.toArray=function(radix){return toBase(this,radix)},BigInteger.prototype.toString=function(radix,alphabet){if(void 0===radix&&(radix=10),10!==radix)return toBaseString(this,radix,alphabet);for(var v=this.value,l=v.length,str=String(v[--l]),zeros="0000000",digit;--l>=0;)digit=String(v[l]),str+=zeros.slice(digit.length)+digit;var sign;return(this.sign?"-":"")+str},SmallInteger.prototype.toString=function(radix,alphabet){return void 0===radix&&(radix=10),10!=radix?toBaseString(this,radix,alphabet):String(this.value)},NativeBigInt.prototype.toString=SmallInteger.prototype.toString,NativeBigInt.prototype.toJSON=BigInteger.prototype.toJSON=SmallInteger.prototype.toJSON=function(){return this.toString()},BigInteger.prototype.valueOf=function(){return parseInt(this.toString(),10)},BigInteger.prototype.toJSNumber=BigInteger.prototype.valueOf,SmallInteger.prototype.valueOf=function(){return this.value},SmallInteger.prototype.toJSNumber=SmallInteger.prototype.valueOf,NativeBigInt.prototype.valueOf=NativeBigInt.prototype.toJSNumber=function(){return parseInt(this.toString(),10)};for(var i=0;i<1e3;i++)Integer[i]=parseValue(i),i>0&&(Integer[-i]=parseValue(-i));return Integer.one=Integer[1],Integer.zero=Integer[0],Integer.minusOne=Integer[-1],Integer.max=max,Integer.min=min,Integer.gcd=gcd,Integer.lcm=lcm,Integer.isInstance=function(x){return x instanceof BigInteger||x instanceof SmallInteger||x instanceof NativeBigInt},Integer.randBetween=randBetween,Integer.fromArray=function(digits,base,isNegative){return parseBaseFromArray(digits.map(parseValue),parseValue(base||10),isNegative)},Integer}();void 0!==module&&module.hasOwnProperty("exports")&&(module.exports=bigInt),"function"==typeof define&&define.amd&&define("big-integer",[],(function(){return bigInt}))},{}],3:[function(require,module,exports){window.Algebrite=require("../dist/algebrite")},{"../dist/algebrite":1}]},{},[3]);